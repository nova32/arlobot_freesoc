ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Right_Phase_Counter.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Right_Phase_Counter_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Right_Phase_Counter_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Right_Phase_Counter_Enable, %function
  24              	Right_Phase_Counter_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Right_Phase_Counter.c"
   1:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * File Name: Right_Phase_Counter.c  
   3:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
   5:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Description:
   6:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
   9:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   Note:
  10:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *     None
  11:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
  12:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
  19:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #include "Right_Phase_Counter.h"
  20:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
  21:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint8 Right_Phase_Counter_initVar = 0u;
  22:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
  23:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
  24:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_Init
  26:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
  27:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
  28:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *     Initialize to the schematic state
  29:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * 
  30:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void  
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 2


  32:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
  33:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
  34:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
  35:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
  36:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_Init(void) 
  38:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
  39:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!Right_Phase_Counter_UsingFixedFunction && !Right_Phase_Counter_ControlRegRemoved)
  40:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             uint8 ctrl;
  41:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!Right_Phase_Counter_UsingFixedFunction && !Right_Phase_Counter_ControlRegRemove
  42:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
  43:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if(!Right_Phase_Counter_UsingFixedFunction) 
  44:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Interrupt State Backup for Critical Region*/
  45:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             uint8 Right_Phase_Counter_interruptState;
  46:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!Right_Phase_Counter_UsingFixedFunction) */
  47:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
  48:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (Right_Phase_Counter_UsingFixedFunction)
  49:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_CONTROL &= Right_Phase_Counter_CTRL_ENABLE;
  51:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  52:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Clear the mode bits for continuous run mode */
  53:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #if (CY_PSOC5A)
  54:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 Right_Phase_Counter_CONTROL2 &= ((uint8)(~Right_Phase_Counter_CTRL_MODE_MASK));
  55:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* (CY_PSOC5A) */
  56:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 Right_Phase_Counter_CONTROL3 &= ((uint8)(~Right_Phase_Counter_CTRL_MODE_MASK));    
  58:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #if (Right_Phase_Counter_RunModeUsed != 0x0u)
  61:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 Right_Phase_Counter_CONTROL |= Right_Phase_Counter_ONESHOT;
  63:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* (Right_Phase_Counter_RunModeUsed != 0x0u) */
  64:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  65:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Set the IRQ to use the status register interrupts */
  66:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_CONTROL2 |= Right_Phase_Counter_CTRL2_IRQ_SEL;
  67:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  68:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_RT1 &= ((uint8)(~Right_Phase_Counter_RT1_MASK));
  70:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_RT1 |= Right_Phase_Counter_SYNC;     
  71:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                     
  72:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_RT1 &= ((uint8)(~Right_Phase_Counter_SYNCDSI_MASK));
  74:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_RT1 |= Right_Phase_Counter_SYNCDSI_EN;
  75:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
  76:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #else
  77:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #if(!Right_Phase_Counter_ControlRegRemoved)
  78:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Set the default compare mode defined in the parameter */
  79:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             ctrl = Right_Phase_Counter_CONTROL & ((uint8)(~Right_Phase_Counter_CTRL_CMPMODE_MASK));
  80:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_CONTROL = ctrl | Right_Phase_Counter_DEFAULT_COMPARE_MODE;
  81:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  82:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Set the default capture mode defined in the parameter */
  83:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             ctrl = Right_Phase_Counter_CONTROL & ((uint8)(~Right_Phase_Counter_CTRL_CAPMODE_MASK));
  84:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  85:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #if( 0 != Right_Phase_Counter_CAPTURE_MODE_CONF)
  86:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 Right_Phase_Counter_CONTROL = ctrl | Right_Phase_Counter_DEFAULT_CAPTURE_MODE;
  87:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #else
  88:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                 Right_Phase_Counter_CONTROL = ctrl;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 3


  89:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* 0 != Right_Phase_Counter_CAPTURE_MODE */ 
  90:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
  91:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* (!Right_Phase_Counter_ControlRegRemoved) */
  92:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (Right_Phase_Counter_UsingFixedFunction) */
  93:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
  94:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         /* Clear all data in the FIFO's */
  95:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!Right_Phase_Counter_UsingFixedFunction)
  96:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_ClearFIFO();
  97:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!Right_Phase_Counter_UsingFixedFunction) */
  98:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
  99:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         /* Set Initial values from Configuration */
 100:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_WritePeriod(Right_Phase_Counter_INIT_PERIOD_VALUE);
 101:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 102:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_WriteCounter(Right_Phase_Counter_INIT_COUNTER_VALUE);
 103:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 104:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_SetInterruptMode(Right_Phase_Counter_INIT_INTERRUPTS_MASK);
 105:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
 106:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!Right_Phase_Counter_UsingFixedFunction)
 107:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             (void)Right_Phase_Counter_ReadStatusRegister();
 109:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_WriteCompare(Right_Phase_Counter_INIT_COMPARE_VALUE);
 111:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 113:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Enter Critical Region*/
 115:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_interruptState = CyEnterCriticalSection();
 116:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 117:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_STATUS_AUX_CTRL |= Right_Phase_Counter_STATUS_ACTL_INT_EN_MASK;
 118:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 119:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Exit Critical Region*/
 120:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             CyExitCriticalSection(Right_Phase_Counter_interruptState);
 121:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 122:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!Right_Phase_Counter_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 124:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 125:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 126:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_Enable
 128:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 129:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 130:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *     Enable the Counter
 131:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * 
 132:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 133:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void  
 134:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 135:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 136:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 137:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 138:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Side Effects: 
 139:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   on the operation of the counter.
 141:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 142:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_Enable(void) 
 144:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
  27              		.loc 1 144 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 4


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 145:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if (Right_Phase_Counter_UsingFixedFunction)
 147:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_ENABLE |= Right_Phase_Counter_BLOCK_EN_MASK;
 148:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_STBY_ENABLE |= Right_Phase_Counter_BLOCK_STBY_EN_MASK;
 149:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */  
 150:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
 151:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Enable the counter from the control register  */
 152:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* else make sure reset is clear */
 154:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(!Right_Phase_Counter_ControlRegRemoved || Right_Phase_Counter_UsingFixedFunction)
 155:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_CONTROL |= Right_Phase_Counter_CTRL_ENABLE;                
  32              		.loc 1 155 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 73640040 		.word	1073767539
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	Right_Phase_Counter_Enable, .-Right_Phase_Counter_Enable
  45              		.section	.text.Right_Phase_Counter_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	Right_Phase_Counter_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	Right_Phase_Counter_Stop, %function
  51              	Right_Phase_Counter_Stop:
  52              	.LFB3:
 156:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (!Right_Phase_Counter_ControlRegRemoved || Right_Phase_Counter_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 158:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 159:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 160:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 161:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_Start
 163:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 164:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 165:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Enables the counter for operation 
 166:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 167:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 168:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void  
 169:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 170:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 171:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 172:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 173:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Global variables:
 174:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Right_Phase_Counter_initVar: Is modified when this function is called for the  
 175:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   first time. Is used to ensure that initialization happens only once.
 176:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 5


 177:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 178:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_Start(void) 
 179:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 180:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     if(Right_Phase_Counter_initVar == 0u)
 181:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     {
 182:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_Init();
 183:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
 184:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_initVar = 1u; /* Clear this bit for Initialization */        
 185:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     }
 186:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 187:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Enable the Counter */
 188:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_Enable();        
 189:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 190:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 191:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 192:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_Stop
 194:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 195:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 196:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 198:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 199:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void  
 200:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 201:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 202:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 203:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 204:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *               has no effect on the operation of the counter.
 206:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 207:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_Stop(void) 
 209:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
  53              		.loc 1 209 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 210:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Disable Counter */
 211:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(!Right_Phase_Counter_ControlRegRemoved || Right_Phase_Counter_UsingFixedFunction)
 212:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_CONTROL &= ((uint8)(~Right_Phase_Counter_CTRL_ENABLE));        
  58              		.loc 1 212 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 73640040 		.word	1073767539
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	Right_Phase_Counter_Stop, .-Right_Phase_Counter_Stop
  71              		.section	.text.Right_Phase_Counter_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	Right_Phase_Counter_SetInterruptMode
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 6


  74              		.thumb
  75              		.thumb_func
  76              		.type	Right_Phase_Counter_SetInterruptMode, %function
  77              	Right_Phase_Counter_SetInterruptMode:
  78              	.LFB4:
 213:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (!Right_Phase_Counter_ControlRegRemoved || Right_Phase_Counter_UsingFixedFunction) */
 214:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 215:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if (Right_Phase_Counter_UsingFixedFunction)
 217:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Right_Phase_Counter_BLOCK_EN_MASK));
 218:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_STBY_ENABLE &= ((uint8)(~Right_Phase_Counter_BLOCK_STBY_EN_MASK)
 219:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 220:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 221:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 222:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 223:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_SetInterruptMode
 225:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 226:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 227:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 229:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 230:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 233:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 234:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 235:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 236:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 237:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_SetInterruptMode(uint8 interruptsMask) 
 238:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
  79              		.loc 1 238 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 239:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_STATUS_MASK = interruptsMask;
  85              		.loc 1 239 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 85640040 		.word	1073767557
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	Right_Phase_Counter_SetInterruptMode, .-Right_Phase_Counter_SetInterruptMode
  96              		.section	.text.Right_Phase_Counter_ReadStatusRegister,"ax",%progbits
  97              		.align	2
  98              		.global	Right_Phase_Counter_ReadStatusRegister
  99              		.thumb
 100              		.thumb_func
 101              		.type	Right_Phase_Counter_ReadStatusRegister, %function
 102              	Right_Phase_Counter_ReadStatusRegister:
 103              	.LFB5:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 7


 240:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 241:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 242:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 243:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadStatusRegister
 245:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 247:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   Reads the status register and returns it's state. This function should use
 248:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 249:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       register may be permuteable.
 250:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 251:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 252:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 253:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 254:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 255:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint8) The contents of the status register
 256:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 257:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Side Effects:
 258:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   Status register bits may be clear on read. 
 259:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 260:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint8   Right_Phase_Counter_ReadStatusRegister(void) 
 262:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 104              		.loc 1 262 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 263:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     return Right_Phase_Counter_STATUS;
 109              		.loc 1 263 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 112              		.loc 1 264 0
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 65640040 		.word	1073767525
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Right_Phase_Counter_ReadStatusRegister, .-Right_Phase_Counter_ReadStatusRegister
 121              		.section	.text.Right_Phase_Counter_ReadControlRegister,"ax",%progbits
 122              		.align	2
 123              		.global	Right_Phase_Counter_ReadControlRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Right_Phase_Counter_ReadControlRegister, %function
 127              	Right_Phase_Counter_ReadControlRegister:
 128              	.LFB6:
 265:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 266:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 267:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #if(!Right_Phase_Counter_ControlRegRemoved)
 268:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadControlRegister
 270:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 8


 272:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   Reads the control register and returns it's state. This function should use
 273:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 274:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       register may be permuteable.
 275:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 276:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 277:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 278:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 279:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 280:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint8) The contents of the control register
 281:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 282:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 283:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint8   Right_Phase_Counter_ReadControlRegister(void) 
 284:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 129              		.loc 1 284 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 285:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     return Right_Phase_Counter_CONTROL;
 134              		.loc 1 285 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 137              		.loc 1 286 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 73640040 		.word	1073767539
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Right_Phase_Counter_ReadControlRegister, .-Right_Phase_Counter_ReadControlRegister
 146              		.section	.text.Right_Phase_Counter_WriteControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	Right_Phase_Counter_WriteControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Right_Phase_Counter_WriteControlRegister, %function
 152              	Right_Phase_Counter_WriteControlRegister:
 153              	.LFB7:
 287:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 288:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 289:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_WriteControlRegister
 291:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 292:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 293:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   Sets the bit-field of the control register.  This function should use
 294:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 295:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *       register may be permuteable.
 296:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 297:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 298:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 299:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 300:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 301:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint8) The contents of the control register
 302:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 303:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 9


 304:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void    Right_Phase_Counter_WriteControlRegister(uint8 control) 
 305:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 154              		.loc 1 305 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL1:
 306:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_CONTROL = control;
 160              		.loc 1 306 0
 161 0000 014B     		ldr	r3, .L17
 162 0002 1870     		strb	r0, [r3]
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 73640040 		.word	1073767539
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Right_Phase_Counter_WriteControlRegister, .-Right_Phase_Counter_WriteControlRegister
 171              		.section	.text.Right_Phase_Counter_WriteCounter,"ax",%progbits
 172              		.align	2
 173              		.global	Right_Phase_Counter_WriteCounter
 174              		.thumb
 175              		.thumb_func
 176              		.type	Right_Phase_Counter_WriteCounter, %function
 177              	Right_Phase_Counter_WriteCounter:
 178              	.LFB8:
 307:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 308:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 309:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #endif  /* (!Right_Phase_Counter_ControlRegRemoved) */
 310:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 311:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 312:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #if (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 313:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 314:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_WriteCounter
 315:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 316:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 317:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   This funtion is used to set the counter to a specific value
 318:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 319:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 320:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  counter:  New counter value. 
 321:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 322:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 323:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void 
 324:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 325:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_WriteCounter(uint32 counter) \
 327:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                                    
 328:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 179              		.loc 1 328 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL2:
 329:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 10


 330:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         /* assert if block is already enabled */
 331:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CYASSERT (0u == (Right_Phase_Counter_GLOBAL_ENABLE & Right_Phase_Counter_BLOCK_EN_MASK));
 332:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         /* If block is disabled, enable it and then write the counter */
 333:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_ENABLE |= Right_Phase_Counter_BLOCK_EN_MASK;
 334:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG16(Right_Phase_Counter_COUNTER_LSB_PTR, (uint16)counter);
 335:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         Right_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Right_Phase_Counter_BLOCK_EN_MASK));
 336:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 337:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG32(Right_Phase_Counter_COUNTER_LSB_PTR, counter);
 185              		.loc 1 337 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1A68     		ldr	r2, [r3]
 188 0004 1860     		str	r0, [r3]
 189 0006 7047     		bx	lr
 190              	.L21:
 191              		.align	2
 192              	.L20:
 193 0008 02640040 		.word	1073767426
 194              		.cfi_endproc
 195              	.LFE8:
 196              		.size	Right_Phase_Counter_WriteCounter, .-Right_Phase_Counter_WriteCounter
 197              		.section	.text.Right_Phase_Counter_ReadCounter,"ax",%progbits
 198              		.align	2
 199              		.global	Right_Phase_Counter_ReadCounter
 200              		.thumb
 201              		.thumb_func
 202              		.type	Right_Phase_Counter_ReadCounter, %function
 203              	Right_Phase_Counter_ReadCounter:
 204              	.LFB9:
 338:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 339:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 340:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #endif /* (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 341:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 342:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 343:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadCounter
 345:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 346:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 347:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Returns the current value of the counter.  It doesn't matter
 348:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * if the counter is enabled or running.
 349:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 350:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 351:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void:  
 352:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 353:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 354:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint32) The present value of the counter.
 355:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 356:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint32 Right_Phase_Counter_ReadCounter(void) 
 358:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 205              		.loc 1 358 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 359:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Force capture by reading Accumulator */
 360:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Must first do a software capture to be able to read the counter */
 361:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 11


 362:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 363:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 		(void)CY_GET_REG16(Right_Phase_Counter_COUNTER_LSB_PTR);
 364:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 	#else
 365:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 		(void)CY_GET_REG8(Right_Phase_Counter_COUNTER_LSB_PTR_8BIT);
 210              		.loc 1 365 0
 211 0000 024B     		ldr	r3, .L23
 212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 	#endif/* (Right_Phase_Counter_UsingFixedFunction) */
 367:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 368:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 370:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Right_Phase_Counter_STATICCOUNT_LSB_PTR));
 371:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 372:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return (CY_GET_REG32(Right_Phase_Counter_STATICCOUNT_LSB_PTR));
 213              		.loc 1 372 0
 214 0004 024B     		ldr	r3, .L23+4
 215 0006 1868     		ldr	r0, [r3]
 373:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 374:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 216              		.loc 1 374 0
 217 0008 7047     		bx	lr
 218              	.L24:
 219 000a 00BF     		.align	2
 220              	.L23:
 221 000c 02640040 		.word	1073767426
 222 0010 42640040 		.word	1073767490
 223              		.cfi_endproc
 224              	.LFE9:
 225              		.size	Right_Phase_Counter_ReadCounter, .-Right_Phase_Counter_ReadCounter
 226              		.section	.text.Right_Phase_Counter_ReadCapture,"ax",%progbits
 227              		.align	2
 228              		.global	Right_Phase_Counter_ReadCapture
 229              		.thumb
 230              		.thumb_func
 231              		.type	Right_Phase_Counter_ReadCapture, %function
 232              	Right_Phase_Counter_ReadCapture:
 233              	.LFB10:
 375:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 376:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 377:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadCapture
 379:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 381:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   This function returns the last value captured.
 382:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 383:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 384:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 385:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 386:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 387:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint32) Present Capture value.
 388:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 389:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint32 Right_Phase_Counter_ReadCapture(void) 
 391:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 234              		.loc 1 391 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 12


 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 392:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 393:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Right_Phase_Counter_STATICCOUNT_LSB_PTR));
 394:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 395:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return (CY_GET_REG32(Right_Phase_Counter_STATICCOUNT_LSB_PTR));
 239              		.loc 1 395 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1868     		ldr	r0, [r3]
 396:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 397:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 242              		.loc 1 397 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 42640040 		.word	1073767490
 248              		.cfi_endproc
 249              	.LFE10:
 250              		.size	Right_Phase_Counter_ReadCapture, .-Right_Phase_Counter_ReadCapture
 251              		.section	.text.Right_Phase_Counter_WritePeriod,"ax",%progbits
 252              		.align	2
 253              		.global	Right_Phase_Counter_WritePeriod
 254              		.thumb
 255              		.thumb_func
 256              		.type	Right_Phase_Counter_WritePeriod, %function
 257              	Right_Phase_Counter_WritePeriod:
 258              	.LFB11:
 398:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 399:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 400:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 401:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_WritePeriod
 402:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 403:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 404:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Changes the period of the counter.  The new period 
 405:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * will be loaded the next time terminal count is detected.
 406:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 407:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 408:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  period: (uint32) A value of 0 will result in
 409:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *         the counter remaining at zero.  
 410:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 411:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 412:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 413:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 414:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_WritePeriod(uint32 period) 
 416:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 259              		.loc 1 416 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL3:
 417:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 418:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG16(Right_Phase_Counter_PERIOD_LSB_PTR,(uint16)period);
 419:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 420:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG32(Right_Phase_Counter_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 13


 265              		.loc 1 420 0
 266 0000 014B     		ldr	r3, .L29
 267 0002 1A68     		ldr	r2, [r3]
 268 0004 1860     		str	r0, [r3]
 269 0006 7047     		bx	lr
 270              	.L30:
 271              		.align	2
 272              	.L29:
 273 0008 22640040 		.word	1073767458
 274              		.cfi_endproc
 275              	.LFE11:
 276              		.size	Right_Phase_Counter_WritePeriod, .-Right_Phase_Counter_WritePeriod
 277              		.section	.text.Right_Phase_Counter_ReadPeriod,"ax",%progbits
 278              		.align	2
 279              		.global	Right_Phase_Counter_ReadPeriod
 280              		.thumb
 281              		.thumb_func
 282              		.type	Right_Phase_Counter_ReadPeriod, %function
 283              	Right_Phase_Counter_ReadPeriod:
 284              	.LFB12:
 421:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 422:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 423:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 424:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 425:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadPeriod
 427:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 428:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 429:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Reads the current period value without affecting counter operation.
 430:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 431:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 432:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void:  
 433:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 434:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 435:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint32) Present period value.
 436:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 437:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 438:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint32 Right_Phase_Counter_ReadPeriod(void) 
 439:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 285              		.loc 1 439 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 440:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 441:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Right_Phase_Counter_PERIOD_LSB_PTR));
 442:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 443:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         return (CY_GET_REG32(Right_Phase_Counter_PERIOD_LSB_PTR));
 290              		.loc 1 443 0
 291 0000 014B     		ldr	r3, .L32
 292 0002 1868     		ldr	r0, [r3]
 444:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 445:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 293              		.loc 1 445 0
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 14


 297              	.L32:
 298 0008 22640040 		.word	1073767458
 299              		.cfi_endproc
 300              	.LFE12:
 301              		.size	Right_Phase_Counter_ReadPeriod, .-Right_Phase_Counter_ReadPeriod
 302              		.section	.text.Right_Phase_Counter_WriteCompare,"ax",%progbits
 303              		.align	2
 304              		.global	Right_Phase_Counter_WriteCompare
 305              		.thumb
 306              		.thumb_func
 307              		.type	Right_Phase_Counter_WriteCompare, %function
 308              	Right_Phase_Counter_WriteCompare:
 309              	.LFB13:
 446:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 447:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 448:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #if (!Right_Phase_Counter_UsingFixedFunction)
 449:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 450:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_WriteCompare
 451:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 452:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 453:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Changes the compare value.  The compare output will 
 454:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * driven high when the present counter value compares true based on the 
 456:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * configured compare mode setting. 
 457:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 458:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 459:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Compare:  New compare value. 
 460:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 461:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 462:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 463:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 464:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_WriteCompare(uint32 compare) \
 466:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****                                    
 467:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 310              		.loc 1 467 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL4:
 468:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #if(Right_Phase_Counter_UsingFixedFunction)
 469:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG16(Right_Phase_Counter_COMPARE_LSB_PTR, (uint16)compare);
 470:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #else
 471:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         CY_SET_REG32(Right_Phase_Counter_COMPARE_LSB_PTR, compare);
 316              		.loc 1 471 0
 317 0000 014B     		ldr	r3, .L35
 318 0002 1A68     		ldr	r2, [r3]
 319 0004 1860     		str	r0, [r3]
 320 0006 7047     		bx	lr
 321              	.L36:
 322              		.align	2
 323              	.L35:
 324 0008 32640040 		.word	1073767474
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	Right_Phase_Counter_WriteCompare, .-Right_Phase_Counter_WriteCompare
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 15


 328              		.section	.text.Right_Phase_Counter_ReadCompare,"ax",%progbits
 329              		.align	2
 330              		.global	Right_Phase_Counter_ReadCompare
 331              		.thumb
 332              		.thumb_func
 333              		.type	Right_Phase_Counter_ReadCompare, %function
 334              	Right_Phase_Counter_ReadCompare:
 335              	.LFB14:
 472:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     #endif /* (Right_Phase_Counter_UsingFixedFunction) */
 473:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 474:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 475:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 476:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 477:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ReadCompare
 478:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 479:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 480:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Returns the compare value.
 481:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 482:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 483:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void:
 484:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 485:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 486:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  (uint32) Present compare value.
 487:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 488:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 489:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** uint32 Right_Phase_Counter_ReadCompare(void) 
 490:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 336              		.loc 1 490 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 491:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     return (CY_GET_REG32(Right_Phase_Counter_COMPARE_LSB_PTR));
 341              		.loc 1 491 0
 342 0000 014B     		ldr	r3, .L38
 343 0002 1868     		ldr	r0, [r3]
 492:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 344              		.loc 1 492 0
 345 0004 7047     		bx	lr
 346              	.L39:
 347 0006 00BF     		.align	2
 348              	.L38:
 349 0008 32640040 		.word	1073767474
 350              		.cfi_endproc
 351              	.LFE14:
 352              		.size	Right_Phase_Counter_ReadCompare, .-Right_Phase_Counter_ReadCompare
 353              		.section	.text.Right_Phase_Counter_ClearFIFO,"ax",%progbits
 354              		.align	2
 355              		.global	Right_Phase_Counter_ClearFIFO
 356              		.thumb
 357              		.thumb_func
 358              		.type	Right_Phase_Counter_ClearFIFO, %function
 359              	Right_Phase_Counter_ClearFIFO:
 360              	.LFB15:
 493:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 494:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 495:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #if (Right_Phase_Counter_COMPARE_MODE_SOFTWARE)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 16


 496:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_SetCompareMode
 498:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 500:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Sets the software controlled Compare Mode.
 501:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 502:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:
 503:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 505:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return:
 506:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 507:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 508:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 509:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_SetCompareMode(uint8 compareMode) 
 510:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 511:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Clear the compare mode bits in the control register */
 512:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_CONTROL &= ((uint8)(~Right_Phase_Counter_CTRL_CMPMODE_MASK));
 513:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 514:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Write the new setting */
 515:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_CONTROL |= compareMode;
 516:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 517:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #endif  /* (Right_Phase_Counter_COMPARE_MODE_SOFTWARE) */
 518:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 519:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 520:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #if (Right_Phase_Counter_CAPTURE_MODE_SOFTWARE)
 521:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 522:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_SetCaptureMode
 523:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 524:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 525:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  Sets the software controlled Capture Mode.
 526:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 527:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:
 528:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 530:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return:
 531:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void
 532:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 533:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 534:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_SetCaptureMode(uint8 captureMode) 
 535:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 536:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Clear the capture mode bits in the control register */
 537:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_CONTROL &= ((uint8)(~Right_Phase_Counter_CTRL_CAPMODE_MASK));
 538:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     
 539:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     /* Write the new setting */
 540:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     Right_Phase_Counter_CONTROL |= ((uint8)((uint8)captureMode << Right_Phase_Counter_CTRL_CAPMODE0
 541:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 542:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** #endif  /* (Right_Phase_Counter_CAPTURE_MODE_SOFTWARE) */
 543:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 544:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 545:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** /*******************************************************************************
 546:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Function Name: Right_Phase_Counter_ClearFIFO
 547:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** ********************************************************************************
 548:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Summary:
 549:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *   This function clears all capture data from the capture FIFO
 550:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 551:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Parameters:  
 552:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  void:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 17


 553:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 554:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** * Return: 
 555:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *  None
 556:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *
 557:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** void Right_Phase_Counter_ClearFIFO(void) 
 559:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** {
 361              		.loc 1 559 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 560:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 561:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     while(0u != (Right_Phase_Counter_ReadStatusRegister() & Right_Phase_Counter_STATUS_FIFONEMP))
 369              		.loc 1 561 0
 370 0002 01E0     		b	.L41
 371              	.L42:
 562:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     {
 563:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         (void)Right_Phase_Counter_ReadCapture();
 372              		.loc 1 563 0
 373 0004 FFF7FEFF 		bl	Right_Phase_Counter_ReadCapture
 374              	.LVL5:
 375              	.L41:
 561:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     {
 376              		.loc 1 561 0
 377 0008 FFF7FEFF 		bl	Right_Phase_Counter_ReadStatusRegister
 378              	.LVL6:
 379 000c 10F0400F 		tst	r0, #64
 380 0010 F8D1     		bne	.L42
 564:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     }
 565:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** 
 566:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 381              		.loc 1 566 0
 382 0012 08BD     		pop	{r3, pc}
 383              		.cfi_endproc
 384              	.LFE15:
 385              		.size	Right_Phase_Counter_ClearFIFO, .-Right_Phase_Counter_ClearFIFO
 386              		.section	.text.Right_Phase_Counter_Init,"ax",%progbits
 387              		.align	2
 388              		.global	Right_Phase_Counter_Init
 389              		.thumb
 390              		.thumb_func
 391              		.type	Right_Phase_Counter_Init, %function
 392              	Right_Phase_Counter_Init:
 393              	.LFB0:
  38:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!Right_Phase_Counter_UsingFixedFunction && !Right_Phase_Counter_ControlRegRemoved)
 394              		.loc 1 38 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 08B5     		push	{r3, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 18


  79:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             Right_Phase_Counter_CONTROL = ctrl | Right_Phase_Counter_DEFAULT_COMPARE_MODE;
 402              		.loc 1 79 0
 403 0002 144A     		ldr	r2, .L46
 404 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 405 0006 03F0F803 		and	r3, r3, #248
 406              	.LVL7:
  80:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 407              		.loc 1 80 0
 408 000a 43F00103 		orr	r3, r3, #1
 409              	.LVL8:
 410 000e 1370     		strb	r3, [r2]
  83:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 411              		.loc 1 83 0
 412 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 413 0012 03F0FC03 		and	r3, r3, #252
 414              	.LVL9:
  88:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             #endif /* 0 != Right_Phase_Counter_CAPTURE_MODE */ 
 415              		.loc 1 88 0
 416 0016 1370     		strb	r3, [r2]
  96:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!Right_Phase_Counter_UsingFixedFunction) */
 417              		.loc 1 96 0
 418 0018 FFF7FEFF 		bl	Right_Phase_Counter_ClearFIFO
 419              	.LVL10:
 100:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #if (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 420              		.loc 1 100 0
 421 001c 6FF00100 		mvn	r0, #1
 422 0020 FFF7FEFF 		bl	Right_Phase_Counter_WritePeriod
 423              	.LVL11:
 102:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         #endif /* (!(Right_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 424              		.loc 1 102 0
 425 0024 6FF00100 		mvn	r0, #1
 426 0028 FFF7FEFF 		bl	Right_Phase_Counter_WriteCounter
 427              	.LVL12:
 104:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
 428              		.loc 1 104 0
 429 002c 0020     		movs	r0, #0
 430 002e FFF7FEFF 		bl	Right_Phase_Counter_SetInterruptMode
 431              	.LVL13:
 108:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 432              		.loc 1 108 0
 433 0032 FFF7FEFF 		bl	Right_Phase_Counter_ReadStatusRegister
 434              	.LVL14:
 110:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 435              		.loc 1 110 0
 436 0036 4FF0FF30 		mov	r0, #-1
 437 003a FFF7FEFF 		bl	Right_Phase_Counter_WriteCompare
 438              	.LVL15:
 115:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 439              		.loc 1 115 0
 440 003e FFF7FEFF 		bl	CyEnterCriticalSection
 441              	.LVL16:
 117:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 442              		.loc 1 117 0
 443 0042 054A     		ldr	r2, .L46+4
 444 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 445 0046 43F01003 		orr	r3, r3, #16
 446 004a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 19


 120:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****             
 447              		.loc 1 120 0
 448 004c FFF7FEFF 		bl	CyExitCriticalSection
 449              	.LVL17:
 450 0050 08BD     		pop	{r3, pc}
 451              	.L47:
 452 0052 00BF     		.align	2
 453              	.L46:
 454 0054 73640040 		.word	1073767539
 455 0058 95640040 		.word	1073767573
 456              		.cfi_endproc
 457              	.LFE0:
 458              		.size	Right_Phase_Counter_Init, .-Right_Phase_Counter_Init
 459              		.section	.text.Right_Phase_Counter_Start,"ax",%progbits
 460              		.align	2
 461              		.global	Right_Phase_Counter_Start
 462              		.thumb
 463              		.thumb_func
 464              		.type	Right_Phase_Counter_Start, %function
 465              	Right_Phase_Counter_Start:
 466              	.LFB2:
 179:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     if(Right_Phase_Counter_initVar == 0u)
 467              		.loc 1 179 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 08B5     		push	{r3, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 3, -8
 474              		.cfi_offset 14, -4
 180:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     {
 475              		.loc 1 180 0
 476 0002 054B     		ldr	r3, .L51
 477 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0006 23B9     		cbnz	r3, .L49
 182:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****         
 479              		.loc 1 182 0
 480 0008 FFF7FEFF 		bl	Right_Phase_Counter_Init
 481              	.LVL18:
 184:.\Generated_Source\PSoC5/Right_Phase_Counter.c ****     }
 482              		.loc 1 184 0
 483 000c 0122     		movs	r2, #1
 484 000e 024B     		ldr	r3, .L51
 485 0010 1A70     		strb	r2, [r3]
 486              	.L49:
 188:.\Generated_Source\PSoC5/Right_Phase_Counter.c **** }
 487              		.loc 1 188 0
 488 0012 FFF7FEFF 		bl	Right_Phase_Counter_Enable
 489              	.LVL19:
 490 0016 08BD     		pop	{r3, pc}
 491              	.L52:
 492              		.align	2
 493              	.L51:
 494 0018 00000000 		.word	.LANCHOR0
 495              		.cfi_endproc
 496              	.LFE2:
 497              		.size	Right_Phase_Counter_Start, .-Right_Phase_Counter_Start
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 20


 498              		.global	Right_Phase_Counter_initVar
 499              		.bss
 500              		.set	.LANCHOR0,. + 0
 501              		.type	Right_Phase_Counter_initVar, %object
 502              		.size	Right_Phase_Counter_initVar, 1
 503              	Right_Phase_Counter_initVar:
 504 0000 00       		.space	1
 505              		.text
 506              	.Letext0:
 507              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 508              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 509              		.section	.debug_info,"",%progbits
 510              	.Ldebug_info0:
 511 0000 3C030000 		.4byte	0x33c
 512 0004 0400     		.2byte	0x4
 513 0006 00000000 		.4byte	.Ldebug_abbrev0
 514 000a 04       		.byte	0x4
 515 000b 01       		.uleb128 0x1
 516 000c 4B020000 		.4byte	.LASF40
 517 0010 01       		.byte	0x1
 518 0011 2E000000 		.4byte	.LASF41
 519 0015 92000000 		.4byte	.LASF42
 520 0019 00000000 		.4byte	.Ldebug_ranges0+0
 521 001d 00000000 		.4byte	0
 522 0021 00000000 		.4byte	.Ldebug_line0
 523 0025 02       		.uleb128 0x2
 524 0026 01       		.byte	0x1
 525 0027 06       		.byte	0x6
 526 0028 17040000 		.4byte	.LASF0
 527 002c 02       		.uleb128 0x2
 528 002d 01       		.byte	0x1
 529 002e 08       		.byte	0x8
 530 002f 37010000 		.4byte	.LASF1
 531 0033 02       		.uleb128 0x2
 532 0034 02       		.byte	0x2
 533 0035 05       		.byte	0x5
 534 0036 DB030000 		.4byte	.LASF2
 535 003a 02       		.uleb128 0x2
 536 003b 02       		.byte	0x2
 537 003c 07       		.byte	0x7
 538 003d 7F000000 		.4byte	.LASF3
 539 0041 02       		.uleb128 0x2
 540 0042 04       		.byte	0x4
 541 0043 05       		.byte	0x5
 542 0044 0E040000 		.4byte	.LASF4
 543 0048 02       		.uleb128 0x2
 544 0049 04       		.byte	0x4
 545 004a 07       		.byte	0x7
 546 004b 4A010000 		.4byte	.LASF5
 547 004f 02       		.uleb128 0x2
 548 0050 08       		.byte	0x8
 549 0051 05       		.byte	0x5
 550 0052 A7030000 		.4byte	.LASF6
 551 0056 02       		.uleb128 0x2
 552 0057 08       		.byte	0x8
 553 0058 07       		.byte	0x7
 554 0059 20010000 		.4byte	.LASF7
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 21


 555 005d 03       		.uleb128 0x3
 556 005e 04       		.byte	0x4
 557 005f 05       		.byte	0x5
 558 0060 696E7400 		.ascii	"int\000"
 559 0064 02       		.uleb128 0x2
 560 0065 04       		.byte	0x4
 561 0066 07       		.byte	0x7
 562 0067 F0020000 		.4byte	.LASF8
 563 006b 04       		.uleb128 0x4
 564 006c E5030000 		.4byte	.LASF9
 565 0070 02       		.byte	0x2
 566 0071 3801     		.2byte	0x138
 567 0073 2C000000 		.4byte	0x2c
 568 0077 04       		.uleb128 0x4
 569 0078 44020000 		.4byte	.LASF10
 570 007c 02       		.byte	0x2
 571 007d 3A01     		.2byte	0x13a
 572 007f 48000000 		.4byte	0x48
 573 0083 02       		.uleb128 0x2
 574 0084 04       		.byte	0x4
 575 0085 04       		.byte	0x4
 576 0086 12010000 		.4byte	.LASF11
 577 008a 02       		.uleb128 0x2
 578 008b 08       		.byte	0x8
 579 008c 04       		.byte	0x4
 580 008d 1F020000 		.4byte	.LASF12
 581 0091 02       		.uleb128 0x2
 582 0092 01       		.byte	0x1
 583 0093 08       		.byte	0x8
 584 0094 B5030000 		.4byte	.LASF13
 585 0098 04       		.uleb128 0x4
 586 0099 45010000 		.4byte	.LASF14
 587 009d 02       		.byte	0x2
 588 009e E201     		.2byte	0x1e2
 589 00a0 A4000000 		.4byte	0xa4
 590 00a4 05       		.uleb128 0x5
 591 00a5 6B000000 		.4byte	0x6b
 592 00a9 04       		.uleb128 0x4
 593 00aa 00000000 		.4byte	.LASF15
 594 00ae 02       		.byte	0x2
 595 00af E401     		.2byte	0x1e4
 596 00b1 B5000000 		.4byte	0xb5
 597 00b5 05       		.uleb128 0x5
 598 00b6 77000000 		.4byte	0x77
 599 00ba 02       		.uleb128 0x2
 600 00bb 04       		.byte	0x4
 601 00bc 07       		.byte	0x7
 602 00bd 9E030000 		.4byte	.LASF16
 603 00c1 06       		.uleb128 0x6
 604 00c2 5D000000 		.4byte	.LASF17
 605 00c6 01       		.byte	0x1
 606 00c7 8F       		.byte	0x8f
 607 00c8 00000000 		.4byte	.LFB1
 608 00cc 10000000 		.4byte	.LFE1-.LFB1
 609 00d0 01       		.uleb128 0x1
 610 00d1 9C       		.byte	0x9c
 611 00d2 06       		.uleb128 0x6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 22


 612 00d3 F9000000 		.4byte	.LASF18
 613 00d7 01       		.byte	0x1
 614 00d8 D0       		.byte	0xd0
 615 00d9 00000000 		.4byte	.LFB3
 616 00dd 10000000 		.4byte	.LFE3-.LFB3
 617 00e1 01       		.uleb128 0x1
 618 00e2 9C       		.byte	0x9c
 619 00e3 07       		.uleb128 0x7
 620 00e4 23040000 		.4byte	.LASF21
 621 00e8 01       		.byte	0x1
 622 00e9 ED       		.byte	0xed
 623 00ea 00000000 		.4byte	.LFB4
 624 00ee 0C000000 		.4byte	.LFE4-.LFB4
 625 00f2 01       		.uleb128 0x1
 626 00f3 9C       		.byte	0x9c
 627 00f4 06010000 		.4byte	0x106
 628 00f8 08       		.uleb128 0x8
 629 00f9 7E010000 		.4byte	.LASF23
 630 00fd 01       		.byte	0x1
 631 00fe ED       		.byte	0xed
 632 00ff 6B000000 		.4byte	0x6b
 633 0103 01       		.uleb128 0x1
 634 0104 50       		.byte	0x50
 635 0105 00       		.byte	0
 636 0106 09       		.uleb128 0x9
 637 0107 72030000 		.4byte	.LASF19
 638 010b 01       		.byte	0x1
 639 010c 0501     		.2byte	0x105
 640 010e 6B000000 		.4byte	0x6b
 641 0112 00000000 		.4byte	.LFB5
 642 0116 0C000000 		.4byte	.LFE5-.LFB5
 643 011a 01       		.uleb128 0x1
 644 011b 9C       		.byte	0x9c
 645 011c 09       		.uleb128 0x9
 646 011d F7010000 		.4byte	.LASF20
 647 0121 01       		.byte	0x1
 648 0122 1B01     		.2byte	0x11b
 649 0124 6B000000 		.4byte	0x6b
 650 0128 00000000 		.4byte	.LFB6
 651 012c 0C000000 		.4byte	.LFE6-.LFB6
 652 0130 01       		.uleb128 0x1
 653 0131 9C       		.byte	0x9c
 654 0132 0A       		.uleb128 0xa
 655 0133 AE010000 		.4byte	.LASF22
 656 0137 01       		.byte	0x1
 657 0138 3001     		.2byte	0x130
 658 013a 00000000 		.4byte	.LFB7
 659 013e 0C000000 		.4byte	.LFE7-.LFB7
 660 0142 01       		.uleb128 0x1
 661 0143 9C       		.byte	0x9c
 662 0144 57010000 		.4byte	0x157
 663 0148 0B       		.uleb128 0xb
 664 0149 76010000 		.4byte	.LASF24
 665 014d 01       		.byte	0x1
 666 014e 3001     		.2byte	0x130
 667 0150 6B000000 		.4byte	0x6b
 668 0154 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 23


 669 0155 50       		.byte	0x50
 670 0156 00       		.byte	0
 671 0157 0A       		.uleb128 0xa
 672 0158 BA030000 		.4byte	.LASF25
 673 015c 01       		.byte	0x1
 674 015d 4601     		.2byte	0x146
 675 015f 00000000 		.4byte	.LFB8
 676 0163 0C000000 		.4byte	.LFE8-.LFB8
 677 0167 01       		.uleb128 0x1
 678 0168 9C       		.byte	0x9c
 679 0169 7C010000 		.4byte	0x17c
 680 016d 0B       		.uleb128 0xb
 681 016e 18010000 		.4byte	.LASF26
 682 0172 01       		.byte	0x1
 683 0173 4601     		.2byte	0x146
 684 0175 77000000 		.4byte	0x77
 685 0179 01       		.uleb128 0x1
 686 017a 50       		.byte	0x50
 687 017b 00       		.byte	0
 688 017c 09       		.uleb128 0x9
 689 017d D7010000 		.4byte	.LASF27
 690 0181 01       		.byte	0x1
 691 0182 6501     		.2byte	0x165
 692 0184 77000000 		.4byte	0x77
 693 0188 00000000 		.4byte	.LFB9
 694 018c 14000000 		.4byte	.LFE9-.LFB9
 695 0190 01       		.uleb128 0x1
 696 0191 9C       		.byte	0x9c
 697 0192 09       		.uleb128 0x9
 698 0193 52030000 		.4byte	.LASF28
 699 0197 01       		.byte	0x1
 700 0198 8601     		.2byte	0x186
 701 019a 77000000 		.4byte	0x77
 702 019e 00000000 		.4byte	.LFB10
 703 01a2 0C000000 		.4byte	.LFE10-.LFB10
 704 01a6 01       		.uleb128 0x1
 705 01a7 9C       		.byte	0x9c
 706 01a8 0A       		.uleb128 0xa
 707 01a9 32030000 		.4byte	.LASF29
 708 01ad 01       		.byte	0x1
 709 01ae 9F01     		.2byte	0x19f
 710 01b0 00000000 		.4byte	.LFB11
 711 01b4 0C000000 		.4byte	.LFE11-.LFB11
 712 01b8 01       		.uleb128 0x1
 713 01b9 9C       		.byte	0x9c
 714 01ba CD010000 		.4byte	0x1cd
 715 01be 0B       		.uleb128 0xb
 716 01bf 78000000 		.4byte	.LASF30
 717 01c3 01       		.byte	0x1
 718 01c4 9F01     		.2byte	0x19f
 719 01c6 77000000 		.4byte	0x77
 720 01ca 01       		.uleb128 0x1
 721 01cb 50       		.byte	0x50
 722 01cc 00       		.byte	0
 723 01cd 09       		.uleb128 0x9
 724 01ce FD020000 		.4byte	.LASF31
 725 01d2 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 24


 726 01d3 B601     		.2byte	0x1b6
 727 01d5 77000000 		.4byte	0x77
 728 01d9 00000000 		.4byte	.LFB12
 729 01dd 0C000000 		.4byte	.LFE12-.LFB12
 730 01e1 01       		.uleb128 0x1
 731 01e2 9C       		.byte	0x9c
 732 01e3 0A       		.uleb128 0xa
 733 01e4 8D010000 		.4byte	.LASF32
 734 01e8 01       		.byte	0x1
 735 01e9 D101     		.2byte	0x1d1
 736 01eb 00000000 		.4byte	.LFB13
 737 01ef 0C000000 		.4byte	.LFE13-.LFB13
 738 01f3 01       		.uleb128 0x1
 739 01f4 9C       		.byte	0x9c
 740 01f5 08020000 		.4byte	0x208
 741 01f9 0B       		.uleb128 0xb
 742 01fa 26000000 		.4byte	.LASF33
 743 01fe 01       		.byte	0x1
 744 01ff D101     		.2byte	0x1d1
 745 0201 77000000 		.4byte	0x77
 746 0205 01       		.uleb128 0x1
 747 0206 50       		.byte	0x50
 748 0207 00       		.byte	0
 749 0208 09       		.uleb128 0x9
 750 0209 06000000 		.4byte	.LASF34
 751 020d 01       		.byte	0x1
 752 020e E901     		.2byte	0x1e9
 753 0210 77000000 		.4byte	0x77
 754 0214 00000000 		.4byte	.LFB14
 755 0218 0C000000 		.4byte	.LFE14-.LFB14
 756 021c 01       		.uleb128 0x1
 757 021d 9C       		.byte	0x9c
 758 021e 0A       		.uleb128 0xa
 759 021f 26020000 		.4byte	.LASF35
 760 0223 01       		.byte	0x1
 761 0224 2E02     		.2byte	0x22e
 762 0226 00000000 		.4byte	.LFB15
 763 022a 14000000 		.4byte	.LFE15-.LFB15
 764 022e 01       		.uleb128 0x1
 765 022f 9C       		.byte	0x9c
 766 0230 47020000 		.4byte	0x247
 767 0234 0C       		.uleb128 0xc
 768 0235 08000000 		.4byte	.LVL5
 769 0239 92010000 		.4byte	0x192
 770 023d 0C       		.uleb128 0xc
 771 023e 0C000000 		.4byte	.LVL6
 772 0242 06010000 		.4byte	0x106
 773 0246 00       		.byte	0
 774 0247 07       		.uleb128 0x7
 775 0248 C4000000 		.4byte	.LASF36
 776 024c 01       		.byte	0x1
 777 024d 25       		.byte	0x25
 778 024e 00000000 		.4byte	.LFB0
 779 0252 5C000000 		.4byte	.LFE0-.LFB0
 780 0256 01       		.uleb128 0x1
 781 0257 9C       		.byte	0x9c
 782 0258 EE020000 		.4byte	0x2ee
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 25


 783 025c 0D       		.uleb128 0xd
 784 025d 99030000 		.4byte	.LASF37
 785 0261 01       		.byte	0x1
 786 0262 28       		.byte	0x28
 787 0263 6B000000 		.4byte	0x6b
 788 0267 00000000 		.4byte	.LLST0
 789 026b 0D       		.uleb128 0xd
 790 026c EB030000 		.4byte	.LASF38
 791 0270 01       		.byte	0x1
 792 0271 2D       		.byte	0x2d
 793 0272 6B000000 		.4byte	0x6b
 794 0276 1E000000 		.4byte	.LLST1
 795 027a 0C       		.uleb128 0xc
 796 027b 1C000000 		.4byte	.LVL10
 797 027f 1E020000 		.4byte	0x21e
 798 0283 0E       		.uleb128 0xe
 799 0284 24000000 		.4byte	.LVL11
 800 0288 A8010000 		.4byte	0x1a8
 801 028c 97020000 		.4byte	0x297
 802 0290 0F       		.uleb128 0xf
 803 0291 01       		.uleb128 0x1
 804 0292 50       		.byte	0x50
 805 0293 02       		.uleb128 0x2
 806 0294 09       		.byte	0x9
 807 0295 FE       		.byte	0xfe
 808 0296 00       		.byte	0
 809 0297 0E       		.uleb128 0xe
 810 0298 2C000000 		.4byte	.LVL12
 811 029c 57010000 		.4byte	0x157
 812 02a0 AB020000 		.4byte	0x2ab
 813 02a4 0F       		.uleb128 0xf
 814 02a5 01       		.uleb128 0x1
 815 02a6 50       		.byte	0x50
 816 02a7 02       		.uleb128 0x2
 817 02a8 09       		.byte	0x9
 818 02a9 FE       		.byte	0xfe
 819 02aa 00       		.byte	0
 820 02ab 0E       		.uleb128 0xe
 821 02ac 32000000 		.4byte	.LVL13
 822 02b0 E3000000 		.4byte	0xe3
 823 02b4 BE020000 		.4byte	0x2be
 824 02b8 0F       		.uleb128 0xf
 825 02b9 01       		.uleb128 0x1
 826 02ba 50       		.byte	0x50
 827 02bb 01       		.uleb128 0x1
 828 02bc 30       		.byte	0x30
 829 02bd 00       		.byte	0
 830 02be 0C       		.uleb128 0xc
 831 02bf 36000000 		.4byte	.LVL14
 832 02c3 06010000 		.4byte	0x106
 833 02c7 0E       		.uleb128 0xe
 834 02c8 3E000000 		.4byte	.LVL15
 835 02cc E3010000 		.4byte	0x1e3
 836 02d0 DB020000 		.4byte	0x2db
 837 02d4 0F       		.uleb128 0xf
 838 02d5 01       		.uleb128 0x1
 839 02d6 50       		.byte	0x50
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 26


 840 02d7 02       		.uleb128 0x2
 841 02d8 09       		.byte	0x9
 842 02d9 FF       		.byte	0xff
 843 02da 00       		.byte	0
 844 02db 0C       		.uleb128 0xc
 845 02dc 42000000 		.4byte	.LVL16
 846 02e0 27030000 		.4byte	0x327
 847 02e4 0C       		.uleb128 0xc
 848 02e5 50000000 		.4byte	.LVL17
 849 02e9 32030000 		.4byte	0x332
 850 02ed 00       		.byte	0
 851 02ee 07       		.uleb128 0x7
 852 02ef 5C010000 		.4byte	.LASF39
 853 02f3 01       		.byte	0x1
 854 02f4 B2       		.byte	0xb2
 855 02f5 00000000 		.4byte	.LFB2
 856 02f9 1C000000 		.4byte	.LFE2-.LFB2
 857 02fd 01       		.uleb128 0x1
 858 02fe 9C       		.byte	0x9c
 859 02ff 16030000 		.4byte	0x316
 860 0303 0C       		.uleb128 0xc
 861 0304 0C000000 		.4byte	.LVL18
 862 0308 47020000 		.4byte	0x247
 863 030c 0C       		.uleb128 0xc
 864 030d 16000000 		.4byte	.LVL19
 865 0311 C1000000 		.4byte	0xc1
 866 0315 00       		.byte	0
 867 0316 10       		.uleb128 0x10
 868 0317 DD000000 		.4byte	.LASF43
 869 031b 01       		.byte	0x1
 870 031c 15       		.byte	0x15
 871 031d 6B000000 		.4byte	0x6b
 872 0321 05       		.uleb128 0x5
 873 0322 03       		.byte	0x3
 874 0323 00000000 		.4byte	Right_Phase_Counter_initVar
 875 0327 11       		.uleb128 0x11
 876 0328 D9020000 		.4byte	.LASF44
 877 032c 03       		.byte	0x3
 878 032d 7E       		.byte	0x7e
 879 032e 6B000000 		.4byte	0x6b
 880 0332 12       		.uleb128 0x12
 881 0333 1C030000 		.4byte	.LASF45
 882 0337 03       		.byte	0x3
 883 0338 7F       		.byte	0x7f
 884 0339 13       		.uleb128 0x13
 885 033a 6B000000 		.4byte	0x6b
 886 033e 00       		.byte	0
 887 033f 00       		.byte	0
 888              		.section	.debug_abbrev,"",%progbits
 889              	.Ldebug_abbrev0:
 890 0000 01       		.uleb128 0x1
 891 0001 11       		.uleb128 0x11
 892 0002 01       		.byte	0x1
 893 0003 25       		.uleb128 0x25
 894 0004 0E       		.uleb128 0xe
 895 0005 13       		.uleb128 0x13
 896 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 27


 897 0007 03       		.uleb128 0x3
 898 0008 0E       		.uleb128 0xe
 899 0009 1B       		.uleb128 0x1b
 900 000a 0E       		.uleb128 0xe
 901 000b 55       		.uleb128 0x55
 902 000c 17       		.uleb128 0x17
 903 000d 11       		.uleb128 0x11
 904 000e 01       		.uleb128 0x1
 905 000f 10       		.uleb128 0x10
 906 0010 17       		.uleb128 0x17
 907 0011 00       		.byte	0
 908 0012 00       		.byte	0
 909 0013 02       		.uleb128 0x2
 910 0014 24       		.uleb128 0x24
 911 0015 00       		.byte	0
 912 0016 0B       		.uleb128 0xb
 913 0017 0B       		.uleb128 0xb
 914 0018 3E       		.uleb128 0x3e
 915 0019 0B       		.uleb128 0xb
 916 001a 03       		.uleb128 0x3
 917 001b 0E       		.uleb128 0xe
 918 001c 00       		.byte	0
 919 001d 00       		.byte	0
 920 001e 03       		.uleb128 0x3
 921 001f 24       		.uleb128 0x24
 922 0020 00       		.byte	0
 923 0021 0B       		.uleb128 0xb
 924 0022 0B       		.uleb128 0xb
 925 0023 3E       		.uleb128 0x3e
 926 0024 0B       		.uleb128 0xb
 927 0025 03       		.uleb128 0x3
 928 0026 08       		.uleb128 0x8
 929 0027 00       		.byte	0
 930 0028 00       		.byte	0
 931 0029 04       		.uleb128 0x4
 932 002a 16       		.uleb128 0x16
 933 002b 00       		.byte	0
 934 002c 03       		.uleb128 0x3
 935 002d 0E       		.uleb128 0xe
 936 002e 3A       		.uleb128 0x3a
 937 002f 0B       		.uleb128 0xb
 938 0030 3B       		.uleb128 0x3b
 939 0031 05       		.uleb128 0x5
 940 0032 49       		.uleb128 0x49
 941 0033 13       		.uleb128 0x13
 942 0034 00       		.byte	0
 943 0035 00       		.byte	0
 944 0036 05       		.uleb128 0x5
 945 0037 35       		.uleb128 0x35
 946 0038 00       		.byte	0
 947 0039 49       		.uleb128 0x49
 948 003a 13       		.uleb128 0x13
 949 003b 00       		.byte	0
 950 003c 00       		.byte	0
 951 003d 06       		.uleb128 0x6
 952 003e 2E       		.uleb128 0x2e
 953 003f 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 28


 954 0040 3F       		.uleb128 0x3f
 955 0041 19       		.uleb128 0x19
 956 0042 03       		.uleb128 0x3
 957 0043 0E       		.uleb128 0xe
 958 0044 3A       		.uleb128 0x3a
 959 0045 0B       		.uleb128 0xb
 960 0046 3B       		.uleb128 0x3b
 961 0047 0B       		.uleb128 0xb
 962 0048 27       		.uleb128 0x27
 963 0049 19       		.uleb128 0x19
 964 004a 11       		.uleb128 0x11
 965 004b 01       		.uleb128 0x1
 966 004c 12       		.uleb128 0x12
 967 004d 06       		.uleb128 0x6
 968 004e 40       		.uleb128 0x40
 969 004f 18       		.uleb128 0x18
 970 0050 9742     		.uleb128 0x2117
 971 0052 19       		.uleb128 0x19
 972 0053 00       		.byte	0
 973 0054 00       		.byte	0
 974 0055 07       		.uleb128 0x7
 975 0056 2E       		.uleb128 0x2e
 976 0057 01       		.byte	0x1
 977 0058 3F       		.uleb128 0x3f
 978 0059 19       		.uleb128 0x19
 979 005a 03       		.uleb128 0x3
 980 005b 0E       		.uleb128 0xe
 981 005c 3A       		.uleb128 0x3a
 982 005d 0B       		.uleb128 0xb
 983 005e 3B       		.uleb128 0x3b
 984 005f 0B       		.uleb128 0xb
 985 0060 27       		.uleb128 0x27
 986 0061 19       		.uleb128 0x19
 987 0062 11       		.uleb128 0x11
 988 0063 01       		.uleb128 0x1
 989 0064 12       		.uleb128 0x12
 990 0065 06       		.uleb128 0x6
 991 0066 40       		.uleb128 0x40
 992 0067 18       		.uleb128 0x18
 993 0068 9742     		.uleb128 0x2117
 994 006a 19       		.uleb128 0x19
 995 006b 01       		.uleb128 0x1
 996 006c 13       		.uleb128 0x13
 997 006d 00       		.byte	0
 998 006e 00       		.byte	0
 999 006f 08       		.uleb128 0x8
 1000 0070 05       		.uleb128 0x5
 1001 0071 00       		.byte	0
 1002 0072 03       		.uleb128 0x3
 1003 0073 0E       		.uleb128 0xe
 1004 0074 3A       		.uleb128 0x3a
 1005 0075 0B       		.uleb128 0xb
 1006 0076 3B       		.uleb128 0x3b
 1007 0077 0B       		.uleb128 0xb
 1008 0078 49       		.uleb128 0x49
 1009 0079 13       		.uleb128 0x13
 1010 007a 02       		.uleb128 0x2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 29


 1011 007b 18       		.uleb128 0x18
 1012 007c 00       		.byte	0
 1013 007d 00       		.byte	0
 1014 007e 09       		.uleb128 0x9
 1015 007f 2E       		.uleb128 0x2e
 1016 0080 00       		.byte	0
 1017 0081 3F       		.uleb128 0x3f
 1018 0082 19       		.uleb128 0x19
 1019 0083 03       		.uleb128 0x3
 1020 0084 0E       		.uleb128 0xe
 1021 0085 3A       		.uleb128 0x3a
 1022 0086 0B       		.uleb128 0xb
 1023 0087 3B       		.uleb128 0x3b
 1024 0088 05       		.uleb128 0x5
 1025 0089 27       		.uleb128 0x27
 1026 008a 19       		.uleb128 0x19
 1027 008b 49       		.uleb128 0x49
 1028 008c 13       		.uleb128 0x13
 1029 008d 11       		.uleb128 0x11
 1030 008e 01       		.uleb128 0x1
 1031 008f 12       		.uleb128 0x12
 1032 0090 06       		.uleb128 0x6
 1033 0091 40       		.uleb128 0x40
 1034 0092 18       		.uleb128 0x18
 1035 0093 9742     		.uleb128 0x2117
 1036 0095 19       		.uleb128 0x19
 1037 0096 00       		.byte	0
 1038 0097 00       		.byte	0
 1039 0098 0A       		.uleb128 0xa
 1040 0099 2E       		.uleb128 0x2e
 1041 009a 01       		.byte	0x1
 1042 009b 3F       		.uleb128 0x3f
 1043 009c 19       		.uleb128 0x19
 1044 009d 03       		.uleb128 0x3
 1045 009e 0E       		.uleb128 0xe
 1046 009f 3A       		.uleb128 0x3a
 1047 00a0 0B       		.uleb128 0xb
 1048 00a1 3B       		.uleb128 0x3b
 1049 00a2 05       		.uleb128 0x5
 1050 00a3 27       		.uleb128 0x27
 1051 00a4 19       		.uleb128 0x19
 1052 00a5 11       		.uleb128 0x11
 1053 00a6 01       		.uleb128 0x1
 1054 00a7 12       		.uleb128 0x12
 1055 00a8 06       		.uleb128 0x6
 1056 00a9 40       		.uleb128 0x40
 1057 00aa 18       		.uleb128 0x18
 1058 00ab 9742     		.uleb128 0x2117
 1059 00ad 19       		.uleb128 0x19
 1060 00ae 01       		.uleb128 0x1
 1061 00af 13       		.uleb128 0x13
 1062 00b0 00       		.byte	0
 1063 00b1 00       		.byte	0
 1064 00b2 0B       		.uleb128 0xb
 1065 00b3 05       		.uleb128 0x5
 1066 00b4 00       		.byte	0
 1067 00b5 03       		.uleb128 0x3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 30


 1068 00b6 0E       		.uleb128 0xe
 1069 00b7 3A       		.uleb128 0x3a
 1070 00b8 0B       		.uleb128 0xb
 1071 00b9 3B       		.uleb128 0x3b
 1072 00ba 05       		.uleb128 0x5
 1073 00bb 49       		.uleb128 0x49
 1074 00bc 13       		.uleb128 0x13
 1075 00bd 02       		.uleb128 0x2
 1076 00be 18       		.uleb128 0x18
 1077 00bf 00       		.byte	0
 1078 00c0 00       		.byte	0
 1079 00c1 0C       		.uleb128 0xc
 1080 00c2 898201   		.uleb128 0x4109
 1081 00c5 00       		.byte	0
 1082 00c6 11       		.uleb128 0x11
 1083 00c7 01       		.uleb128 0x1
 1084 00c8 31       		.uleb128 0x31
 1085 00c9 13       		.uleb128 0x13
 1086 00ca 00       		.byte	0
 1087 00cb 00       		.byte	0
 1088 00cc 0D       		.uleb128 0xd
 1089 00cd 34       		.uleb128 0x34
 1090 00ce 00       		.byte	0
 1091 00cf 03       		.uleb128 0x3
 1092 00d0 0E       		.uleb128 0xe
 1093 00d1 3A       		.uleb128 0x3a
 1094 00d2 0B       		.uleb128 0xb
 1095 00d3 3B       		.uleb128 0x3b
 1096 00d4 0B       		.uleb128 0xb
 1097 00d5 49       		.uleb128 0x49
 1098 00d6 13       		.uleb128 0x13
 1099 00d7 02       		.uleb128 0x2
 1100 00d8 17       		.uleb128 0x17
 1101 00d9 00       		.byte	0
 1102 00da 00       		.byte	0
 1103 00db 0E       		.uleb128 0xe
 1104 00dc 898201   		.uleb128 0x4109
 1105 00df 01       		.byte	0x1
 1106 00e0 11       		.uleb128 0x11
 1107 00e1 01       		.uleb128 0x1
 1108 00e2 31       		.uleb128 0x31
 1109 00e3 13       		.uleb128 0x13
 1110 00e4 01       		.uleb128 0x1
 1111 00e5 13       		.uleb128 0x13
 1112 00e6 00       		.byte	0
 1113 00e7 00       		.byte	0
 1114 00e8 0F       		.uleb128 0xf
 1115 00e9 8A8201   		.uleb128 0x410a
 1116 00ec 00       		.byte	0
 1117 00ed 02       		.uleb128 0x2
 1118 00ee 18       		.uleb128 0x18
 1119 00ef 9142     		.uleb128 0x2111
 1120 00f1 18       		.uleb128 0x18
 1121 00f2 00       		.byte	0
 1122 00f3 00       		.byte	0
 1123 00f4 10       		.uleb128 0x10
 1124 00f5 34       		.uleb128 0x34
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 31


 1125 00f6 00       		.byte	0
 1126 00f7 03       		.uleb128 0x3
 1127 00f8 0E       		.uleb128 0xe
 1128 00f9 3A       		.uleb128 0x3a
 1129 00fa 0B       		.uleb128 0xb
 1130 00fb 3B       		.uleb128 0x3b
 1131 00fc 0B       		.uleb128 0xb
 1132 00fd 49       		.uleb128 0x49
 1133 00fe 13       		.uleb128 0x13
 1134 00ff 3F       		.uleb128 0x3f
 1135 0100 19       		.uleb128 0x19
 1136 0101 02       		.uleb128 0x2
 1137 0102 18       		.uleb128 0x18
 1138 0103 00       		.byte	0
 1139 0104 00       		.byte	0
 1140 0105 11       		.uleb128 0x11
 1141 0106 2E       		.uleb128 0x2e
 1142 0107 00       		.byte	0
 1143 0108 3F       		.uleb128 0x3f
 1144 0109 19       		.uleb128 0x19
 1145 010a 03       		.uleb128 0x3
 1146 010b 0E       		.uleb128 0xe
 1147 010c 3A       		.uleb128 0x3a
 1148 010d 0B       		.uleb128 0xb
 1149 010e 3B       		.uleb128 0x3b
 1150 010f 0B       		.uleb128 0xb
 1151 0110 27       		.uleb128 0x27
 1152 0111 19       		.uleb128 0x19
 1153 0112 49       		.uleb128 0x49
 1154 0113 13       		.uleb128 0x13
 1155 0114 3C       		.uleb128 0x3c
 1156 0115 19       		.uleb128 0x19
 1157 0116 00       		.byte	0
 1158 0117 00       		.byte	0
 1159 0118 12       		.uleb128 0x12
 1160 0119 2E       		.uleb128 0x2e
 1161 011a 01       		.byte	0x1
 1162 011b 3F       		.uleb128 0x3f
 1163 011c 19       		.uleb128 0x19
 1164 011d 03       		.uleb128 0x3
 1165 011e 0E       		.uleb128 0xe
 1166 011f 3A       		.uleb128 0x3a
 1167 0120 0B       		.uleb128 0xb
 1168 0121 3B       		.uleb128 0x3b
 1169 0122 0B       		.uleb128 0xb
 1170 0123 27       		.uleb128 0x27
 1171 0124 19       		.uleb128 0x19
 1172 0125 3C       		.uleb128 0x3c
 1173 0126 19       		.uleb128 0x19
 1174 0127 00       		.byte	0
 1175 0128 00       		.byte	0
 1176 0129 13       		.uleb128 0x13
 1177 012a 05       		.uleb128 0x5
 1178 012b 00       		.byte	0
 1179 012c 49       		.uleb128 0x49
 1180 012d 13       		.uleb128 0x13
 1181 012e 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 32


 1182 012f 00       		.byte	0
 1183 0130 00       		.byte	0
 1184              		.section	.debug_loc,"",%progbits
 1185              	.Ldebug_loc0:
 1186              	.LLST0:
 1187 0000 0A000000 		.4byte	.LVL7
 1188 0004 0E000000 		.4byte	.LVL8
 1189 0008 0100     		.2byte	0x1
 1190 000a 53       		.byte	0x53
 1191 000b 16000000 		.4byte	.LVL9
 1192 000f 1B000000 		.4byte	.LVL10-1
 1193 0013 0100     		.2byte	0x1
 1194 0015 53       		.byte	0x53
 1195 0016 00000000 		.4byte	0
 1196 001a 00000000 		.4byte	0
 1197              	.LLST1:
 1198 001e 42000000 		.4byte	.LVL16
 1199 0022 4F000000 		.4byte	.LVL17-1
 1200 0026 0100     		.2byte	0x1
 1201 0028 50       		.byte	0x50
 1202 0029 00000000 		.4byte	0
 1203 002d 00000000 		.4byte	0
 1204              		.section	.debug_aranges,"",%progbits
 1205 0000 94000000 		.4byte	0x94
 1206 0004 0200     		.2byte	0x2
 1207 0006 00000000 		.4byte	.Ldebug_info0
 1208 000a 04       		.byte	0x4
 1209 000b 00       		.byte	0
 1210 000c 0000     		.2byte	0
 1211 000e 0000     		.2byte	0
 1212 0010 00000000 		.4byte	.LFB1
 1213 0014 10000000 		.4byte	.LFE1-.LFB1
 1214 0018 00000000 		.4byte	.LFB3
 1215 001c 10000000 		.4byte	.LFE3-.LFB3
 1216 0020 00000000 		.4byte	.LFB4
 1217 0024 0C000000 		.4byte	.LFE4-.LFB4
 1218 0028 00000000 		.4byte	.LFB5
 1219 002c 0C000000 		.4byte	.LFE5-.LFB5
 1220 0030 00000000 		.4byte	.LFB6
 1221 0034 0C000000 		.4byte	.LFE6-.LFB6
 1222 0038 00000000 		.4byte	.LFB7
 1223 003c 0C000000 		.4byte	.LFE7-.LFB7
 1224 0040 00000000 		.4byte	.LFB8
 1225 0044 0C000000 		.4byte	.LFE8-.LFB8
 1226 0048 00000000 		.4byte	.LFB9
 1227 004c 14000000 		.4byte	.LFE9-.LFB9
 1228 0050 00000000 		.4byte	.LFB10
 1229 0054 0C000000 		.4byte	.LFE10-.LFB10
 1230 0058 00000000 		.4byte	.LFB11
 1231 005c 0C000000 		.4byte	.LFE11-.LFB11
 1232 0060 00000000 		.4byte	.LFB12
 1233 0064 0C000000 		.4byte	.LFE12-.LFB12
 1234 0068 00000000 		.4byte	.LFB13
 1235 006c 0C000000 		.4byte	.LFE13-.LFB13
 1236 0070 00000000 		.4byte	.LFB14
 1237 0074 0C000000 		.4byte	.LFE14-.LFB14
 1238 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 33


 1239 007c 14000000 		.4byte	.LFE15-.LFB15
 1240 0080 00000000 		.4byte	.LFB0
 1241 0084 5C000000 		.4byte	.LFE0-.LFB0
 1242 0088 00000000 		.4byte	.LFB2
 1243 008c 1C000000 		.4byte	.LFE2-.LFB2
 1244 0090 00000000 		.4byte	0
 1245 0094 00000000 		.4byte	0
 1246              		.section	.debug_ranges,"",%progbits
 1247              	.Ldebug_ranges0:
 1248 0000 00000000 		.4byte	.LFB1
 1249 0004 10000000 		.4byte	.LFE1
 1250 0008 00000000 		.4byte	.LFB3
 1251 000c 10000000 		.4byte	.LFE3
 1252 0010 00000000 		.4byte	.LFB4
 1253 0014 0C000000 		.4byte	.LFE4
 1254 0018 00000000 		.4byte	.LFB5
 1255 001c 0C000000 		.4byte	.LFE5
 1256 0020 00000000 		.4byte	.LFB6
 1257 0024 0C000000 		.4byte	.LFE6
 1258 0028 00000000 		.4byte	.LFB7
 1259 002c 0C000000 		.4byte	.LFE7
 1260 0030 00000000 		.4byte	.LFB8
 1261 0034 0C000000 		.4byte	.LFE8
 1262 0038 00000000 		.4byte	.LFB9
 1263 003c 14000000 		.4byte	.LFE9
 1264 0040 00000000 		.4byte	.LFB10
 1265 0044 0C000000 		.4byte	.LFE10
 1266 0048 00000000 		.4byte	.LFB11
 1267 004c 0C000000 		.4byte	.LFE11
 1268 0050 00000000 		.4byte	.LFB12
 1269 0054 0C000000 		.4byte	.LFE12
 1270 0058 00000000 		.4byte	.LFB13
 1271 005c 0C000000 		.4byte	.LFE13
 1272 0060 00000000 		.4byte	.LFB14
 1273 0064 0C000000 		.4byte	.LFE14
 1274 0068 00000000 		.4byte	.LFB15
 1275 006c 14000000 		.4byte	.LFE15
 1276 0070 00000000 		.4byte	.LFB0
 1277 0074 5C000000 		.4byte	.LFE0
 1278 0078 00000000 		.4byte	.LFB2
 1279 007c 1C000000 		.4byte	.LFE2
 1280 0080 00000000 		.4byte	0
 1281 0084 00000000 		.4byte	0
 1282              		.section	.debug_line,"",%progbits
 1283              	.Ldebug_line0:
 1284 0000 91010000 		.section	.debug_str,"MS",%progbits,1
 1284      02005D00 
 1284      00000201 
 1284      FB0E0D00 
 1284      01010101 
 1285              	.LASF15:
 1286 0000 72656733 		.ascii	"reg32\000"
 1286      3200
 1287              	.LASF34:
 1288 0006 52696768 		.ascii	"Right_Phase_Counter_ReadCompare\000"
 1288      745F5068 
 1288      6173655F 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 34


 1288      436F756E 
 1288      7465725F 
 1289              	.LASF33:
 1290 0026 636F6D70 		.ascii	"compare\000"
 1290      61726500 
 1291              	.LASF41:
 1292 002e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Right_Phase_Counter.c\000"
 1292      6E657261 
 1292      7465645F 
 1292      536F7572 
 1292      63655C50 
 1293              	.LASF17:
 1294 005d 52696768 		.ascii	"Right_Phase_Counter_Enable\000"
 1294      745F5068 
 1294      6173655F 
 1294      436F756E 
 1294      7465725F 
 1295              	.LASF30:
 1296 0078 70657269 		.ascii	"period\000"
 1296      6F6400
 1297              	.LASF3:
 1298 007f 73686F72 		.ascii	"short unsigned int\000"
 1298      7420756E 
 1298      7369676E 
 1298      65642069 
 1298      6E7400
 1299              	.LASF42:
 1300 0092 443A5C70 		.ascii	"D:\\projects\\ArloBot\\arlobot_freesoc\\freesoc.cyd"
 1300      726F6A65 
 1300      6374735C 
 1300      41726C6F 
 1300      426F745C 
 1301 00c1 736E00   		.ascii	"sn\000"
 1302              	.LASF36:
 1303 00c4 52696768 		.ascii	"Right_Phase_Counter_Init\000"
 1303      745F5068 
 1303      6173655F 
 1303      436F756E 
 1303      7465725F 
 1304              	.LASF43:
 1305 00dd 52696768 		.ascii	"Right_Phase_Counter_initVar\000"
 1305      745F5068 
 1305      6173655F 
 1305      436F756E 
 1305      7465725F 
 1306              	.LASF18:
 1307 00f9 52696768 		.ascii	"Right_Phase_Counter_Stop\000"
 1307      745F5068 
 1307      6173655F 
 1307      436F756E 
 1307      7465725F 
 1308              	.LASF11:
 1309 0112 666C6F61 		.ascii	"float\000"
 1309      7400
 1310              	.LASF26:
 1311 0118 636F756E 		.ascii	"counter\000"
 1311      74657200 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 35


 1312              	.LASF7:
 1313 0120 6C6F6E67 		.ascii	"long long unsigned int\000"
 1313      206C6F6E 
 1313      6720756E 
 1313      7369676E 
 1313      65642069 
 1314              	.LASF1:
 1315 0137 756E7369 		.ascii	"unsigned char\000"
 1315      676E6564 
 1315      20636861 
 1315      7200
 1316              	.LASF14:
 1317 0145 72656738 		.ascii	"reg8\000"
 1317      00
 1318              	.LASF5:
 1319 014a 6C6F6E67 		.ascii	"long unsigned int\000"
 1319      20756E73 
 1319      69676E65 
 1319      6420696E 
 1319      7400
 1320              	.LASF39:
 1321 015c 52696768 		.ascii	"Right_Phase_Counter_Start\000"
 1321      745F5068 
 1321      6173655F 
 1321      436F756E 
 1321      7465725F 
 1322              	.LASF24:
 1323 0176 636F6E74 		.ascii	"control\000"
 1323      726F6C00 
 1324              	.LASF23:
 1325 017e 696E7465 		.ascii	"interruptsMask\000"
 1325      72727570 
 1325      74734D61 
 1325      736B00
 1326              	.LASF32:
 1327 018d 52696768 		.ascii	"Right_Phase_Counter_WriteCompare\000"
 1327      745F5068 
 1327      6173655F 
 1327      436F756E 
 1327      7465725F 
 1328              	.LASF22:
 1329 01ae 52696768 		.ascii	"Right_Phase_Counter_WriteControlRegister\000"
 1329      745F5068 
 1329      6173655F 
 1329      436F756E 
 1329      7465725F 
 1330              	.LASF27:
 1331 01d7 52696768 		.ascii	"Right_Phase_Counter_ReadCounter\000"
 1331      745F5068 
 1331      6173655F 
 1331      436F756E 
 1331      7465725F 
 1332              	.LASF20:
 1333 01f7 52696768 		.ascii	"Right_Phase_Counter_ReadControlRegister\000"
 1333      745F5068 
 1333      6173655F 
 1333      436F756E 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 36


 1333      7465725F 
 1334              	.LASF12:
 1335 021f 646F7562 		.ascii	"double\000"
 1335      6C6500
 1336              	.LASF35:
 1337 0226 52696768 		.ascii	"Right_Phase_Counter_ClearFIFO\000"
 1337      745F5068 
 1337      6173655F 
 1337      436F756E 
 1337      7465725F 
 1338              	.LASF10:
 1339 0244 75696E74 		.ascii	"uint32\000"
 1339      333200
 1340              	.LASF40:
 1341 024b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1341      4320342E 
 1341      392E3320 
 1341      32303135 
 1341      30333033 
 1342 027e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1342      20726576 
 1342      6973696F 
 1342      6E203232 
 1342      31323230 
 1343 02b1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1343      66756E63 
 1343      74696F6E 
 1343      2D736563 
 1343      74696F6E 
 1344              	.LASF44:
 1345 02d9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1345      74657243 
 1345      72697469 
 1345      63616C53 
 1345      65637469 
 1346              	.LASF8:
 1347 02f0 756E7369 		.ascii	"unsigned int\000"
 1347      676E6564 
 1347      20696E74 
 1347      00
 1348              	.LASF31:
 1349 02fd 52696768 		.ascii	"Right_Phase_Counter_ReadPeriod\000"
 1349      745F5068 
 1349      6173655F 
 1349      436F756E 
 1349      7465725F 
 1350              	.LASF45:
 1351 031c 43794578 		.ascii	"CyExitCriticalSection\000"
 1351      69744372 
 1351      69746963 
 1351      616C5365 
 1351      6374696F 
 1352              	.LASF29:
 1353 0332 52696768 		.ascii	"Right_Phase_Counter_WritePeriod\000"
 1353      745F5068 
 1353      6173655F 
 1353      436F756E 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 37


 1353      7465725F 
 1354              	.LASF28:
 1355 0352 52696768 		.ascii	"Right_Phase_Counter_ReadCapture\000"
 1355      745F5068 
 1355      6173655F 
 1355      436F756E 
 1355      7465725F 
 1356              	.LASF19:
 1357 0372 52696768 		.ascii	"Right_Phase_Counter_ReadStatusRegister\000"
 1357      745F5068 
 1357      6173655F 
 1357      436F756E 
 1357      7465725F 
 1358              	.LASF37:
 1359 0399 6374726C 		.ascii	"ctrl\000"
 1359      00
 1360              	.LASF16:
 1361 039e 73697A65 		.ascii	"sizetype\000"
 1361      74797065 
 1361      00
 1362              	.LASF6:
 1363 03a7 6C6F6E67 		.ascii	"long long int\000"
 1363      206C6F6E 
 1363      6720696E 
 1363      7400
 1364              	.LASF13:
 1365 03b5 63686172 		.ascii	"char\000"
 1365      00
 1366              	.LASF25:
 1367 03ba 52696768 		.ascii	"Right_Phase_Counter_WriteCounter\000"
 1367      745F5068 
 1367      6173655F 
 1367      436F756E 
 1367      7465725F 
 1368              	.LASF2:
 1369 03db 73686F72 		.ascii	"short int\000"
 1369      7420696E 
 1369      7400
 1370              	.LASF9:
 1371 03e5 75696E74 		.ascii	"uint8\000"
 1371      3800
 1372              	.LASF38:
 1373 03eb 52696768 		.ascii	"Right_Phase_Counter_interruptState\000"
 1373      745F5068 
 1373      6173655F 
 1373      436F756E 
 1373      7465725F 
 1374              	.LASF4:
 1375 040e 6C6F6E67 		.ascii	"long int\000"
 1375      20696E74 
 1375      00
 1376              	.LASF0:
 1377 0417 7369676E 		.ascii	"signed char\000"
 1377      65642063 
 1377      68617200 
 1378              	.LASF21:
 1379 0423 52696768 		.ascii	"Right_Phase_Counter_SetInterruptMode\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccW9j88b.s 			page 38


 1379      745F5068 
 1379      6173655F 
 1379      436F756E 
 1379      7465725F 
 1380              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
