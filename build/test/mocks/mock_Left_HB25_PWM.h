/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LEFT_HB25_PWM_H
#define _MOCK_LEFT_HB25_PWM_H

#include "Left_HB25_PWM.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_Left_HB25_PWM_Init(void);
void mock_Left_HB25_PWM_Destroy(void);
void mock_Left_HB25_PWM_Verify(void);




#define Left_HB25_PWM_Start_Ignore() Left_HB25_PWM_Start_CMockIgnore()
void Left_HB25_PWM_Start_CMockIgnore(void);
#define Left_HB25_PWM_Start_Expect() Left_HB25_PWM_Start_CMockExpect(__LINE__)
void Left_HB25_PWM_Start_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Start_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Start_StubWithCallback(CMOCK_Left_HB25_PWM_Start_CALLBACK Callback);
#define Left_HB25_PWM_Stop_Ignore() Left_HB25_PWM_Stop_CMockIgnore()
void Left_HB25_PWM_Stop_CMockIgnore(void);
#define Left_HB25_PWM_Stop_Expect() Left_HB25_PWM_Stop_CMockExpect(__LINE__)
void Left_HB25_PWM_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Stop_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Stop_StubWithCallback(CMOCK_Left_HB25_PWM_Stop_CALLBACK Callback);
#define Left_HB25_PWM_ReadCounter_IgnoreAndReturn(cmock_retval) Left_HB25_PWM_ReadCounter_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCounter_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define Left_HB25_PWM_ReadCounter_ExpectAndReturn(cmock_retval) Left_HB25_PWM_ReadCounter_CMockExpectAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCounter_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
typedef uint16 (* CMOCK_Left_HB25_PWM_ReadCounter_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_ReadCounter_StubWithCallback(CMOCK_Left_HB25_PWM_ReadCounter_CALLBACK Callback);
#define Left_HB25_PWM_ReadCapture_IgnoreAndReturn(cmock_retval) Left_HB25_PWM_ReadCapture_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCapture_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define Left_HB25_PWM_ReadCapture_ExpectAndReturn(cmock_retval) Left_HB25_PWM_ReadCapture_CMockExpectAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCapture_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
typedef uint16 (* CMOCK_Left_HB25_PWM_ReadCapture_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_ReadCapture_StubWithCallback(CMOCK_Left_HB25_PWM_ReadCapture_CALLBACK Callback);
#define Left_HB25_PWM_WriteCounter_Ignore() Left_HB25_PWM_WriteCounter_CMockIgnore()
void Left_HB25_PWM_WriteCounter_CMockIgnore(void);
#define Left_HB25_PWM_WriteCounter_Expect(counter) Left_HB25_PWM_WriteCounter_CMockExpect(__LINE__, counter)
void Left_HB25_PWM_WriteCounter_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16 counter);
typedef void (* CMOCK_Left_HB25_PWM_WriteCounter_CALLBACK)(uint16 counter, int cmock_num_calls);
void Left_HB25_PWM_WriteCounter_StubWithCallback(CMOCK_Left_HB25_PWM_WriteCounter_CALLBACK Callback);
#define Left_HB25_PWM_WritePeriod_Ignore() Left_HB25_PWM_WritePeriod_CMockIgnore()
void Left_HB25_PWM_WritePeriod_CMockIgnore(void);
#define Left_HB25_PWM_WritePeriod_Expect(period) Left_HB25_PWM_WritePeriod_CMockExpect(__LINE__, period)
void Left_HB25_PWM_WritePeriod_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16 period);
typedef void (* CMOCK_Left_HB25_PWM_WritePeriod_CALLBACK)(uint16 period, int cmock_num_calls);
void Left_HB25_PWM_WritePeriod_StubWithCallback(CMOCK_Left_HB25_PWM_WritePeriod_CALLBACK Callback);
#define Left_HB25_PWM_ReadPeriod_IgnoreAndReturn(cmock_retval) Left_HB25_PWM_ReadPeriod_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadPeriod_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define Left_HB25_PWM_ReadPeriod_ExpectAndReturn(cmock_retval) Left_HB25_PWM_ReadPeriod_CMockExpectAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadPeriod_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
typedef uint16 (* CMOCK_Left_HB25_PWM_ReadPeriod_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_ReadPeriod_StubWithCallback(CMOCK_Left_HB25_PWM_ReadPeriod_CALLBACK Callback);
#define Left_HB25_PWM_WriteCompare_Ignore() Left_HB25_PWM_WriteCompare_CMockIgnore()
void Left_HB25_PWM_WriteCompare_CMockIgnore(void);
#define Left_HB25_PWM_WriteCompare_Expect(compare) Left_HB25_PWM_WriteCompare_CMockExpect(__LINE__, compare)
void Left_HB25_PWM_WriteCompare_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16 compare);
typedef void (* CMOCK_Left_HB25_PWM_WriteCompare_CALLBACK)(uint16 compare, int cmock_num_calls);
void Left_HB25_PWM_WriteCompare_StubWithCallback(CMOCK_Left_HB25_PWM_WriteCompare_CALLBACK Callback);
#define Left_HB25_PWM_ReadCompare_IgnoreAndReturn(cmock_retval) Left_HB25_PWM_ReadCompare_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCompare_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define Left_HB25_PWM_ReadCompare_ExpectAndReturn(cmock_retval) Left_HB25_PWM_ReadCompare_CMockExpectAndReturn(__LINE__, cmock_retval)
void Left_HB25_PWM_ReadCompare_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
typedef uint16 (* CMOCK_Left_HB25_PWM_ReadCompare_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_ReadCompare_StubWithCallback(CMOCK_Left_HB25_PWM_ReadCompare_CALLBACK Callback);
#define Left_HB25_PWM_Init_Ignore() Left_HB25_PWM_Init_CMockIgnore()
void Left_HB25_PWM_Init_CMockIgnore(void);
#define Left_HB25_PWM_Init_Expect() Left_HB25_PWM_Init_CMockExpect(__LINE__)
void Left_HB25_PWM_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Init_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Init_StubWithCallback(CMOCK_Left_HB25_PWM_Init_CALLBACK Callback);
#define Left_HB25_PWM_Enable_Ignore() Left_HB25_PWM_Enable_CMockIgnore()
void Left_HB25_PWM_Enable_CMockIgnore(void);
#define Left_HB25_PWM_Enable_Expect() Left_HB25_PWM_Enable_CMockExpect(__LINE__)
void Left_HB25_PWM_Enable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Enable_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Enable_StubWithCallback(CMOCK_Left_HB25_PWM_Enable_CALLBACK Callback);
#define Left_HB25_PWM_Sleep_Ignore() Left_HB25_PWM_Sleep_CMockIgnore()
void Left_HB25_PWM_Sleep_CMockIgnore(void);
#define Left_HB25_PWM_Sleep_Expect() Left_HB25_PWM_Sleep_CMockExpect(__LINE__)
void Left_HB25_PWM_Sleep_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Sleep_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Sleep_StubWithCallback(CMOCK_Left_HB25_PWM_Sleep_CALLBACK Callback);
#define Left_HB25_PWM_Wakeup_Ignore() Left_HB25_PWM_Wakeup_CMockIgnore()
void Left_HB25_PWM_Wakeup_CMockIgnore(void);
#define Left_HB25_PWM_Wakeup_Expect() Left_HB25_PWM_Wakeup_CMockExpect(__LINE__)
void Left_HB25_PWM_Wakeup_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_Wakeup_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_Wakeup_StubWithCallback(CMOCK_Left_HB25_PWM_Wakeup_CALLBACK Callback);
#define Left_HB25_PWM_SaveConfig_Ignore() Left_HB25_PWM_SaveConfig_CMockIgnore()
void Left_HB25_PWM_SaveConfig_CMockIgnore(void);
#define Left_HB25_PWM_SaveConfig_Expect() Left_HB25_PWM_SaveConfig_CMockExpect(__LINE__)
void Left_HB25_PWM_SaveConfig_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_SaveConfig_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_SaveConfig_StubWithCallback(CMOCK_Left_HB25_PWM_SaveConfig_CALLBACK Callback);
#define Left_HB25_PWM_RestoreConfig_Ignore() Left_HB25_PWM_RestoreConfig_CMockIgnore()
void Left_HB25_PWM_RestoreConfig_CMockIgnore(void);
#define Left_HB25_PWM_RestoreConfig_Expect() Left_HB25_PWM_RestoreConfig_CMockExpect(__LINE__)
void Left_HB25_PWM_RestoreConfig_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Left_HB25_PWM_RestoreConfig_CALLBACK)(int cmock_num_calls);
void Left_HB25_PWM_RestoreConfig_StubWithCallback(CMOCK_Left_HB25_PWM_RestoreConfig_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
