ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Rear_Echo_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Rear_Echo_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Rear_Echo_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Rear_Echo_Timer_Enable, %function
  24              	Rear_Echo_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Rear_Echo_Timer.c"
   1:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * File Name: Rear_Echo_Timer.c
   3:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
   5:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  15:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  17:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  24:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #include "Rear_Echo_Timer.h"
  25:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  26:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint8 Rear_Echo_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  28:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  29:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_Init
  31:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 2


  32:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  33:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  36:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  39:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
  42:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
  45:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(!Rear_Echo_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             uint8 Rear_Echo_Timer_interruptState;
  48:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  50:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (Rear_Echo_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= Rear_Echo_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  54:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_CONTROL2 &= ((uint8)(~Rear_Echo_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  59:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_CONTROL3 &= ((uint8)(~Rear_Echo_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  63:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  69:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  76:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  82:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  84:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL2 |= Rear_Echo_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 3


  89:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  90:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 &= ((uint8)(~Rear_Echo_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 |= Rear_Echo_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  95:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 &= ((uint8)(~Rear_Echo_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 |= Rear_Echo_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
  99:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 Rear_Echo_Timer_CONTROL3 |= Rear_Echo_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 103:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 105:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_RT1 &= ((uint8)(~Rear_Echo_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_RT1 |= Rear_Echo_Timer_SYNC;
 108:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 109:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_RT1 &= ((uint8)(~Rear_Echo_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_RT1 |= Rear_Echo_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 113:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL2 |= Rear_Echo_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 117:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_WritePeriod(Rear_Echo_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_WriteCounter(Rear_Echo_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 121:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (Rear_Echo_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CAPTURE_COUNT_CTRL |= Rear_Echo_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_SetCaptureCount(Rear_Echo_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 126:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_SetCaptureMode(Rear_Echo_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 131:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 if (0u == (Rear_Echo_Timer_CONTROL & Rear_Echo_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                     Rear_Echo_Timer_SetTriggerMode(Rear_Echo_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             #endif /* (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 140:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 144:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_STATUS_AUX_CTRL |= Rear_Echo_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 4


 146:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 147:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         CyExitCriticalSection(Rear_Echo_Timer_interruptState);
 149:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 150:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 		
 154:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 		
 155:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #if (Rear_Echo_Timer_InterruptOnCaptureCount && !Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****             Rear_Echo_Timer_SetInterruptCount(Rear_Echo_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 159:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 162:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_SetInterruptMode(Rear_Echo_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 164:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 165:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 166:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_Enable
 168:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 170:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 173:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 176:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 179:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE1:
  35              		.size	Rear_Echo_Timer_Enable, .-Rear_Echo_Timer_Enable
  36 0002 00BF     		.section	.text.Rear_Echo_Timer_Stop,"ax",%progbits
  37              		.align	2
  38              		.global	Rear_Echo_Timer_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	Rear_Echo_Timer_Stop, %function
  42              	Rear_Echo_Timer_Stop:
  43              	.LFB3:
 182:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (Rear_Echo_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_GLOBAL_ENABLE |= Rear_Echo_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_GLOBAL_STBY_ENABLE |= Rear_Echo_Timer_BLOCK_STBY_EN_MASK;
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 5


 186:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 188:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED || Rear_Echo_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL |= Rear_Echo_Timer_CTRL_ENABLE;
 191:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 193:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 194:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 195:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_Start
 197:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 199:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 204:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 207:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 210:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Rear_Echo_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 214:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 217:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     if(Rear_Echo_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     {
 219:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_Init();
 220:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 221:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     }
 223:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 224:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_Enable();
 226:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 227:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 228:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 229:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_Stop
 231:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 233:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 237:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 240:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 6


 243:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 246:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
  44              		.loc 1 248 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE3:
  52              		.size	Rear_Echo_Timer_Stop, .-Rear_Echo_Timer_Stop
  53 0002 00BF     		.section	.text.Rear_Echo_Timer_SetInterruptMode,"ax",%progbits
  54              		.align	2
  55              		.global	Rear_Echo_Timer_SetInterruptMode
  56              		.thumb
  57              		.thumb_func
  58              		.type	Rear_Echo_Timer_SetInterruptMode, %function
  59              	Rear_Echo_Timer_SetInterruptMode:
  60              	.LFB4:
 249:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED || Rear_Echo_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= ((uint8)(~Rear_Echo_Timer_CTRL_ENABLE));
 252:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 254:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (Rear_Echo_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_GLOBAL_ENABLE &= ((uint8)(~Rear_Echo_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Rear_Echo_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 260:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 261:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 262:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 266:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 271:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 275:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 278:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
  61              		.loc 1 280 0
  62              		.cfi_startproc
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 7


  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL0:
 281:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_STATUS_MASK = interruptMode;
  67              		.loc 1 281 0
  68 0000 014B     		ldr	r3, .L4
  69 0002 1870     		strb	r0, [r3]
  70 0004 7047     		bx	lr
  71              	.L5:
  72 0006 00BF     		.align	2
  73              	.L4:
  74 0008 89650040 		.word	1073767817
  75              		.cfi_endproc
  76              	.LFE4:
  77              		.size	Rear_Echo_Timer_SetInterruptMode, .-Rear_Echo_Timer_SetInterruptMode
  78              		.section	.text.Rear_Echo_Timer_SoftwareCapture,"ax",%progbits
  79              		.align	2
  80              		.global	Rear_Echo_Timer_SoftwareCapture
  81              		.thumb
  82              		.thumb_func
  83              		.type	Rear_Echo_Timer_SoftwareCapture, %function
  84              	Rear_Echo_Timer_SoftwareCapture:
  85              	.LFB5:
 282:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 283:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 284:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 285:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 289:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 292:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 295:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 298:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 301:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
  86              		.loc 1 303 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(Rear_Echo_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         (void)CY_GET_REG16(Rear_Echo_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         (void)CY_GET_REG8(Rear_Echo_Timer_COUNTER_LSB_PTR_8BIT);
  91              		.loc 1 308 0
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 8


  92 0000 014B     		ldr	r3, .L7
  93 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94 0004 7047     		bx	lr
  95              	.L8:
  96 0006 00BF     		.align	2
  97              	.L7:
  98 0008 08650040 		.word	1073767688
  99              		.cfi_endproc
 100              	.LFE5:
 101              		.size	Rear_Echo_Timer_SoftwareCapture, .-Rear_Echo_Timer_SoftwareCapture
 102              		.section	.text.Rear_Echo_Timer_ReadStatusRegister,"ax",%progbits
 103              		.align	2
 104              		.global	Rear_Echo_Timer_ReadStatusRegister
 105              		.thumb
 106              		.thumb_func
 107              		.type	Rear_Echo_Timer_ReadStatusRegister, %function
 108              	Rear_Echo_Timer_ReadStatusRegister:
 109              	.LFB6:
 309:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif/* (Rear_Echo_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 312:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 313:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 314:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 318:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 323:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 326:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 329:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 332:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint8   Rear_Echo_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 110              		.loc 1 334 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     return (Rear_Echo_Timer_STATUS);
 115              		.loc 1 335 0
 116 0000 014B     		ldr	r3, .L10
 117 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 118              		.loc 1 336 0
 119 0004 7047     		bx	lr
 120              	.L11:
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 9


 121 0006 00BF     		.align	2
 122              	.L10:
 123 0008 69650040 		.word	1073767785
 124              		.cfi_endproc
 125              	.LFE6:
 126              		.size	Rear_Echo_Timer_ReadStatusRegister, .-Rear_Echo_Timer_ReadStatusRegister
 127              		.section	.text.Rear_Echo_Timer_ReadPeriod,"ax",%progbits
 128              		.align	2
 129              		.global	Rear_Echo_Timer_ReadPeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	Rear_Echo_Timer_ReadPeriod, %function
 133              	Rear_Echo_Timer_ReadPeriod:
 134              	.LFB7:
 337:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 338:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 339:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 341:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 342:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 346:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 349:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 352:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 355:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint8 Rear_Echo_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 358:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         return ((uint8)Rear_Echo_Timer_CONTROL);
 360:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 364:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 365:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 366:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 370:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 373:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 376:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 378:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 10


 380:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 381:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL = control;
 383:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 387:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 388:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 390:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 391:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 395:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 398:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 401:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 404:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint16 Rear_Echo_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 135              		.loc 1 406 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #if(Rear_Echo_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Rear_Echo_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****        return (CY_GET_REG16(Rear_Echo_Timer_PERIOD_LSB_PTR));
 140              		.loc 1 410 0
 141 0000 014B     		ldr	r3, .L13
 142 0002 1888     		ldrh	r0, [r3]
 411:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #endif /* (Rear_Echo_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 143              		.loc 1 412 0
 144 0004 80B2     		uxth	r0, r0
 145 0006 7047     		bx	lr
 146              	.L14:
 147              		.align	2
 148              	.L13:
 149 0008 506A0040 		.word	1073769040
 150              		.cfi_endproc
 151              	.LFE7:
 152              		.size	Rear_Echo_Timer_ReadPeriod, .-Rear_Echo_Timer_ReadPeriod
 153              		.section	.text.Rear_Echo_Timer_WritePeriod,"ax",%progbits
 154              		.align	2
 155              		.global	Rear_Echo_Timer_WritePeriod
 156              		.thumb
 157              		.thumb_func
 158              		.type	Rear_Echo_Timer_WritePeriod, %function
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 11


 159              	Rear_Echo_Timer_WritePeriod:
 160              	.LFB8:
 413:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 414:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 415:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 419:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 423:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 427:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 430:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_WritePeriod(uint16 period) 
 432:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 161              		.loc 1 432 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL1:
 433:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(Rear_Echo_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         CY_SET_REG16(Rear_Echo_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         CY_SET_REG16(Rear_Echo_Timer_PERIOD_LSB_PTR, period);
 167              		.loc 1 437 0
 168 0000 014B     		ldr	r3, .L16
 169 0002 1880     		strh	r0, [r3]	@ movhi
 170 0004 7047     		bx	lr
 171              	.L17:
 172 0006 00BF     		.align	2
 173              	.L16:
 174 0008 506A0040 		.word	1073769040
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	Rear_Echo_Timer_WritePeriod, .-Rear_Echo_Timer_WritePeriod
 178              		.section	.text.Rear_Echo_Timer_ReadCapture,"ax",%progbits
 179              		.align	2
 180              		.global	Rear_Echo_Timer_ReadCapture
 181              		.thumb
 182              		.thumb_func
 183              		.type	Rear_Echo_Timer_ReadCapture, %function
 184              	Rear_Echo_Timer_ReadCapture:
 185              	.LFB9:
 438:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 440:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 441:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 442:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 12


 443:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 446:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 449:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 452:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 455:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint16 Rear_Echo_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 186              		.loc 1 457 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #if(Rear_Echo_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Rear_Echo_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****        return (CY_GET_REG16(Rear_Echo_Timer_CAPTURE_LSB_PTR));
 191              		.loc 1 461 0
 192 0000 014B     		ldr	r3, .L19
 193 0002 1888     		ldrh	r0, [r3]
 462:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #endif /* (Rear_Echo_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 194              		.loc 1 463 0
 195 0004 80B2     		uxth	r0, r0
 196 0006 7047     		bx	lr
 197              	.L20:
 198              		.align	2
 199              	.L19:
 200 0008 906A0040 		.word	1073769104
 201              		.cfi_endproc
 202              	.LFE9:
 203              		.size	Rear_Echo_Timer_ReadCapture, .-Rear_Echo_Timer_ReadCapture
 204              		.section	.text.Rear_Echo_Timer_WriteCounter,"ax",%progbits
 205              		.align	2
 206              		.global	Rear_Echo_Timer_WriteCounter
 207              		.thumb
 208              		.thumb_func
 209              		.type	Rear_Echo_Timer_WriteCounter, %function
 210              	Rear_Echo_Timer_WriteCounter:
 211              	.LFB10:
 464:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 465:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 466:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 470:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 473:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 13


 474:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 476:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 479:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 212              		.loc 1 481 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL2:
 482:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****    #if(Rear_Echo_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****          */
 486:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         CY_SET_REG16(Rear_Echo_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         
 488:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         CY_SET_REG16(Rear_Echo_Timer_COUNTER_LSB_PTR, counter);
 218              		.loc 1 489 0
 219 0000 014B     		ldr	r3, .L22
 220 0002 1880     		strh	r0, [r3]	@ movhi
 221 0004 7047     		bx	lr
 222              	.L23:
 223 0006 00BF     		.align	2
 224              	.L22:
 225 0008 106A0040 		.word	1073768976
 226              		.cfi_endproc
 227              	.LFE10:
 228              		.size	Rear_Echo_Timer_WriteCounter, .-Rear_Echo_Timer_WriteCounter
 229              		.section	.text.Rear_Echo_Timer_ReadCounter,"ax",%progbits
 230              		.align	2
 231              		.global	Rear_Echo_Timer_ReadCounter
 232              		.thumb
 233              		.thumb_func
 234              		.type	Rear_Echo_Timer_ReadCounter, %function
 235              	Rear_Echo_Timer_ReadCounter:
 236              	.LFB11:
 490:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 492:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 493:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 494:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 498:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 501:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 504:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Present compare value.
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 14


 506:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 507:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint16 Rear_Echo_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 237              		.loc 1 509 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(Rear_Echo_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         (void)CY_GET_REG16(Rear_Echo_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         (void)CY_GET_REG8(Rear_Echo_Timer_COUNTER_LSB_PTR_8BIT);
 242              		.loc 1 516 0
 243 0000 024B     		ldr	r3, .L25
 244 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif/* (Rear_Echo_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 519:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(Rear_Echo_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         return ((uint16)CY_GET_REG16(Rear_Echo_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         return (CY_GET_REG16(Rear_Echo_Timer_CAPTURE_LSB_PTR));
 245              		.loc 1 523 0
 246 0004 024B     		ldr	r3, .L25+4
 247 0006 1888     		ldrh	r0, [r3]
 524:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* (Rear_Echo_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 248              		.loc 1 525 0
 249 0008 80B2     		uxth	r0, r0
 250 000a 7047     		bx	lr
 251              	.L26:
 252              		.align	2
 253              	.L25:
 254 000c 08650040 		.word	1073767688
 255 0010 906A0040 		.word	1073769104
 256              		.cfi_endproc
 257              	.LFE11:
 258              		.size	Rear_Echo_Timer_ReadCounter, .-Rear_Echo_Timer_ReadCounter
 259              		.section	.text.Rear_Echo_Timer_EnableTrigger,"ax",%progbits
 260              		.align	2
 261              		.global	Rear_Echo_Timer_EnableTrigger
 262              		.thumb
 263              		.thumb_func
 264              		.type	Rear_Echo_Timer_EnableTrigger, %function
 265              	Rear_Echo_Timer_EnableTrigger:
 266              	.LFB12:
 526:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 527:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 528:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if(!Rear_Echo_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 530:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     
 531:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****  * The functions below this point are only available using the UDB
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 15


 533:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 536:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 537:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if (Rear_Echo_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 539:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 540:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 544:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 547:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  #define Rear_Echo_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #define Rear_Echo_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #define Rear_Echo_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #define Rear_Echo_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #define Rear_Echo_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Rear_Echo_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Rear_Echo_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Rear_Echo_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Rear_Echo_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 562:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 565:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 568:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Rear_Echo_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     captureMode &= (Rear_Echo_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 572:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= ((uint8)(~Rear_Echo_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 576:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 580:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 582:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 583:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if (Rear_Echo_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 585:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 586:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 16


 590:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 593:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #define Rear_Echo_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #define Rear_Echo_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #define Rear_Echo_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #define Rear_Echo_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #define Rear_Echo_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 601:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 604:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 607:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     triggerMode &= Rear_Echo_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 610:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is re
 611:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     
 612:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= ((uint8)(~Rear_Echo_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 615:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL |= (triggerMode | Rear_Echo_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 619:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 621:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if (Rear_Echo_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 623:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 624:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 628:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 631:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 634:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 637:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 267              		.loc 1 639 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 0000 7047     		bx	lr
 273              		.cfi_endproc
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 17


 274              	.LFE12:
 275              		.size	Rear_Echo_Timer_EnableTrigger, .-Rear_Echo_Timer_EnableTrigger
 276 0002 00BF     		.section	.text.Rear_Echo_Timer_DisableTrigger,"ax",%progbits
 277              		.align	2
 278              		.global	Rear_Echo_Timer_DisableTrigger
 279              		.thumb
 280              		.thumb_func
 281              		.type	Rear_Echo_Timer_DisableTrigger, %function
 282              	Rear_Echo_Timer_DisableTrigger:
 283              	.LFB13:
 640:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is re
 641:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL |= Rear_Echo_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 644:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 645:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 646:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 650:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 653:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 656:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 659:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 284              		.loc 1 661 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE13:
 292              		.size	Rear_Echo_Timer_DisableTrigger, .-Rear_Echo_Timer_DisableTrigger
 293 0002 00BF     		.section	.text.Rear_Echo_Timer_SetInterruptCount,"ax",%progbits
 294              		.align	2
 295              		.global	Rear_Echo_Timer_SetInterruptCount
 296              		.thumb
 297              		.thumb_func
 298              		.type	Rear_Echo_Timer_SetInterruptCount, %function
 299              	Rear_Echo_Timer_SetInterruptCount:
 300              	.LFB14:
 662:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is r
 663:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= ((uint8)(~Rear_Echo_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 666:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 668:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if(Rear_Echo_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 18


 670:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 671:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 675:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 678:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 684:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 687:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 301              		.loc 1 689 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              	.LVL3:
 307 0000 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE14:
 310              		.size	Rear_Echo_Timer_SetInterruptCount, .-Rear_Echo_Timer_SetInterruptCount
 311 0002 00BF     		.section	.text.Rear_Echo_Timer_ClearFIFO,"ax",%progbits
 312              		.align	2
 313              		.global	Rear_Echo_Timer_ClearFIFO
 314              		.thumb
 315              		.thumb_func
 316              		.type	Rear_Echo_Timer_ClearFIFO, %function
 317              	Rear_Echo_Timer_ClearFIFO:
 318              	.LFB15:
 690:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     interruptCount &= Rear_Echo_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 693:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL &= ((uint8)(~Rear_Echo_Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         Rear_Echo_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* (!Rear_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 700:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Rear_Echo_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 702:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 703:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #if (Rear_Echo_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 705:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 706:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 19


 709:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 710:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 713:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 718:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 721:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 724:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 726:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 727:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 728:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 732:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 735:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 738:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 741:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** uint8 Rear_Echo_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 744:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     return ((uint8)Rear_Echo_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 746:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** #endif /* Rear_Echo_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 748:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 749:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Function Name: Rear_Echo_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 753:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 756:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 759:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *
 762:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** void Rear_Echo_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** {
 319              		.loc 1 764 0
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 20


 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 764 0
 324 0000 08B5     		push	{r3, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     while(0u != (Rear_Echo_Timer_ReadStatusRegister() & Rear_Echo_Timer_STATUS_FIFONEMP))
 328              		.loc 1 765 0
 329 0002 01E0     		b	.L31
 330              	.L32:
 766:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     {
 767:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****         (void)Rear_Echo_Timer_ReadCapture();
 331              		.loc 1 767 0
 332 0004 FFF7FEFF 		bl	Rear_Echo_Timer_ReadCapture
 333              	.LVL4:
 334              	.L31:
 765:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     while(0u != (Rear_Echo_Timer_ReadStatusRegister() & Rear_Echo_Timer_STATUS_FIFONEMP))
 335              		.loc 1 765 0
 336 0008 FFF7FEFF 		bl	Rear_Echo_Timer_ReadStatusRegister
 337              	.LVL5:
 338 000c 10F0080F 		tst	r0, #8
 339 0010 F8D1     		bne	.L32
 768:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     }
 769:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 340              		.loc 1 769 0
 341 0012 08BD     		pop	{r3, pc}
 342              		.cfi_endproc
 343              	.LFE15:
 344              		.size	Rear_Echo_Timer_ClearFIFO, .-Rear_Echo_Timer_ClearFIFO
 345              		.section	.text.Rear_Echo_Timer_Init,"ax",%progbits
 346              		.align	2
 347              		.global	Rear_Echo_Timer_Init
 348              		.thumb
 349              		.thumb_func
 350              		.type	Rear_Echo_Timer_Init, %function
 351              	Rear_Echo_Timer_Init:
 352              	.LFB0:
  44:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #if(!Rear_Echo_Timer_UsingFixedFunction)
 353              		.loc 1 44 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     Rear_Echo_Timer_WriteCounter(Rear_Echo_Timer_INIT_PERIOD);
 361              		.loc 1 118 0
 362 0002 40F6B730 		movw	r0, #2999
 363 0006 FFF7FEFF 		bl	Rear_Echo_Timer_WritePeriod
 364              	.LVL6:
 119:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 365              		.loc 1 119 0
 366 000a 40F6B730 		movw	r0, #2999
 367 000e FFF7FEFF 		bl	Rear_Echo_Timer_WriteCounter
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 21


 368              	.LVL7:
 142:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 369              		.loc 1 142 0
 370 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 371              	.LVL8:
 145:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 372              		.loc 1 145 0
 373 0016 064A     		ldr	r2, .L36
 374 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 375 001a 43F01003 		orr	r3, r3, #16
 376 001e 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 377              		.loc 1 148 0
 378 0020 FFF7FEFF 		bl	CyExitCriticalSection
 379              	.LVL9:
 159:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 380              		.loc 1 159 0
 381 0024 FFF7FEFF 		bl	Rear_Echo_Timer_ClearFIFO
 382              	.LVL10:
 162:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** }
 383              		.loc 1 162 0
 384 0028 0320     		movs	r0, #3
 385 002a FFF7FEFF 		bl	Rear_Echo_Timer_SetInterruptMode
 386              	.LVL11:
 387 002e 08BD     		pop	{r3, pc}
 388              	.L37:
 389              		.align	2
 390              	.L36:
 391 0030 99650040 		.word	1073767833
 392              		.cfi_endproc
 393              	.LFE0:
 394              		.size	Rear_Echo_Timer_Init, .-Rear_Echo_Timer_Init
 395              		.section	.text.Rear_Echo_Timer_Start,"ax",%progbits
 396              		.align	2
 397              		.global	Rear_Echo_Timer_Start
 398              		.thumb
 399              		.thumb_func
 400              		.type	Rear_Echo_Timer_Start, %function
 401              	Rear_Echo_Timer_Start:
 402              	.LFB2:
 216:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     if(Rear_Echo_Timer_initVar == 0u)
 403              		.loc 1 216 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 3, -8
 410              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     {
 411              		.loc 1 217 0
 412 0002 044B     		ldr	r3, .L41
 413 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0006 23B9     		cbnz	r3, .L38
 219:.\Generated_Source\PSoC5/Rear_Echo_Timer.c **** 
 415              		.loc 1 219 0
 416 0008 FFF7FEFF 		bl	Rear_Echo_Timer_Init
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 22


 417              	.LVL12:
 221:.\Generated_Source\PSoC5/Rear_Echo_Timer.c ****     }
 418              		.loc 1 221 0
 419 000c 0122     		movs	r2, #1
 420 000e 014B     		ldr	r3, .L41
 421 0010 1A70     		strb	r2, [r3]
 422              	.L38:
 423 0012 08BD     		pop	{r3, pc}
 424              	.L42:
 425              		.align	2
 426              	.L41:
 427 0014 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE2:
 430              		.size	Rear_Echo_Timer_Start, .-Rear_Echo_Timer_Start
 431              		.global	Rear_Echo_Timer_initVar
 432              		.bss
 433              		.set	.LANCHOR0,. + 0
 434              		.type	Rear_Echo_Timer_initVar, %object
 435              		.size	Rear_Echo_Timer_initVar, 1
 436              	Rear_Echo_Timer_initVar:
 437 0000 00       		.space	1
 438              		.text
 439              	.Letext0:
 440              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 441              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 442              		.section	.debug_info,"",%progbits
 443              	.Ldebug_info0:
 444 0000 EE020000 		.4byte	0x2ee
 445 0004 0400     		.2byte	0x4
 446 0006 00000000 		.4byte	.Ldebug_abbrev0
 447 000a 04       		.byte	0x4
 448 000b 01       		.uleb128 0x1
 449 000c 12020000 		.4byte	.LASF37
 450 0010 01       		.byte	0x1
 451 0011 CA000000 		.4byte	.LASF38
 452 0015 AA030000 		.4byte	.LASF39
 453 0019 00000000 		.4byte	.Ldebug_ranges0+0
 454 001d 00000000 		.4byte	0
 455 0021 00000000 		.4byte	.Ldebug_line0
 456 0025 02       		.uleb128 0x2
 457 0026 01       		.byte	0x1
 458 0027 06       		.byte	0x6
 459 0028 82030000 		.4byte	.LASF0
 460 002c 02       		.uleb128 0x2
 461 002d 01       		.byte	0x1
 462 002e 08       		.byte	0x8
 463 002f 14010000 		.4byte	.LASF1
 464 0033 02       		.uleb128 0x2
 465 0034 02       		.byte	0x2
 466 0035 05       		.byte	0x5
 467 0036 1B030000 		.4byte	.LASF2
 468 003a 02       		.uleb128 0x2
 469 003b 02       		.byte	0x2
 470 003c 07       		.byte	0x7
 471 003d 4D000000 		.4byte	.LASF3
 472 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 23


 473 0042 04       		.byte	0x4
 474 0043 05       		.byte	0x5
 475 0044 5D030000 		.4byte	.LASF4
 476 0048 02       		.uleb128 0x2
 477 0049 04       		.byte	0x4
 478 004a 07       		.byte	0x7
 479 004b 27010000 		.4byte	.LASF5
 480 004f 02       		.uleb128 0x2
 481 0050 08       		.byte	0x8
 482 0051 05       		.byte	0x5
 483 0052 FF020000 		.4byte	.LASF6
 484 0056 02       		.uleb128 0x2
 485 0057 08       		.byte	0x8
 486 0058 07       		.byte	0x7
 487 0059 B3000000 		.4byte	.LASF7
 488 005d 03       		.uleb128 0x3
 489 005e 04       		.byte	0x4
 490 005f 05       		.byte	0x5
 491 0060 696E7400 		.ascii	"int\000"
 492 0064 02       		.uleb128 0x2
 493 0065 04       		.byte	0x4
 494 0066 07       		.byte	0x7
 495 0067 EF010000 		.4byte	.LASF8
 496 006b 04       		.uleb128 0x4
 497 006c 39010000 		.4byte	.LASF9
 498 0070 02       		.byte	0x2
 499 0071 3801     		.2byte	0x138
 500 0073 2C000000 		.4byte	0x2c
 501 0077 04       		.uleb128 0x4
 502 0078 B2010000 		.4byte	.LASF10
 503 007c 02       		.byte	0x2
 504 007d 3901     		.2byte	0x139
 505 007f 3A000000 		.4byte	0x3a
 506 0083 02       		.uleb128 0x2
 507 0084 04       		.byte	0x4
 508 0085 04       		.byte	0x4
 509 0086 A5000000 		.4byte	.LASF11
 510 008a 02       		.uleb128 0x2
 511 008b 08       		.byte	0x8
 512 008c 04       		.byte	0x4
 513 008d 96010000 		.4byte	.LASF12
 514 0091 02       		.uleb128 0x2
 515 0092 01       		.byte	0x1
 516 0093 08       		.byte	0x8
 517 0094 66030000 		.4byte	.LASF13
 518 0098 04       		.uleb128 0x4
 519 0099 22010000 		.4byte	.LASF14
 520 009d 02       		.byte	0x2
 521 009e E201     		.2byte	0x1e2
 522 00a0 A4000000 		.4byte	0xa4
 523 00a4 05       		.uleb128 0x5
 524 00a5 6B000000 		.4byte	0x6b
 525 00a9 04       		.uleb128 0x4
 526 00aa 00000000 		.4byte	.LASF15
 527 00ae 02       		.byte	0x2
 528 00af E301     		.2byte	0x1e3
 529 00b1 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 24


 530 00b5 05       		.uleb128 0x5
 531 00b6 77000000 		.4byte	0x77
 532 00ba 02       		.uleb128 0x2
 533 00bb 04       		.byte	0x4
 534 00bc 07       		.byte	0x7
 535 00bd F6020000 		.4byte	.LASF16
 536 00c1 06       		.uleb128 0x6
 537 00c2 6B030000 		.4byte	.LASF17
 538 00c6 01       		.byte	0x1
 539 00c7 B4       		.byte	0xb4
 540 00c8 00000000 		.4byte	.LFB1
 541 00cc 02000000 		.4byte	.LFE1-.LFB1
 542 00d0 01       		.uleb128 0x1
 543 00d1 9C       		.byte	0x9c
 544 00d2 06       		.uleb128 0x6
 545 00d3 48030000 		.4byte	.LASF18
 546 00d7 01       		.byte	0x1
 547 00d8 F7       		.byte	0xf7
 548 00d9 00000000 		.4byte	.LFB3
 549 00dd 02000000 		.4byte	.LFE3-.LFB3
 550 00e1 01       		.uleb128 0x1
 551 00e2 9C       		.byte	0x9c
 552 00e3 07       		.uleb128 0x7
 553 00e4 D5020000 		.4byte	.LASF22
 554 00e8 01       		.byte	0x1
 555 00e9 1701     		.2byte	0x117
 556 00eb 00000000 		.4byte	.LFB4
 557 00ef 0C000000 		.4byte	.LFE4-.LFB4
 558 00f3 01       		.uleb128 0x1
 559 00f4 9C       		.byte	0x9c
 560 00f5 08010000 		.4byte	0x108
 561 00f9 08       		.uleb128 0x8
 562 00fa 0D030000 		.4byte	.LASF24
 563 00fe 01       		.byte	0x1
 564 00ff 1701     		.2byte	0x117
 565 0101 6B000000 		.4byte	0x6b
 566 0105 01       		.uleb128 0x1
 567 0106 50       		.byte	0x50
 568 0107 00       		.byte	0
 569 0108 09       		.uleb128 0x9
 570 0109 5A010000 		.4byte	.LASF19
 571 010d 01       		.byte	0x1
 572 010e 2E01     		.2byte	0x12e
 573 0110 00000000 		.4byte	.LFB5
 574 0114 0C000000 		.4byte	.LFE5-.LFB5
 575 0118 01       		.uleb128 0x1
 576 0119 9C       		.byte	0x9c
 577 011a 0A       		.uleb128 0xa
 578 011b 25030000 		.4byte	.LASF20
 579 011f 01       		.byte	0x1
 580 0120 4D01     		.2byte	0x14d
 581 0122 6B000000 		.4byte	0x6b
 582 0126 00000000 		.4byte	.LFB6
 583 012a 0C000000 		.4byte	.LFE6-.LFB6
 584 012e 01       		.uleb128 0x1
 585 012f 9C       		.byte	0x9c
 586 0130 0A       		.uleb128 0xa
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 25


 587 0131 3F010000 		.4byte	.LASF21
 588 0135 01       		.byte	0x1
 589 0136 9501     		.2byte	0x195
 590 0138 77000000 		.4byte	0x77
 591 013c 00000000 		.4byte	.LFB7
 592 0140 0C000000 		.4byte	.LFE7-.LFB7
 593 0144 01       		.uleb128 0x1
 594 0145 9C       		.byte	0x9c
 595 0146 07       		.uleb128 0x7
 596 0147 7A010000 		.4byte	.LASF23
 597 014b 01       		.byte	0x1
 598 014c AF01     		.2byte	0x1af
 599 014e 00000000 		.4byte	.LFB8
 600 0152 0C000000 		.4byte	.LFE8-.LFB8
 601 0156 01       		.uleb128 0x1
 602 0157 9C       		.byte	0x9c
 603 0158 6B010000 		.4byte	0x16b
 604 015c 08       		.uleb128 0x8
 605 015d 24000000 		.4byte	.LASF25
 606 0161 01       		.byte	0x1
 607 0162 AF01     		.2byte	0x1af
 608 0164 77000000 		.4byte	0x77
 609 0168 01       		.uleb128 0x1
 610 0169 50       		.byte	0x50
 611 016a 00       		.byte	0
 612 016b 0A       		.uleb128 0xa
 613 016c 8E030000 		.4byte	.LASF26
 614 0170 01       		.byte	0x1
 615 0171 C801     		.2byte	0x1c8
 616 0173 77000000 		.4byte	0x77
 617 0177 00000000 		.4byte	.LFB9
 618 017b 0C000000 		.4byte	.LFE9-.LFB9
 619 017f 01       		.uleb128 0x1
 620 0180 9C       		.byte	0x9c
 621 0181 07       		.uleb128 0x7
 622 0182 B8020000 		.4byte	.LASF27
 623 0186 01       		.byte	0x1
 624 0187 E001     		.2byte	0x1e0
 625 0189 00000000 		.4byte	.LFB10
 626 018d 0C000000 		.4byte	.LFE10-.LFB10
 627 0191 01       		.uleb128 0x1
 628 0192 9C       		.byte	0x9c
 629 0193 A6010000 		.4byte	0x1a6
 630 0197 08       		.uleb128 0x8
 631 0198 AB000000 		.4byte	.LASF28
 632 019c 01       		.byte	0x1
 633 019d E001     		.2byte	0x1e0
 634 019f 77000000 		.4byte	0x77
 635 01a3 01       		.uleb128 0x1
 636 01a4 50       		.byte	0x50
 637 01a5 00       		.byte	0
 638 01a6 0A       		.uleb128 0xa
 639 01a7 60000000 		.4byte	.LASF29
 640 01ab 01       		.byte	0x1
 641 01ac FC01     		.2byte	0x1fc
 642 01ae 77000000 		.4byte	0x77
 643 01b2 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 26


 644 01b6 14000000 		.4byte	.LFE11-.LFB11
 645 01ba 01       		.uleb128 0x1
 646 01bb 9C       		.byte	0x9c
 647 01bc 09       		.uleb128 0x9
 648 01bd 06000000 		.4byte	.LASF30
 649 01c1 01       		.byte	0x1
 650 01c2 7E02     		.2byte	0x27e
 651 01c4 00000000 		.4byte	.LFB12
 652 01c8 02000000 		.4byte	.LFE12-.LFB12
 653 01cc 01       		.uleb128 0x1
 654 01cd 9C       		.byte	0x9c
 655 01ce 09       		.uleb128 0x9
 656 01cf B9010000 		.4byte	.LASF31
 657 01d3 01       		.byte	0x1
 658 01d4 9402     		.2byte	0x294
 659 01d6 00000000 		.4byte	.LFB13
 660 01da 02000000 		.4byte	.LFE13-.LFB13
 661 01de 01       		.uleb128 0x1
 662 01df 9C       		.byte	0x9c
 663 01e0 07       		.uleb128 0x7
 664 01e1 2B000000 		.4byte	.LASF32
 665 01e5 01       		.byte	0x1
 666 01e6 B002     		.2byte	0x2b0
 667 01e8 00000000 		.4byte	.LFB14
 668 01ec 02000000 		.4byte	.LFE14-.LFB14
 669 01f0 01       		.uleb128 0x1
 670 01f1 9C       		.byte	0x9c
 671 01f2 07020000 		.4byte	0x207
 672 01f6 0B       		.uleb128 0xb
 673 01f7 96000000 		.4byte	.LASF33
 674 01fb 01       		.byte	0x1
 675 01fc B002     		.2byte	0x2b0
 676 01fe 6B000000 		.4byte	0x6b
 677 0202 00000000 		.4byte	.LLST0
 678 0206 00       		.byte	0
 679 0207 07       		.uleb128 0x7
 680 0208 7C000000 		.4byte	.LASF34
 681 020c 01       		.byte	0x1
 682 020d FB02     		.2byte	0x2fb
 683 020f 00000000 		.4byte	.LFB15
 684 0213 14000000 		.4byte	.LFE15-.LFB15
 685 0217 01       		.uleb128 0x1
 686 0218 9C       		.byte	0x9c
 687 0219 30020000 		.4byte	0x230
 688 021d 0C       		.uleb128 0xc
 689 021e 08000000 		.4byte	.LVL4
 690 0222 6B010000 		.4byte	0x16b
 691 0226 0C       		.uleb128 0xc
 692 0227 0C000000 		.4byte	.LVL5
 693 022b 1A010000 		.4byte	0x11a
 694 022f 00       		.byte	0
 695 0230 0D       		.uleb128 0xd
 696 0231 9D010000 		.4byte	.LASF35
 697 0235 01       		.byte	0x1
 698 0236 2B       		.byte	0x2b
 699 0237 00000000 		.4byte	.LFB0
 700 023b 34000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 27


 701 023f 01       		.uleb128 0x1
 702 0240 9C       		.byte	0x9c
 703 0241 A9020000 		.4byte	0x2a9
 704 0245 0E       		.uleb128 0xe
 705 0246 F5000000 		.4byte	.LASF40
 706 024a 01       		.byte	0x1
 707 024b 2F       		.byte	0x2f
 708 024c 6B000000 		.4byte	0x6b
 709 0250 23000000 		.4byte	.LLST1
 710 0254 0F       		.uleb128 0xf
 711 0255 0A000000 		.4byte	.LVL6
 712 0259 46010000 		.4byte	0x146
 713 025d 69020000 		.4byte	0x269
 714 0261 10       		.uleb128 0x10
 715 0262 01       		.uleb128 0x1
 716 0263 50       		.byte	0x50
 717 0264 03       		.uleb128 0x3
 718 0265 0A       		.byte	0xa
 719 0266 B70B     		.2byte	0xbb7
 720 0268 00       		.byte	0
 721 0269 0F       		.uleb128 0xf
 722 026a 12000000 		.4byte	.LVL7
 723 026e 81010000 		.4byte	0x181
 724 0272 7E020000 		.4byte	0x27e
 725 0276 10       		.uleb128 0x10
 726 0277 01       		.uleb128 0x1
 727 0278 50       		.byte	0x50
 728 0279 03       		.uleb128 0x3
 729 027a 0A       		.byte	0xa
 730 027b B70B     		.2byte	0xbb7
 731 027d 00       		.byte	0
 732 027e 0C       		.uleb128 0xc
 733 027f 16000000 		.4byte	.LVL8
 734 0283 D9020000 		.4byte	0x2d9
 735 0287 0C       		.uleb128 0xc
 736 0288 24000000 		.4byte	.LVL9
 737 028c E4020000 		.4byte	0x2e4
 738 0290 0C       		.uleb128 0xc
 739 0291 28000000 		.4byte	.LVL10
 740 0295 07020000 		.4byte	0x207
 741 0299 11       		.uleb128 0x11
 742 029a 2E000000 		.4byte	.LVL11
 743 029e E3000000 		.4byte	0xe3
 744 02a2 10       		.uleb128 0x10
 745 02a3 01       		.uleb128 0x1
 746 02a4 50       		.byte	0x50
 747 02a5 01       		.uleb128 0x1
 748 02a6 33       		.byte	0x33
 749 02a7 00       		.byte	0
 750 02a8 00       		.byte	0
 751 02a9 0D       		.uleb128 0xd
 752 02aa D4030000 		.4byte	.LASF36
 753 02ae 01       		.byte	0x1
 754 02af D7       		.byte	0xd7
 755 02b0 00000000 		.4byte	.LFB2
 756 02b4 18000000 		.4byte	.LFE2-.LFB2
 757 02b8 01       		.uleb128 0x1
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 28


 758 02b9 9C       		.byte	0x9c
 759 02ba C8020000 		.4byte	0x2c8
 760 02be 0C       		.uleb128 0xc
 761 02bf 0C000000 		.4byte	.LVL12
 762 02c3 30020000 		.4byte	0x230
 763 02c7 00       		.byte	0
 764 02c8 12       		.uleb128 0x12
 765 02c9 A0020000 		.4byte	.LASF41
 766 02cd 01       		.byte	0x1
 767 02ce 1A       		.byte	0x1a
 768 02cf 6B000000 		.4byte	0x6b
 769 02d3 05       		.uleb128 0x5
 770 02d4 03       		.byte	0x3
 771 02d5 00000000 		.4byte	Rear_Echo_Timer_initVar
 772 02d9 13       		.uleb128 0x13
 773 02da D8010000 		.4byte	.LASF42
 774 02de 03       		.byte	0x3
 775 02df 7E       		.byte	0x7e
 776 02e0 6B000000 		.4byte	0x6b
 777 02e4 14       		.uleb128 0x14
 778 02e5 FC010000 		.4byte	.LASF43
 779 02e9 03       		.byte	0x3
 780 02ea 7F       		.byte	0x7f
 781 02eb 15       		.uleb128 0x15
 782 02ec 6B000000 		.4byte	0x6b
 783 02f0 00       		.byte	0
 784 02f1 00       		.byte	0
 785              		.section	.debug_abbrev,"",%progbits
 786              	.Ldebug_abbrev0:
 787 0000 01       		.uleb128 0x1
 788 0001 11       		.uleb128 0x11
 789 0002 01       		.byte	0x1
 790 0003 25       		.uleb128 0x25
 791 0004 0E       		.uleb128 0xe
 792 0005 13       		.uleb128 0x13
 793 0006 0B       		.uleb128 0xb
 794 0007 03       		.uleb128 0x3
 795 0008 0E       		.uleb128 0xe
 796 0009 1B       		.uleb128 0x1b
 797 000a 0E       		.uleb128 0xe
 798 000b 55       		.uleb128 0x55
 799 000c 17       		.uleb128 0x17
 800 000d 11       		.uleb128 0x11
 801 000e 01       		.uleb128 0x1
 802 000f 10       		.uleb128 0x10
 803 0010 17       		.uleb128 0x17
 804 0011 00       		.byte	0
 805 0012 00       		.byte	0
 806 0013 02       		.uleb128 0x2
 807 0014 24       		.uleb128 0x24
 808 0015 00       		.byte	0
 809 0016 0B       		.uleb128 0xb
 810 0017 0B       		.uleb128 0xb
 811 0018 3E       		.uleb128 0x3e
 812 0019 0B       		.uleb128 0xb
 813 001a 03       		.uleb128 0x3
 814 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 29


 815 001c 00       		.byte	0
 816 001d 00       		.byte	0
 817 001e 03       		.uleb128 0x3
 818 001f 24       		.uleb128 0x24
 819 0020 00       		.byte	0
 820 0021 0B       		.uleb128 0xb
 821 0022 0B       		.uleb128 0xb
 822 0023 3E       		.uleb128 0x3e
 823 0024 0B       		.uleb128 0xb
 824 0025 03       		.uleb128 0x3
 825 0026 08       		.uleb128 0x8
 826 0027 00       		.byte	0
 827 0028 00       		.byte	0
 828 0029 04       		.uleb128 0x4
 829 002a 16       		.uleb128 0x16
 830 002b 00       		.byte	0
 831 002c 03       		.uleb128 0x3
 832 002d 0E       		.uleb128 0xe
 833 002e 3A       		.uleb128 0x3a
 834 002f 0B       		.uleb128 0xb
 835 0030 3B       		.uleb128 0x3b
 836 0031 05       		.uleb128 0x5
 837 0032 49       		.uleb128 0x49
 838 0033 13       		.uleb128 0x13
 839 0034 00       		.byte	0
 840 0035 00       		.byte	0
 841 0036 05       		.uleb128 0x5
 842 0037 35       		.uleb128 0x35
 843 0038 00       		.byte	0
 844 0039 49       		.uleb128 0x49
 845 003a 13       		.uleb128 0x13
 846 003b 00       		.byte	0
 847 003c 00       		.byte	0
 848 003d 06       		.uleb128 0x6
 849 003e 2E       		.uleb128 0x2e
 850 003f 00       		.byte	0
 851 0040 3F       		.uleb128 0x3f
 852 0041 19       		.uleb128 0x19
 853 0042 03       		.uleb128 0x3
 854 0043 0E       		.uleb128 0xe
 855 0044 3A       		.uleb128 0x3a
 856 0045 0B       		.uleb128 0xb
 857 0046 3B       		.uleb128 0x3b
 858 0047 0B       		.uleb128 0xb
 859 0048 27       		.uleb128 0x27
 860 0049 19       		.uleb128 0x19
 861 004a 11       		.uleb128 0x11
 862 004b 01       		.uleb128 0x1
 863 004c 12       		.uleb128 0x12
 864 004d 06       		.uleb128 0x6
 865 004e 40       		.uleb128 0x40
 866 004f 18       		.uleb128 0x18
 867 0050 9742     		.uleb128 0x2117
 868 0052 19       		.uleb128 0x19
 869 0053 00       		.byte	0
 870 0054 00       		.byte	0
 871 0055 07       		.uleb128 0x7
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 30


 872 0056 2E       		.uleb128 0x2e
 873 0057 01       		.byte	0x1
 874 0058 3F       		.uleb128 0x3f
 875 0059 19       		.uleb128 0x19
 876 005a 03       		.uleb128 0x3
 877 005b 0E       		.uleb128 0xe
 878 005c 3A       		.uleb128 0x3a
 879 005d 0B       		.uleb128 0xb
 880 005e 3B       		.uleb128 0x3b
 881 005f 05       		.uleb128 0x5
 882 0060 27       		.uleb128 0x27
 883 0061 19       		.uleb128 0x19
 884 0062 11       		.uleb128 0x11
 885 0063 01       		.uleb128 0x1
 886 0064 12       		.uleb128 0x12
 887 0065 06       		.uleb128 0x6
 888 0066 40       		.uleb128 0x40
 889 0067 18       		.uleb128 0x18
 890 0068 9742     		.uleb128 0x2117
 891 006a 19       		.uleb128 0x19
 892 006b 01       		.uleb128 0x1
 893 006c 13       		.uleb128 0x13
 894 006d 00       		.byte	0
 895 006e 00       		.byte	0
 896 006f 08       		.uleb128 0x8
 897 0070 05       		.uleb128 0x5
 898 0071 00       		.byte	0
 899 0072 03       		.uleb128 0x3
 900 0073 0E       		.uleb128 0xe
 901 0074 3A       		.uleb128 0x3a
 902 0075 0B       		.uleb128 0xb
 903 0076 3B       		.uleb128 0x3b
 904 0077 05       		.uleb128 0x5
 905 0078 49       		.uleb128 0x49
 906 0079 13       		.uleb128 0x13
 907 007a 02       		.uleb128 0x2
 908 007b 18       		.uleb128 0x18
 909 007c 00       		.byte	0
 910 007d 00       		.byte	0
 911 007e 09       		.uleb128 0x9
 912 007f 2E       		.uleb128 0x2e
 913 0080 00       		.byte	0
 914 0081 3F       		.uleb128 0x3f
 915 0082 19       		.uleb128 0x19
 916 0083 03       		.uleb128 0x3
 917 0084 0E       		.uleb128 0xe
 918 0085 3A       		.uleb128 0x3a
 919 0086 0B       		.uleb128 0xb
 920 0087 3B       		.uleb128 0x3b
 921 0088 05       		.uleb128 0x5
 922 0089 27       		.uleb128 0x27
 923 008a 19       		.uleb128 0x19
 924 008b 11       		.uleb128 0x11
 925 008c 01       		.uleb128 0x1
 926 008d 12       		.uleb128 0x12
 927 008e 06       		.uleb128 0x6
 928 008f 40       		.uleb128 0x40
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 31


 929 0090 18       		.uleb128 0x18
 930 0091 9742     		.uleb128 0x2117
 931 0093 19       		.uleb128 0x19
 932 0094 00       		.byte	0
 933 0095 00       		.byte	0
 934 0096 0A       		.uleb128 0xa
 935 0097 2E       		.uleb128 0x2e
 936 0098 00       		.byte	0
 937 0099 3F       		.uleb128 0x3f
 938 009a 19       		.uleb128 0x19
 939 009b 03       		.uleb128 0x3
 940 009c 0E       		.uleb128 0xe
 941 009d 3A       		.uleb128 0x3a
 942 009e 0B       		.uleb128 0xb
 943 009f 3B       		.uleb128 0x3b
 944 00a0 05       		.uleb128 0x5
 945 00a1 27       		.uleb128 0x27
 946 00a2 19       		.uleb128 0x19
 947 00a3 49       		.uleb128 0x49
 948 00a4 13       		.uleb128 0x13
 949 00a5 11       		.uleb128 0x11
 950 00a6 01       		.uleb128 0x1
 951 00a7 12       		.uleb128 0x12
 952 00a8 06       		.uleb128 0x6
 953 00a9 40       		.uleb128 0x40
 954 00aa 18       		.uleb128 0x18
 955 00ab 9742     		.uleb128 0x2117
 956 00ad 19       		.uleb128 0x19
 957 00ae 00       		.byte	0
 958 00af 00       		.byte	0
 959 00b0 0B       		.uleb128 0xb
 960 00b1 05       		.uleb128 0x5
 961 00b2 00       		.byte	0
 962 00b3 03       		.uleb128 0x3
 963 00b4 0E       		.uleb128 0xe
 964 00b5 3A       		.uleb128 0x3a
 965 00b6 0B       		.uleb128 0xb
 966 00b7 3B       		.uleb128 0x3b
 967 00b8 05       		.uleb128 0x5
 968 00b9 49       		.uleb128 0x49
 969 00ba 13       		.uleb128 0x13
 970 00bb 02       		.uleb128 0x2
 971 00bc 17       		.uleb128 0x17
 972 00bd 00       		.byte	0
 973 00be 00       		.byte	0
 974 00bf 0C       		.uleb128 0xc
 975 00c0 898201   		.uleb128 0x4109
 976 00c3 00       		.byte	0
 977 00c4 11       		.uleb128 0x11
 978 00c5 01       		.uleb128 0x1
 979 00c6 31       		.uleb128 0x31
 980 00c7 13       		.uleb128 0x13
 981 00c8 00       		.byte	0
 982 00c9 00       		.byte	0
 983 00ca 0D       		.uleb128 0xd
 984 00cb 2E       		.uleb128 0x2e
 985 00cc 01       		.byte	0x1
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 32


 986 00cd 3F       		.uleb128 0x3f
 987 00ce 19       		.uleb128 0x19
 988 00cf 03       		.uleb128 0x3
 989 00d0 0E       		.uleb128 0xe
 990 00d1 3A       		.uleb128 0x3a
 991 00d2 0B       		.uleb128 0xb
 992 00d3 3B       		.uleb128 0x3b
 993 00d4 0B       		.uleb128 0xb
 994 00d5 27       		.uleb128 0x27
 995 00d6 19       		.uleb128 0x19
 996 00d7 11       		.uleb128 0x11
 997 00d8 01       		.uleb128 0x1
 998 00d9 12       		.uleb128 0x12
 999 00da 06       		.uleb128 0x6
 1000 00db 40       		.uleb128 0x40
 1001 00dc 18       		.uleb128 0x18
 1002 00dd 9742     		.uleb128 0x2117
 1003 00df 19       		.uleb128 0x19
 1004 00e0 01       		.uleb128 0x1
 1005 00e1 13       		.uleb128 0x13
 1006 00e2 00       		.byte	0
 1007 00e3 00       		.byte	0
 1008 00e4 0E       		.uleb128 0xe
 1009 00e5 34       		.uleb128 0x34
 1010 00e6 00       		.byte	0
 1011 00e7 03       		.uleb128 0x3
 1012 00e8 0E       		.uleb128 0xe
 1013 00e9 3A       		.uleb128 0x3a
 1014 00ea 0B       		.uleb128 0xb
 1015 00eb 3B       		.uleb128 0x3b
 1016 00ec 0B       		.uleb128 0xb
 1017 00ed 49       		.uleb128 0x49
 1018 00ee 13       		.uleb128 0x13
 1019 00ef 02       		.uleb128 0x2
 1020 00f0 17       		.uleb128 0x17
 1021 00f1 00       		.byte	0
 1022 00f2 00       		.byte	0
 1023 00f3 0F       		.uleb128 0xf
 1024 00f4 898201   		.uleb128 0x4109
 1025 00f7 01       		.byte	0x1
 1026 00f8 11       		.uleb128 0x11
 1027 00f9 01       		.uleb128 0x1
 1028 00fa 31       		.uleb128 0x31
 1029 00fb 13       		.uleb128 0x13
 1030 00fc 01       		.uleb128 0x1
 1031 00fd 13       		.uleb128 0x13
 1032 00fe 00       		.byte	0
 1033 00ff 00       		.byte	0
 1034 0100 10       		.uleb128 0x10
 1035 0101 8A8201   		.uleb128 0x410a
 1036 0104 00       		.byte	0
 1037 0105 02       		.uleb128 0x2
 1038 0106 18       		.uleb128 0x18
 1039 0107 9142     		.uleb128 0x2111
 1040 0109 18       		.uleb128 0x18
 1041 010a 00       		.byte	0
 1042 010b 00       		.byte	0
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 33


 1043 010c 11       		.uleb128 0x11
 1044 010d 898201   		.uleb128 0x4109
 1045 0110 01       		.byte	0x1
 1046 0111 11       		.uleb128 0x11
 1047 0112 01       		.uleb128 0x1
 1048 0113 31       		.uleb128 0x31
 1049 0114 13       		.uleb128 0x13
 1050 0115 00       		.byte	0
 1051 0116 00       		.byte	0
 1052 0117 12       		.uleb128 0x12
 1053 0118 34       		.uleb128 0x34
 1054 0119 00       		.byte	0
 1055 011a 03       		.uleb128 0x3
 1056 011b 0E       		.uleb128 0xe
 1057 011c 3A       		.uleb128 0x3a
 1058 011d 0B       		.uleb128 0xb
 1059 011e 3B       		.uleb128 0x3b
 1060 011f 0B       		.uleb128 0xb
 1061 0120 49       		.uleb128 0x49
 1062 0121 13       		.uleb128 0x13
 1063 0122 3F       		.uleb128 0x3f
 1064 0123 19       		.uleb128 0x19
 1065 0124 02       		.uleb128 0x2
 1066 0125 18       		.uleb128 0x18
 1067 0126 00       		.byte	0
 1068 0127 00       		.byte	0
 1069 0128 13       		.uleb128 0x13
 1070 0129 2E       		.uleb128 0x2e
 1071 012a 00       		.byte	0
 1072 012b 3F       		.uleb128 0x3f
 1073 012c 19       		.uleb128 0x19
 1074 012d 03       		.uleb128 0x3
 1075 012e 0E       		.uleb128 0xe
 1076 012f 3A       		.uleb128 0x3a
 1077 0130 0B       		.uleb128 0xb
 1078 0131 3B       		.uleb128 0x3b
 1079 0132 0B       		.uleb128 0xb
 1080 0133 27       		.uleb128 0x27
 1081 0134 19       		.uleb128 0x19
 1082 0135 49       		.uleb128 0x49
 1083 0136 13       		.uleb128 0x13
 1084 0137 3C       		.uleb128 0x3c
 1085 0138 19       		.uleb128 0x19
 1086 0139 00       		.byte	0
 1087 013a 00       		.byte	0
 1088 013b 14       		.uleb128 0x14
 1089 013c 2E       		.uleb128 0x2e
 1090 013d 01       		.byte	0x1
 1091 013e 3F       		.uleb128 0x3f
 1092 013f 19       		.uleb128 0x19
 1093 0140 03       		.uleb128 0x3
 1094 0141 0E       		.uleb128 0xe
 1095 0142 3A       		.uleb128 0x3a
 1096 0143 0B       		.uleb128 0xb
 1097 0144 3B       		.uleb128 0x3b
 1098 0145 0B       		.uleb128 0xb
 1099 0146 27       		.uleb128 0x27
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 34


 1100 0147 19       		.uleb128 0x19
 1101 0148 3C       		.uleb128 0x3c
 1102 0149 19       		.uleb128 0x19
 1103 014a 00       		.byte	0
 1104 014b 00       		.byte	0
 1105 014c 15       		.uleb128 0x15
 1106 014d 05       		.uleb128 0x5
 1107 014e 00       		.byte	0
 1108 014f 49       		.uleb128 0x49
 1109 0150 13       		.uleb128 0x13
 1110 0151 00       		.byte	0
 1111 0152 00       		.byte	0
 1112 0153 00       		.byte	0
 1113              		.section	.debug_loc,"",%progbits
 1114              	.Ldebug_loc0:
 1115              	.LLST0:
 1116 0000 00000000 		.4byte	.LVL3
 1117 0004 00000000 		.4byte	.LVL3
 1118 0008 0100     		.2byte	0x1
 1119 000a 50       		.byte	0x50
 1120 000b 00000000 		.4byte	.LVL3
 1121 000f 02000000 		.4byte	.LFE14
 1122 0013 0600     		.2byte	0x6
 1123 0015 F3       		.byte	0xf3
 1124 0016 01       		.uleb128 0x1
 1125 0017 50       		.byte	0x50
 1126 0018 33       		.byte	0x33
 1127 0019 1A       		.byte	0x1a
 1128 001a 9F       		.byte	0x9f
 1129 001b 00000000 		.4byte	0
 1130 001f 00000000 		.4byte	0
 1131              	.LLST1:
 1132 0023 16000000 		.4byte	.LVL8
 1133 0027 23000000 		.4byte	.LVL9-1
 1134 002b 0100     		.2byte	0x1
 1135 002d 50       		.byte	0x50
 1136 002e 00000000 		.4byte	0
 1137 0032 00000000 		.4byte	0
 1138              		.section	.debug_aranges,"",%progbits
 1139 0000 94000000 		.4byte	0x94
 1140 0004 0200     		.2byte	0x2
 1141 0006 00000000 		.4byte	.Ldebug_info0
 1142 000a 04       		.byte	0x4
 1143 000b 00       		.byte	0
 1144 000c 0000     		.2byte	0
 1145 000e 0000     		.2byte	0
 1146 0010 00000000 		.4byte	.LFB1
 1147 0014 02000000 		.4byte	.LFE1-.LFB1
 1148 0018 00000000 		.4byte	.LFB3
 1149 001c 02000000 		.4byte	.LFE3-.LFB3
 1150 0020 00000000 		.4byte	.LFB4
 1151 0024 0C000000 		.4byte	.LFE4-.LFB4
 1152 0028 00000000 		.4byte	.LFB5
 1153 002c 0C000000 		.4byte	.LFE5-.LFB5
 1154 0030 00000000 		.4byte	.LFB6
 1155 0034 0C000000 		.4byte	.LFE6-.LFB6
 1156 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 35


 1157 003c 0C000000 		.4byte	.LFE7-.LFB7
 1158 0040 00000000 		.4byte	.LFB8
 1159 0044 0C000000 		.4byte	.LFE8-.LFB8
 1160 0048 00000000 		.4byte	.LFB9
 1161 004c 0C000000 		.4byte	.LFE9-.LFB9
 1162 0050 00000000 		.4byte	.LFB10
 1163 0054 0C000000 		.4byte	.LFE10-.LFB10
 1164 0058 00000000 		.4byte	.LFB11
 1165 005c 14000000 		.4byte	.LFE11-.LFB11
 1166 0060 00000000 		.4byte	.LFB12
 1167 0064 02000000 		.4byte	.LFE12-.LFB12
 1168 0068 00000000 		.4byte	.LFB13
 1169 006c 02000000 		.4byte	.LFE13-.LFB13
 1170 0070 00000000 		.4byte	.LFB14
 1171 0074 02000000 		.4byte	.LFE14-.LFB14
 1172 0078 00000000 		.4byte	.LFB15
 1173 007c 14000000 		.4byte	.LFE15-.LFB15
 1174 0080 00000000 		.4byte	.LFB0
 1175 0084 34000000 		.4byte	.LFE0-.LFB0
 1176 0088 00000000 		.4byte	.LFB2
 1177 008c 18000000 		.4byte	.LFE2-.LFB2
 1178 0090 00000000 		.4byte	0
 1179 0094 00000000 		.4byte	0
 1180              		.section	.debug_ranges,"",%progbits
 1181              	.Ldebug_ranges0:
 1182 0000 00000000 		.4byte	.LFB1
 1183 0004 02000000 		.4byte	.LFE1
 1184 0008 00000000 		.4byte	.LFB3
 1185 000c 02000000 		.4byte	.LFE3
 1186 0010 00000000 		.4byte	.LFB4
 1187 0014 0C000000 		.4byte	.LFE4
 1188 0018 00000000 		.4byte	.LFB5
 1189 001c 0C000000 		.4byte	.LFE5
 1190 0020 00000000 		.4byte	.LFB6
 1191 0024 0C000000 		.4byte	.LFE6
 1192 0028 00000000 		.4byte	.LFB7
 1193 002c 0C000000 		.4byte	.LFE7
 1194 0030 00000000 		.4byte	.LFB8
 1195 0034 0C000000 		.4byte	.LFE8
 1196 0038 00000000 		.4byte	.LFB9
 1197 003c 0C000000 		.4byte	.LFE9
 1198 0040 00000000 		.4byte	.LFB10
 1199 0044 0C000000 		.4byte	.LFE10
 1200 0048 00000000 		.4byte	.LFB11
 1201 004c 14000000 		.4byte	.LFE11
 1202 0050 00000000 		.4byte	.LFB12
 1203 0054 02000000 		.4byte	.LFE12
 1204 0058 00000000 		.4byte	.LFB13
 1205 005c 02000000 		.4byte	.LFE13
 1206 0060 00000000 		.4byte	.LFB14
 1207 0064 02000000 		.4byte	.LFE14
 1208 0068 00000000 		.4byte	.LFB15
 1209 006c 14000000 		.4byte	.LFE15
 1210 0070 00000000 		.4byte	.LFB0
 1211 0074 34000000 		.4byte	.LFE0
 1212 0078 00000000 		.4byte	.LFB2
 1213 007c 18000000 		.4byte	.LFE2
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 36


 1214 0080 00000000 		.4byte	0
 1215 0084 00000000 		.4byte	0
 1216              		.section	.debug_line,"",%progbits
 1217              	.Ldebug_line0:
 1218 0000 81010000 		.section	.debug_str,"MS",%progbits,1
 1218      02005900 
 1218      00000201 
 1218      FB0E0D00 
 1218      01010101 
 1219              	.LASF15:
 1220 0000 72656731 		.ascii	"reg16\000"
 1220      3600
 1221              	.LASF30:
 1222 0006 52656172 		.ascii	"Rear_Echo_Timer_EnableTrigger\000"
 1222      5F456368 
 1222      6F5F5469 
 1222      6D65725F 
 1222      456E6162 
 1223              	.LASF25:
 1224 0024 70657269 		.ascii	"period\000"
 1224      6F6400
 1225              	.LASF32:
 1226 002b 52656172 		.ascii	"Rear_Echo_Timer_SetInterruptCount\000"
 1226      5F456368 
 1226      6F5F5469 
 1226      6D65725F 
 1226      53657449 
 1227              	.LASF3:
 1228 004d 73686F72 		.ascii	"short unsigned int\000"
 1228      7420756E 
 1228      7369676E 
 1228      65642069 
 1228      6E7400
 1229              	.LASF29:
 1230 0060 52656172 		.ascii	"Rear_Echo_Timer_ReadCounter\000"
 1230      5F456368 
 1230      6F5F5469 
 1230      6D65725F 
 1230      52656164 
 1231              	.LASF34:
 1232 007c 52656172 		.ascii	"Rear_Echo_Timer_ClearFIFO\000"
 1232      5F456368 
 1232      6F5F5469 
 1232      6D65725F 
 1232      436C6561 
 1233              	.LASF33:
 1234 0096 696E7465 		.ascii	"interruptCount\000"
 1234      72727570 
 1234      74436F75 
 1234      6E7400
 1235              	.LASF11:
 1236 00a5 666C6F61 		.ascii	"float\000"
 1236      7400
 1237              	.LASF28:
 1238 00ab 636F756E 		.ascii	"counter\000"
 1238      74657200 
 1239              	.LASF7:
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 37


 1240 00b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1240      206C6F6E 
 1240      6720756E 
 1240      7369676E 
 1240      65642069 
 1241              	.LASF38:
 1242 00ca 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Rear_Echo_Timer.c\000"
 1242      6E657261 
 1242      7465645F 
 1242      536F7572 
 1242      63655C50 
 1243              	.LASF40:
 1244 00f5 52656172 		.ascii	"Rear_Echo_Timer_interruptState\000"
 1244      5F456368 
 1244      6F5F5469 
 1244      6D65725F 
 1244      696E7465 
 1245              	.LASF1:
 1246 0114 756E7369 		.ascii	"unsigned char\000"
 1246      676E6564 
 1246      20636861 
 1246      7200
 1247              	.LASF14:
 1248 0122 72656738 		.ascii	"reg8\000"
 1248      00
 1249              	.LASF5:
 1250 0127 6C6F6E67 		.ascii	"long unsigned int\000"
 1250      20756E73 
 1250      69676E65 
 1250      6420696E 
 1250      7400
 1251              	.LASF9:
 1252 0139 75696E74 		.ascii	"uint8\000"
 1252      3800
 1253              	.LASF21:
 1254 013f 52656172 		.ascii	"Rear_Echo_Timer_ReadPeriod\000"
 1254      5F456368 
 1254      6F5F5469 
 1254      6D65725F 
 1254      52656164 
 1255              	.LASF19:
 1256 015a 52656172 		.ascii	"Rear_Echo_Timer_SoftwareCapture\000"
 1256      5F456368 
 1256      6F5F5469 
 1256      6D65725F 
 1256      536F6674 
 1257              	.LASF23:
 1258 017a 52656172 		.ascii	"Rear_Echo_Timer_WritePeriod\000"
 1258      5F456368 
 1258      6F5F5469 
 1258      6D65725F 
 1258      57726974 
 1259              	.LASF12:
 1260 0196 646F7562 		.ascii	"double\000"
 1260      6C6500
 1261              	.LASF35:
 1262 019d 52656172 		.ascii	"Rear_Echo_Timer_Init\000"
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 38


 1262      5F456368 
 1262      6F5F5469 
 1262      6D65725F 
 1262      496E6974 
 1263              	.LASF10:
 1264 01b2 75696E74 		.ascii	"uint16\000"
 1264      313600
 1265              	.LASF31:
 1266 01b9 52656172 		.ascii	"Rear_Echo_Timer_DisableTrigger\000"
 1266      5F456368 
 1266      6F5F5469 
 1266      6D65725F 
 1266      44697361 
 1267              	.LASF42:
 1268 01d8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1268      74657243 
 1268      72697469 
 1268      63616C53 
 1268      65637469 
 1269              	.LASF8:
 1270 01ef 756E7369 		.ascii	"unsigned int\000"
 1270      676E6564 
 1270      20696E74 
 1270      00
 1271              	.LASF43:
 1272 01fc 43794578 		.ascii	"CyExitCriticalSection\000"
 1272      69744372 
 1272      69746963 
 1272      616C5365 
 1272      6374696F 
 1273              	.LASF37:
 1274 0212 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1274      4320342E 
 1274      392E3320 
 1274      32303135 
 1274      30333033 
 1275 0245 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1275      20726576 
 1275      6973696F 
 1275      6E203232 
 1275      31323230 
 1276 0278 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1276      66756E63 
 1276      74696F6E 
 1276      2D736563 
 1276      74696F6E 
 1277              	.LASF41:
 1278 02a0 52656172 		.ascii	"Rear_Echo_Timer_initVar\000"
 1278      5F456368 
 1278      6F5F5469 
 1278      6D65725F 
 1278      696E6974 
 1279              	.LASF27:
 1280 02b8 52656172 		.ascii	"Rear_Echo_Timer_WriteCounter\000"
 1280      5F456368 
 1280      6F5F5469 
 1280      6D65725F 
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 39


 1280      57726974 
 1281              	.LASF22:
 1282 02d5 52656172 		.ascii	"Rear_Echo_Timer_SetInterruptMode\000"
 1282      5F456368 
 1282      6F5F5469 
 1282      6D65725F 
 1282      53657449 
 1283              	.LASF16:
 1284 02f6 73697A65 		.ascii	"sizetype\000"
 1284      74797065 
 1284      00
 1285              	.LASF6:
 1286 02ff 6C6F6E67 		.ascii	"long long int\000"
 1286      206C6F6E 
 1286      6720696E 
 1286      7400
 1287              	.LASF24:
 1288 030d 696E7465 		.ascii	"interruptMode\000"
 1288      72727570 
 1288      744D6F64 
 1288      6500
 1289              	.LASF2:
 1290 031b 73686F72 		.ascii	"short int\000"
 1290      7420696E 
 1290      7400
 1291              	.LASF20:
 1292 0325 52656172 		.ascii	"Rear_Echo_Timer_ReadStatusRegister\000"
 1292      5F456368 
 1292      6F5F5469 
 1292      6D65725F 
 1292      52656164 
 1293              	.LASF18:
 1294 0348 52656172 		.ascii	"Rear_Echo_Timer_Stop\000"
 1294      5F456368 
 1294      6F5F5469 
 1294      6D65725F 
 1294      53746F70 
 1295              	.LASF4:
 1296 035d 6C6F6E67 		.ascii	"long int\000"
 1296      20696E74 
 1296      00
 1297              	.LASF13:
 1298 0366 63686172 		.ascii	"char\000"
 1298      00
 1299              	.LASF17:
 1300 036b 52656172 		.ascii	"Rear_Echo_Timer_Enable\000"
 1300      5F456368 
 1300      6F5F5469 
 1300      6D65725F 
 1300      456E6162 
 1301              	.LASF0:
 1302 0382 7369676E 		.ascii	"signed char\000"
 1302      65642063 
 1302      68617200 
 1303              	.LASF26:
 1304 038e 52656172 		.ascii	"Rear_Echo_Timer_ReadCapture\000"
 1304      5F456368 
ARM GAS  C:\Users\tslator\AppData\Local\Temp\ccy9bisX.s 			page 40


 1304      6F5F5469 
 1304      6D65725F 
 1304      52656164 
 1305              	.LASF39:
 1306 03aa 443A5C70 		.ascii	"D:\\projects\\arlobot_freesoc\\freesoc.cydsn\000"
 1306      726F6A65 
 1306      6374735C 
 1306      61726C6F 
 1306      626F745F 
 1307              	.LASF36:
 1308 03d4 52656172 		.ascii	"Rear_Echo_Timer_Start\000"
 1308      5F456368 
 1308      6F5F5469 
 1308      6D65725F 
 1308      53746172 
 1309              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
