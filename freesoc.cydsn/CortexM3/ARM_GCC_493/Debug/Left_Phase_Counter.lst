ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Left_Phase_Counter.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Left_Phase_Counter_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Left_Phase_Counter_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Left_Phase_Counter_Enable, %function
  24              	Left_Phase_Counter_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Left_Phase_Counter.c"
   1:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * File Name: Left_Phase_Counter.c  
   3:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
   5:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Description:
   6:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
   9:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   Note:
  10:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *     None
  11:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
  12:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
  19:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #include "Left_Phase_Counter.h"
  20:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
  21:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint8 Left_Phase_Counter_initVar = 0u;
  22:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
  23:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
  24:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Init
  26:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
  27:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
  28:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *     Initialize to the schematic state
  29:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * 
  30:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void  
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 2


  32:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
  33:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
  34:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
  35:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
  36:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_Init(void) 
  38:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
  39:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
  40:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             uint8 ctrl;
  41:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
  42:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
  43:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if(!Left_Phase_Counter_UsingFixedFunction) 
  44:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Interrupt State Backup for Critical Region*/
  45:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             uint8 Left_Phase_Counter_interruptState;
  46:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
  47:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
  48:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (Left_Phase_Counter_UsingFixedFunction)
  49:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL &= Left_Phase_Counter_CTRL_ENABLE;
  51:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  52:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Clear the mode bits for continuous run mode */
  53:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #if (CY_PSOC5A)
  54:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL2 &= ((uint8)(~Left_Phase_Counter_CTRL_MODE_MASK));
  55:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #endif /* (CY_PSOC5A) */
  56:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL3 &= ((uint8)(~Left_Phase_Counter_CTRL_MODE_MASK));      
  58:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #if (Left_Phase_Counter_RunModeUsed != 0x0u)
  61:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL |= Left_Phase_Counter_ONESHOT;
  63:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #endif /* (Left_Phase_Counter_RunModeUsed != 0x0u) */
  64:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  65:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Set the IRQ to use the status register interrupts */
  66:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL2 |= Left_Phase_Counter_CTRL2_IRQ_SEL;
  67:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  68:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 &= ((uint8)(~Left_Phase_Counter_RT1_MASK));
  70:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 |= Left_Phase_Counter_SYNC;     
  71:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                     
  72:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 &= ((uint8)(~Left_Phase_Counter_SYNCDSI_MASK));
  74:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 |= Left_Phase_Counter_SYNCDSI_EN;
  75:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
  76:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #else
  77:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #if(!Left_Phase_Counter_ControlRegRemoved)
  78:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Set the default compare mode defined in the parameter */
  79:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             ctrl = Left_Phase_Counter_CONTROL & ((uint8)(~Left_Phase_Counter_CTRL_CMPMODE_MASK));
  80:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL = ctrl | Left_Phase_Counter_DEFAULT_COMPARE_MODE;
  81:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  82:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Set the default capture mode defined in the parameter */
  83:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             ctrl = Left_Phase_Counter_CONTROL & ((uint8)(~Left_Phase_Counter_CTRL_CAPMODE_MASK));
  84:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  85:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #if( 0 != Left_Phase_Counter_CAPTURE_MODE_CONF)
  86:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL = ctrl | Left_Phase_Counter_DEFAULT_CAPTURE_MODE;
  87:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #else
  88:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL = ctrl;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 3


  89:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #endif /* 0 != Left_Phase_Counter_CAPTURE_MODE */ 
  90:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
  91:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             #endif /* (!Left_Phase_Counter_ControlRegRemoved) */
  92:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (Left_Phase_Counter_UsingFixedFunction) */
  93:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
  94:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         /* Clear all data in the FIFO's */
  95:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction)
  96:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_ClearFIFO();
  97:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
  98:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
  99:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         /* Set Initial values from Configuration */
 100:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_WritePeriod(Left_Phase_Counter_INIT_PERIOD_VALUE);
 101:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 102:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_WriteCounter(Left_Phase_Counter_INIT_COUNTER_VALUE);
 103:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 104:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_SetInterruptMode(Left_Phase_Counter_INIT_INTERRUPTS_MASK);
 105:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
 106:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction)
 107:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             (void)Left_Phase_Counter_ReadStatusRegister();
 109:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_WriteCompare(Left_Phase_Counter_INIT_COMPARE_VALUE);
 111:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 113:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Enter Critical Region*/
 115:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_interruptState = CyEnterCriticalSection();
 116:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 117:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             Left_Phase_Counter_STATUS_AUX_CTRL |= Left_Phase_Counter_STATUS_ACTL_INT_EN_MASK;
 118:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 119:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Exit Critical Region*/
 120:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             CyExitCriticalSection(Left_Phase_Counter_interruptState);
 121:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 122:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 124:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 125:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 126:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Enable
 128:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 129:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 130:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *     Enable the Counter
 131:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * 
 132:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 133:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void  
 134:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 135:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 136:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 137:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 138:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Side Effects: 
 139:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   on the operation of the counter.
 141:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 142:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_Enable(void) 
 144:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
  27              		.loc 1 144 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 4


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE1:
  35              		.size	Left_Phase_Counter_Enable, .-Left_Phase_Counter_Enable
  36 0002 00BF     		.section	.text.Left_Phase_Counter_Stop,"ax",%progbits
  37              		.align	2
  38              		.global	Left_Phase_Counter_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	Left_Phase_Counter_Stop, %function
  42              	Left_Phase_Counter_Stop:
  43              	.LFB3:
 145:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if (Left_Phase_Counter_UsingFixedFunction)
 147:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE |= Left_Phase_Counter_BLOCK_EN_MASK;
 148:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_STBY_ENABLE |= Left_Phase_Counter_BLOCK_STBY_EN_MASK;
 149:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */  
 150:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
 151:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Enable the counter from the control register  */
 152:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* else make sure reset is clear */
 154:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction)
 155:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_CONTROL |= Left_Phase_Counter_CTRL_ENABLE;                
 156:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 158:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 159:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 160:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 161:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Start
 163:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 164:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 165:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Enables the counter for operation 
 166:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 167:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 168:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void  
 169:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 170:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 171:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 172:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 173:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Global variables:
 174:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Left_Phase_Counter_initVar: Is modified when this function is called for the  
 175:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   first time. Is used to ensure that initialization happens only once.
 176:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 177:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 178:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_Start(void) 
 179:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 180:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     if(Left_Phase_Counter_initVar == 0u)
 181:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     {
 182:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_Init();
 183:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
 184:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_initVar = 1u; /* Clear this bit for Initialization */        
 185:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     }
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 5


 186:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 187:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Enable the Counter */
 188:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_Enable();        
 189:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 190:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 191:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 192:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Stop
 194:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 195:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 196:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 198:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 199:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void  
 200:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 201:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 202:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 203:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 204:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *               has no effect on the operation of the counter.
 206:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 207:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_Stop(void) 
 209:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
  44              		.loc 1 209 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE3:
  52              		.size	Left_Phase_Counter_Stop, .-Left_Phase_Counter_Stop
  53 0002 00BF     		.section	.text.Left_Phase_Counter_SetInterruptMode,"ax",%progbits
  54              		.align	2
  55              		.global	Left_Phase_Counter_SetInterruptMode
  56              		.thumb
  57              		.thumb_func
  58              		.type	Left_Phase_Counter_SetInterruptMode, %function
  59              	Left_Phase_Counter_SetInterruptMode:
  60              	.LFB4:
 210:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Disable Counter */
 211:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction)
 212:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_ENABLE));        
 213:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction) */
 214:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 215:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if (Left_Phase_Counter_UsingFixedFunction)
 217:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_EN_MASK));
 218:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_STBY_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_STBY_EN_MASK));
 219:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 220:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 221:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 222:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 223:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetInterruptMode
 225:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 6


 226:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 227:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 229:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 230:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 233:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 234:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 235:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 236:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 237:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_SetInterruptMode(uint8 interruptsMask) 
 238:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
  61              		.loc 1 238 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL0:
 239:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_STATUS_MASK = interruptsMask;
  67              		.loc 1 239 0
  68 0000 014B     		ldr	r3, .L4
  69 0002 1870     		strb	r0, [r3]
  70 0004 7047     		bx	lr
  71              	.L5:
  72 0006 00BF     		.align	2
  73              	.L4:
  74 0008 8B640040 		.word	1073767563
  75              		.cfi_endproc
  76              	.LFE4:
  77              		.size	Left_Phase_Counter_SetInterruptMode, .-Left_Phase_Counter_SetInterruptMode
  78              		.section	.text.Left_Phase_Counter_ReadStatusRegister,"ax",%progbits
  79              		.align	2
  80              		.global	Left_Phase_Counter_ReadStatusRegister
  81              		.thumb
  82              		.thumb_func
  83              		.type	Left_Phase_Counter_ReadStatusRegister, %function
  84              	Left_Phase_Counter_ReadStatusRegister:
  85              	.LFB5:
 240:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 241:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 242:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 243:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadStatusRegister
 245:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 247:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   Reads the status register and returns it's state. This function should use
 248:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 249:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       register may be permuteable.
 250:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 251:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 252:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 253:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 254:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 255:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint8) The contents of the status register
 256:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 257:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Side Effects:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 7


 258:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   Status register bits may be clear on read. 
 259:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 260:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint8   Left_Phase_Counter_ReadStatusRegister(void) 
 262:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
  86              		.loc 1 262 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 263:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     return Left_Phase_Counter_STATUS;
  91              		.loc 1 263 0
  92 0000 014B     		ldr	r3, .L7
  93 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
  94              		.loc 1 264 0
  95 0004 7047     		bx	lr
  96              	.L8:
  97 0006 00BF     		.align	2
  98              	.L7:
  99 0008 6B640040 		.word	1073767531
 100              		.cfi_endproc
 101              	.LFE5:
 102              		.size	Left_Phase_Counter_ReadStatusRegister, .-Left_Phase_Counter_ReadStatusRegister
 103              		.section	.text.Left_Phase_Counter_WriteCounter,"ax",%progbits
 104              		.align	2
 105              		.global	Left_Phase_Counter_WriteCounter
 106              		.thumb
 107              		.thumb_func
 108              		.type	Left_Phase_Counter_WriteCounter, %function
 109              	Left_Phase_Counter_WriteCounter:
 110              	.LFB6:
 265:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 266:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 267:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #if(!Left_Phase_Counter_ControlRegRemoved)
 268:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadControlRegister
 270:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 272:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   Reads the control register and returns it's state. This function should use
 273:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 274:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       register may be permuteable.
 275:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 276:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 277:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 278:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 279:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 280:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint8) The contents of the control register
 281:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 282:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 283:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint8   Left_Phase_Counter_ReadControlRegister(void) 
 284:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 285:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     return Left_Phase_Counter_CONTROL;
 286:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 287:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 288:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 289:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 8


 290:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteControlRegister
 291:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 292:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 293:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   Sets the bit-field of the control register.  This function should use
 294:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 295:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *       register may be permuteable.
 296:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 297:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 298:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 299:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 300:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 301:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint8) The contents of the control register
 302:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 303:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void    Left_Phase_Counter_WriteControlRegister(uint8 control) 
 305:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 306:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL = control;
 307:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 308:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 309:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #endif  /* (!Left_Phase_Counter_ControlRegRemoved) */
 310:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 311:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 312:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 313:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 314:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteCounter
 315:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 316:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 317:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   This funtion is used to set the counter to a specific value
 318:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 319:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 320:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  counter:  New counter value. 
 321:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 322:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 323:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void 
 324:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 325:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_WriteCounter(uint32 counter) \
 327:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                                    
 328:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 111              		.loc 1 328 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL1:
 329:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 330:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         /* assert if block is already enabled */
 331:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CYASSERT (0u == (Left_Phase_Counter_GLOBAL_ENABLE & Left_Phase_Counter_BLOCK_EN_MASK));
 332:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         /* If block is disabled, enable it and then write the counter */
 333:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE |= Left_Phase_Counter_BLOCK_EN_MASK;
 334:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_COUNTER_LSB_PTR, (uint16)counter);
 335:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_EN_MASK));
 336:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 337:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_COUNTER_LSB_PTR, counter);
 117              		.loc 1 337 0
 118 0000 014B     		ldr	r3, .L10
 119 0002 1860     		str	r0, [r3]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 9


 120 0004 7047     		bx	lr
 121              	.L11:
 122 0006 00BF     		.align	2
 123              	.L10:
 124 0008 08640040 		.word	1073767432
 125              		.cfi_endproc
 126              	.LFE6:
 127              		.size	Left_Phase_Counter_WriteCounter, .-Left_Phase_Counter_WriteCounter
 128              		.section	.text.Left_Phase_Counter_ReadCounter,"ax",%progbits
 129              		.align	2
 130              		.global	Left_Phase_Counter_ReadCounter
 131              		.thumb
 132              		.thumb_func
 133              		.type	Left_Phase_Counter_ReadCounter, %function
 134              	Left_Phase_Counter_ReadCounter:
 135              	.LFB7:
 338:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 339:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 340:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 341:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 342:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 343:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCounter
 345:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 346:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 347:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Returns the current value of the counter.  It doesn't matter
 348:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * if the counter is enabled or running.
 349:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 350:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 351:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void:  
 352:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 353:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 354:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint32) The present value of the counter.
 355:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 356:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCounter(void) 
 358:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 136              		.loc 1 358 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 359:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Force capture by reading Accumulator */
 360:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Must first do a software capture to be able to read the counter */
 361:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 363:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 		(void)CY_GET_REG16(Left_Phase_Counter_COUNTER_LSB_PTR);
 364:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 	#else
 365:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 		(void)CY_GET_REG8(Left_Phase_Counter_COUNTER_LSB_PTR_8BIT);
 141              		.loc 1 365 0
 142 0000 024B     		ldr	r3, .L13
 143 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 	#endif/* (Left_Phase_Counter_UsingFixedFunction) */
 367:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 368:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 370:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 10


 371:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 372:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 144              		.loc 1 372 0
 145 0004 024B     		ldr	r3, .L13+4
 146 0006 1868     		ldr	r0, [r3]
 373:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 374:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 147              		.loc 1 374 0
 148 0008 7047     		bx	lr
 149              	.L14:
 150 000a 00BF     		.align	2
 151              	.L13:
 152 000c 08640040 		.word	1073767432
 153 0010 48640040 		.word	1073767496
 154              		.cfi_endproc
 155              	.LFE7:
 156              		.size	Left_Phase_Counter_ReadCounter, .-Left_Phase_Counter_ReadCounter
 157              		.section	.text.Left_Phase_Counter_ReadCapture,"ax",%progbits
 158              		.align	2
 159              		.global	Left_Phase_Counter_ReadCapture
 160              		.thumb
 161              		.thumb_func
 162              		.type	Left_Phase_Counter_ReadCapture, %function
 163              	Left_Phase_Counter_ReadCapture:
 164              	.LFB8:
 375:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 376:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 377:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCapture
 379:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 381:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   This function returns the last value captured.
 382:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 383:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 384:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 385:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 386:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 387:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint32) Present Capture value.
 388:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 389:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCapture(void) 
 391:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 165              		.loc 1 391 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 392:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 393:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 394:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 395:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 170              		.loc 1 395 0
 171 0000 014B     		ldr	r3, .L16
 172 0002 1868     		ldr	r0, [r3]
 396:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 397:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 173              		.loc 1 397 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 11


 174 0004 7047     		bx	lr
 175              	.L17:
 176 0006 00BF     		.align	2
 177              	.L16:
 178 0008 48640040 		.word	1073767496
 179              		.cfi_endproc
 180              	.LFE8:
 181              		.size	Left_Phase_Counter_ReadCapture, .-Left_Phase_Counter_ReadCapture
 182              		.section	.text.Left_Phase_Counter_WritePeriod,"ax",%progbits
 183              		.align	2
 184              		.global	Left_Phase_Counter_WritePeriod
 185              		.thumb
 186              		.thumb_func
 187              		.type	Left_Phase_Counter_WritePeriod, %function
 188              	Left_Phase_Counter_WritePeriod:
 189              	.LFB9:
 398:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 399:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 400:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 401:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WritePeriod
 402:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 403:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 404:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Changes the period of the counter.  The new period 
 405:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * will be loaded the next time terminal count is detected.
 406:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 407:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 408:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  period: (uint32) A value of 0 will result in
 409:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *         the counter remaining at zero.  
 410:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 411:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 412:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 413:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 414:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_WritePeriod(uint32 period) 
 416:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 190              		.loc 1 416 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL2:
 417:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 418:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_PERIOD_LSB_PTR,(uint16)period);
 419:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 420:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_PERIOD_LSB_PTR, period);
 196              		.loc 1 420 0
 197 0000 014B     		ldr	r3, .L19
 198 0002 1860     		str	r0, [r3]
 199 0004 7047     		bx	lr
 200              	.L20:
 201 0006 00BF     		.align	2
 202              	.L19:
 203 0008 28640040 		.word	1073767464
 204              		.cfi_endproc
 205              	.LFE9:
 206              		.size	Left_Phase_Counter_WritePeriod, .-Left_Phase_Counter_WritePeriod
 207              		.section	.text.Left_Phase_Counter_ReadPeriod,"ax",%progbits
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 12


 208              		.align	2
 209              		.global	Left_Phase_Counter_ReadPeriod
 210              		.thumb
 211              		.thumb_func
 212              		.type	Left_Phase_Counter_ReadPeriod, %function
 213              	Left_Phase_Counter_ReadPeriod:
 214              	.LFB10:
 421:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 422:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 423:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 424:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 425:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadPeriod
 427:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 428:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 429:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Reads the current period value without affecting counter operation.
 430:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 431:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 432:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void:  
 433:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 434:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 435:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint32) Present period value.
 436:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 437:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 438:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadPeriod(void) 
 439:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 215              		.loc 1 439 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 440:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 441:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_PERIOD_LSB_PTR));
 442:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 443:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_PERIOD_LSB_PTR));
 220              		.loc 1 443 0
 221 0000 014B     		ldr	r3, .L22
 222 0002 1868     		ldr	r0, [r3]
 444:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 445:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 223              		.loc 1 445 0
 224 0004 7047     		bx	lr
 225              	.L23:
 226 0006 00BF     		.align	2
 227              	.L22:
 228 0008 28640040 		.word	1073767464
 229              		.cfi_endproc
 230              	.LFE10:
 231              		.size	Left_Phase_Counter_ReadPeriod, .-Left_Phase_Counter_ReadPeriod
 232              		.section	.text.Left_Phase_Counter_WriteCompare,"ax",%progbits
 233              		.align	2
 234              		.global	Left_Phase_Counter_WriteCompare
 235              		.thumb
 236              		.thumb_func
 237              		.type	Left_Phase_Counter_WriteCompare, %function
 238              	Left_Phase_Counter_WriteCompare:
 239              	.LFB11:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 13


 446:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 447:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 448:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #if (!Left_Phase_Counter_UsingFixedFunction)
 449:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 450:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteCompare
 451:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 452:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 453:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Changes the compare value.  The compare output will 
 454:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * driven high when the present counter value compares true based on the 
 456:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * configured compare mode setting. 
 457:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 458:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 459:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Compare:  New compare value. 
 460:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 461:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 462:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 463:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 464:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_WriteCompare(uint32 compare) \
 466:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****                                    
 467:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 240              		.loc 1 467 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245              	.LVL3:
 468:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 469:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_COMPARE_LSB_PTR, (uint16)compare);
 470:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #else
 471:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_COMPARE_LSB_PTR, compare);
 246              		.loc 1 471 0
 247 0000 014B     		ldr	r3, .L25
 248 0002 1860     		str	r0, [r3]
 249 0004 7047     		bx	lr
 250              	.L26:
 251 0006 00BF     		.align	2
 252              	.L25:
 253 0008 38640040 		.word	1073767480
 254              		.cfi_endproc
 255              	.LFE11:
 256              		.size	Left_Phase_Counter_WriteCompare, .-Left_Phase_Counter_WriteCompare
 257              		.section	.text.Left_Phase_Counter_ReadCompare,"ax",%progbits
 258              		.align	2
 259              		.global	Left_Phase_Counter_ReadCompare
 260              		.thumb
 261              		.thumb_func
 262              		.type	Left_Phase_Counter_ReadCompare, %function
 263              	Left_Phase_Counter_ReadCompare:
 264              	.LFB12:
 472:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 473:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 474:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 475:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 476:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 477:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCompare
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 14


 478:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 479:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 480:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Returns the compare value.
 481:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 482:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 483:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void:
 484:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 485:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 486:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  (uint32) Present compare value.
 487:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 488:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 489:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCompare(void) 
 490:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 265              		.loc 1 490 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 491:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     return (CY_GET_REG32(Left_Phase_Counter_COMPARE_LSB_PTR));
 270              		.loc 1 491 0
 271 0000 014B     		ldr	r3, .L28
 272 0002 1868     		ldr	r0, [r3]
 492:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 273              		.loc 1 492 0
 274 0004 7047     		bx	lr
 275              	.L29:
 276 0006 00BF     		.align	2
 277              	.L28:
 278 0008 38640040 		.word	1073767480
 279              		.cfi_endproc
 280              	.LFE12:
 281              		.size	Left_Phase_Counter_ReadCompare, .-Left_Phase_Counter_ReadCompare
 282              		.section	.text.Left_Phase_Counter_ClearFIFO,"ax",%progbits
 283              		.align	2
 284              		.global	Left_Phase_Counter_ClearFIFO
 285              		.thumb
 286              		.thumb_func
 287              		.type	Left_Phase_Counter_ClearFIFO, %function
 288              	Left_Phase_Counter_ClearFIFO:
 289              	.LFB13:
 493:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 494:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 495:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #if (Left_Phase_Counter_COMPARE_MODE_SOFTWARE)
 496:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetCompareMode
 498:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 500:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Sets the software controlled Compare Mode.
 501:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 502:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:
 503:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 505:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return:
 506:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 507:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 508:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 509:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_SetCompareMode(uint8 compareMode) 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 15


 510:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 511:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Clear the compare mode bits in the control register */
 512:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_CMPMODE_MASK));
 513:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 514:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Write the new setting */
 515:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL |= compareMode;
 516:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 517:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #endif  /* (Left_Phase_Counter_COMPARE_MODE_SOFTWARE) */
 518:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 519:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 520:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #if (Left_Phase_Counter_CAPTURE_MODE_SOFTWARE)
 521:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 522:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetCaptureMode
 523:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 524:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 525:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  Sets the software controlled Capture Mode.
 526:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 527:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:
 528:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 530:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return:
 531:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void
 532:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 533:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 534:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_SetCaptureMode(uint8 captureMode) 
 535:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 536:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Clear the capture mode bits in the control register */
 537:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_CAPMODE_MASK));
 538:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     
 539:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     /* Write the new setting */
 540:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL |= ((uint8)((uint8)captureMode << Left_Phase_Counter_CTRL_CAPMODE0_S
 541:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 542:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** #endif  /* (Left_Phase_Counter_CAPTURE_MODE_SOFTWARE) */
 543:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 544:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 545:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** /*******************************************************************************
 546:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ClearFIFO
 547:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** ********************************************************************************
 548:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Summary:
 549:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *   This function clears all capture data from the capture FIFO
 550:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 551:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Parameters:  
 552:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  void:
 553:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 554:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** * Return: 
 555:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *  None
 556:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *
 557:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** void Left_Phase_Counter_ClearFIFO(void) 
 559:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** {
 290              		.loc 1 559 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 08B5     		push	{r3, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 16


 297              		.cfi_offset 14, -4
 560:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 561:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     while(0u != (Left_Phase_Counter_ReadStatusRegister() & Left_Phase_Counter_STATUS_FIFONEMP))
 298              		.loc 1 561 0
 299 0002 01E0     		b	.L31
 300              	.L32:
 562:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     {
 563:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         (void)Left_Phase_Counter_ReadCapture();
 301              		.loc 1 563 0
 302 0004 FFF7FEFF 		bl	Left_Phase_Counter_ReadCapture
 303              	.LVL4:
 304              	.L31:
 561:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     {
 305              		.loc 1 561 0
 306 0008 FFF7FEFF 		bl	Left_Phase_Counter_ReadStatusRegister
 307              	.LVL5:
 308 000c 10F0400F 		tst	r0, #64
 309 0010 F8D1     		bne	.L32
 564:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     }
 565:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** 
 566:.\Generated_Source\PSoC5/Left_Phase_Counter.c **** }
 310              		.loc 1 566 0
 311 0012 08BD     		pop	{r3, pc}
 312              		.cfi_endproc
 313              	.LFE13:
 314              		.size	Left_Phase_Counter_ClearFIFO, .-Left_Phase_Counter_ClearFIFO
 315              		.section	.text.Left_Phase_Counter_Init,"ax",%progbits
 316              		.align	2
 317              		.global	Left_Phase_Counter_Init
 318              		.thumb
 319              		.thumb_func
 320              		.type	Left_Phase_Counter_Init, %function
 321              	Left_Phase_Counter_Init:
 322              	.LFB0:
  38:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
 323              		.loc 1 38 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
 331              		.loc 1 96 0
 332 0002 FFF7FEFF 		bl	Left_Phase_Counter_ClearFIFO
 333              	.LVL6:
 100:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 334              		.loc 1 100 0
 335 0006 6FF00100 		mvn	r0, #1
 336 000a FFF7FEFF 		bl	Left_Phase_Counter_WritePeriod
 337              	.LVL7:
 102:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 338              		.loc 1 102 0
 339 000e 6FF00100 		mvn	r0, #1
 340 0012 FFF7FEFF 		bl	Left_Phase_Counter_WriteCounter
 341              	.LVL8:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 17


 104:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
 342              		.loc 1 104 0
 343 0016 1D20     		movs	r0, #29
 344 0018 FFF7FEFF 		bl	Left_Phase_Counter_SetInterruptMode
 345              	.LVL9:
 108:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 346              		.loc 1 108 0
 347 001c FFF7FEFF 		bl	Left_Phase_Counter_ReadStatusRegister
 348              	.LVL10:
 110:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 349              		.loc 1 110 0
 350 0020 6FF00100 		mvn	r0, #1
 351 0024 FFF7FEFF 		bl	Left_Phase_Counter_WriteCompare
 352              	.LVL11:
 115:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 353              		.loc 1 115 0
 354 0028 FFF7FEFF 		bl	CyEnterCriticalSection
 355              	.LVL12:
 117:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 356              		.loc 1 117 0
 357 002c 034A     		ldr	r2, .L36
 358 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 359 0030 43F01003 		orr	r3, r3, #16
 360 0034 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****             
 361              		.loc 1 120 0
 362 0036 FFF7FEFF 		bl	CyExitCriticalSection
 363              	.LVL13:
 364 003a 08BD     		pop	{r3, pc}
 365              	.L37:
 366              		.align	2
 367              	.L36:
 368 003c 9B640040 		.word	1073767579
 369              		.cfi_endproc
 370              	.LFE0:
 371              		.size	Left_Phase_Counter_Init, .-Left_Phase_Counter_Init
 372              		.section	.text.Left_Phase_Counter_Start,"ax",%progbits
 373              		.align	2
 374              		.global	Left_Phase_Counter_Start
 375              		.thumb
 376              		.thumb_func
 377              		.type	Left_Phase_Counter_Start, %function
 378              	Left_Phase_Counter_Start:
 379              	.LFB2:
 179:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     if(Left_Phase_Counter_initVar == 0u)
 380              		.loc 1 179 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 180:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     {
 388              		.loc 1 180 0
 389 0002 044B     		ldr	r3, .L41
 390 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 18


 391 0006 23B9     		cbnz	r3, .L38
 182:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****         
 392              		.loc 1 182 0
 393 0008 FFF7FEFF 		bl	Left_Phase_Counter_Init
 394              	.LVL14:
 184:.\Generated_Source\PSoC5/Left_Phase_Counter.c ****     }
 395              		.loc 1 184 0
 396 000c 0122     		movs	r2, #1
 397 000e 014B     		ldr	r3, .L41
 398 0010 1A70     		strb	r2, [r3]
 399              	.L38:
 400 0012 08BD     		pop	{r3, pc}
 401              	.L42:
 402              		.align	2
 403              	.L41:
 404 0014 00000000 		.word	.LANCHOR0
 405              		.cfi_endproc
 406              	.LFE2:
 407              		.size	Left_Phase_Counter_Start, .-Left_Phase_Counter_Start
 408              		.global	Left_Phase_Counter_initVar
 409              		.bss
 410              		.set	.LANCHOR0,. + 0
 411              		.type	Left_Phase_Counter_initVar, %object
 412              		.size	Left_Phase_Counter_initVar, 1
 413              	Left_Phase_Counter_initVar:
 414 0000 00       		.space	1
 415              		.text
 416              	.Letext0:
 417              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 418              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 419              		.section	.debug_info,"",%progbits
 420              	.Ldebug_info0:
 421 0000 E9020000 		.4byte	0x2e9
 422 0004 0400     		.2byte	0x4
 423 0006 00000000 		.4byte	.Ldebug_abbrev0
 424 000a 04       		.byte	0x4
 425 000b 01       		.uleb128 0x1
 426 000c F3010000 		.4byte	.LASF35
 427 0010 01       		.byte	0x1
 428 0011 8E030000 		.4byte	.LASF36
 429 0015 B5000000 		.4byte	.LASF37
 430 0019 00000000 		.4byte	.Ldebug_ranges0+0
 431 001d 00000000 		.4byte	0
 432 0021 00000000 		.4byte	.Ldebug_line0
 433 0025 02       		.uleb128 0x2
 434 0026 01       		.byte	0x1
 435 0027 06       		.byte	0x6
 436 0028 C5030000 		.4byte	.LASF0
 437 002c 02       		.uleb128 0x2
 438 002d 01       		.byte	0x1
 439 002e 08       		.byte	0x8
 440 002f 52010000 		.4byte	.LASF1
 441 0033 02       		.uleb128 0x2
 442 0034 02       		.byte	0x2
 443 0035 05       		.byte	0x5
 444 0036 60030000 		.4byte	.LASF2
 445 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 19


 446 003b 02       		.byte	0x2
 447 003c 07       		.byte	0x7
 448 003d A2000000 		.4byte	.LASF3
 449 0041 02       		.uleb128 0x2
 450 0042 04       		.byte	0x4
 451 0043 05       		.byte	0x5
 452 0044 BC030000 		.4byte	.LASF4
 453 0048 02       		.uleb128 0x2
 454 0049 04       		.byte	0x4
 455 004a 07       		.byte	0x7
 456 004b 84010000 		.4byte	.LASF5
 457 004f 02       		.uleb128 0x2
 458 0050 08       		.byte	0x8
 459 0051 05       		.byte	0x5
 460 0052 13030000 		.4byte	.LASF6
 461 0056 02       		.uleb128 0x2
 462 0057 08       		.byte	0x8
 463 0058 07       		.byte	0x7
 464 0059 3B010000 		.4byte	.LASF7
 465 005d 03       		.uleb128 0x3
 466 005e 04       		.byte	0x4
 467 005f 05       		.byte	0x5
 468 0060 696E7400 		.ascii	"int\000"
 469 0064 02       		.uleb128 0x2
 470 0065 04       		.byte	0x4
 471 0066 07       		.byte	0x7
 472 0067 E7000000 		.4byte	.LASF8
 473 006b 04       		.uleb128 0x4
 474 006c 96010000 		.4byte	.LASF9
 475 0070 02       		.byte	0x2
 476 0071 3801     		.2byte	0x138
 477 0073 2C000000 		.4byte	0x2c
 478 0077 04       		.uleb128 0x4
 479 0078 EC010000 		.4byte	.LASF10
 480 007c 02       		.byte	0x2
 481 007d 3A01     		.2byte	0x13a
 482 007f 48000000 		.4byte	0x48
 483 0083 02       		.uleb128 0x2
 484 0084 04       		.byte	0x4
 485 0085 04       		.byte	0x4
 486 0086 2D010000 		.4byte	.LASF11
 487 008a 02       		.uleb128 0x2
 488 008b 08       		.byte	0x8
 489 008c 04       		.byte	0x4
 490 008d C6010000 		.4byte	.LASF12
 491 0091 02       		.uleb128 0x2
 492 0092 01       		.byte	0x1
 493 0093 08       		.byte	0x8
 494 0094 43030000 		.4byte	.LASF13
 495 0098 04       		.uleb128 0x4
 496 0099 7F010000 		.4byte	.LASF14
 497 009d 02       		.byte	0x2
 498 009e E201     		.2byte	0x1e2
 499 00a0 A4000000 		.4byte	0xa4
 500 00a4 05       		.uleb128 0x5
 501 00a5 6B000000 		.4byte	0x6b
 502 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 20


 503 00aa 1A000000 		.4byte	.LASF15
 504 00ae 02       		.byte	0x2
 505 00af E401     		.2byte	0x1e4
 506 00b1 B5000000 		.4byte	0xb5
 507 00b5 05       		.uleb128 0x5
 508 00b6 77000000 		.4byte	0x77
 509 00ba 02       		.uleb128 0x2
 510 00bb 04       		.byte	0x4
 511 00bc 07       		.byte	0x7
 512 00bd 0A030000 		.4byte	.LASF16
 513 00c1 06       		.uleb128 0x6
 514 00c2 00000000 		.4byte	.LASF17
 515 00c6 01       		.byte	0x1
 516 00c7 8F       		.byte	0x8f
 517 00c8 00000000 		.4byte	.LFB1
 518 00cc 02000000 		.4byte	.LFE1-.LFB1
 519 00d0 01       		.uleb128 0x1
 520 00d1 9C       		.byte	0x9c
 521 00d2 06       		.uleb128 0x6
 522 00d3 83000000 		.4byte	.LASF18
 523 00d7 01       		.byte	0x1
 524 00d8 D0       		.byte	0xd0
 525 00d9 00000000 		.4byte	.LFB3
 526 00dd 02000000 		.4byte	.LFE3-.LFB3
 527 00e1 01       		.uleb128 0x1
 528 00e2 9C       		.byte	0x9c
 529 00e3 07       		.uleb128 0x7
 530 00e4 6A030000 		.4byte	.LASF19
 531 00e8 01       		.byte	0x1
 532 00e9 ED       		.byte	0xed
 533 00ea 00000000 		.4byte	.LFB4
 534 00ee 0C000000 		.4byte	.LFE4-.LFB4
 535 00f2 01       		.uleb128 0x1
 536 00f3 9C       		.byte	0x9c
 537 00f4 06010000 		.4byte	0x106
 538 00f8 08       		.uleb128 0x8
 539 00f9 9C010000 		.4byte	.LASF21
 540 00fd 01       		.byte	0x1
 541 00fe ED       		.byte	0xed
 542 00ff 6B000000 		.4byte	0x6b
 543 0103 01       		.uleb128 0x1
 544 0104 50       		.byte	0x50
 545 0105 00       		.byte	0
 546 0106 09       		.uleb128 0x9
 547 0107 3F000000 		.4byte	.LASF23
 548 010b 01       		.byte	0x1
 549 010c 0501     		.2byte	0x105
 550 010e 6B000000 		.4byte	0x6b
 551 0112 00000000 		.4byte	.LFB5
 552 0116 0C000000 		.4byte	.LFE5-.LFB5
 553 011a 01       		.uleb128 0x1
 554 011b 9C       		.byte	0x9c
 555 011c 0A       		.uleb128 0xa
 556 011d 98020000 		.4byte	.LASF20
 557 0121 01       		.byte	0x1
 558 0122 4601     		.2byte	0x146
 559 0124 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 21


 560 0128 0C000000 		.4byte	.LFE6-.LFB6
 561 012c 01       		.uleb128 0x1
 562 012d 9C       		.byte	0x9c
 563 012e 41010000 		.4byte	0x141
 564 0132 0B       		.uleb128 0xb
 565 0133 33010000 		.4byte	.LASF22
 566 0137 01       		.byte	0x1
 567 0138 4601     		.2byte	0x146
 568 013a 77000000 		.4byte	0x77
 569 013e 01       		.uleb128 0x1
 570 013f 50       		.byte	0x50
 571 0140 00       		.byte	0
 572 0141 09       		.uleb128 0x9
 573 0142 60010000 		.4byte	.LASF24
 574 0146 01       		.byte	0x1
 575 0147 6501     		.2byte	0x165
 576 0149 77000000 		.4byte	0x77
 577 014d 00000000 		.4byte	.LFB7
 578 0151 14000000 		.4byte	.LFE7-.LFB7
 579 0155 01       		.uleb128 0x1
 580 0156 9C       		.byte	0x9c
 581 0157 09       		.uleb128 0x9
 582 0158 B8020000 		.4byte	.LASF25
 583 015c 01       		.byte	0x1
 584 015d 8601     		.2byte	0x186
 585 015f 77000000 		.4byte	0x77
 586 0163 00000000 		.4byte	.LFB8
 587 0167 0C000000 		.4byte	.LFE8-.LFB8
 588 016b 01       		.uleb128 0x1
 589 016c 9C       		.byte	0x9c
 590 016d 0A       		.uleb128 0xa
 591 016e 20000000 		.4byte	.LASF26
 592 0172 01       		.byte	0x1
 593 0173 9F01     		.2byte	0x19f
 594 0175 00000000 		.4byte	.LFB9
 595 0179 0C000000 		.4byte	.LFE9-.LFB9
 596 017d 01       		.uleb128 0x1
 597 017e 9C       		.byte	0x9c
 598 017f 92010000 		.4byte	0x192
 599 0183 0B       		.uleb128 0xb
 600 0184 9B000000 		.4byte	.LASF27
 601 0188 01       		.byte	0x1
 602 0189 9F01     		.2byte	0x19f
 603 018b 77000000 		.4byte	0x77
 604 018f 01       		.uleb128 0x1
 605 0190 50       		.byte	0x50
 606 0191 00       		.byte	0
 607 0192 09       		.uleb128 0x9
 608 0193 65000000 		.4byte	.LASF28
 609 0197 01       		.byte	0x1
 610 0198 B601     		.2byte	0x1b6
 611 019a 77000000 		.4byte	0x77
 612 019e 00000000 		.4byte	.LFB10
 613 01a2 0C000000 		.4byte	.LFE10-.LFB10
 614 01a6 01       		.uleb128 0x1
 615 01a7 9C       		.byte	0x9c
 616 01a8 0A       		.uleb128 0xa
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 22


 617 01a9 F4000000 		.4byte	.LASF29
 618 01ad 01       		.byte	0x1
 619 01ae D101     		.2byte	0x1d1
 620 01b0 00000000 		.4byte	.LFB11
 621 01b4 0C000000 		.4byte	.LFE11-.LFB11
 622 01b8 01       		.uleb128 0x1
 623 01b9 9C       		.byte	0x9c
 624 01ba CD010000 		.4byte	0x1cd
 625 01be 0B       		.uleb128 0xb
 626 01bf D1030000 		.4byte	.LASF30
 627 01c3 01       		.byte	0x1
 628 01c4 D101     		.2byte	0x1d1
 629 01c6 77000000 		.4byte	0x77
 630 01ca 01       		.uleb128 0x1
 631 01cb 50       		.byte	0x50
 632 01cc 00       		.byte	0
 633 01cd 09       		.uleb128 0x9
 634 01ce CD010000 		.4byte	.LASF31
 635 01d2 01       		.byte	0x1
 636 01d3 E901     		.2byte	0x1e9
 637 01d5 77000000 		.4byte	0x77
 638 01d9 00000000 		.4byte	.LFB12
 639 01dd 0C000000 		.4byte	.LFE12-.LFB12
 640 01e1 01       		.uleb128 0x1
 641 01e2 9C       		.byte	0x9c
 642 01e3 0A       		.uleb128 0xa
 643 01e4 ED020000 		.4byte	.LASF32
 644 01e8 01       		.byte	0x1
 645 01e9 2E02     		.2byte	0x22e
 646 01eb 00000000 		.4byte	.LFB13
 647 01ef 14000000 		.4byte	.LFE13-.LFB13
 648 01f3 01       		.uleb128 0x1
 649 01f4 9C       		.byte	0x9c
 650 01f5 0C020000 		.4byte	0x20c
 651 01f9 0C       		.uleb128 0xc
 652 01fa 08000000 		.4byte	.LVL4
 653 01fe 57010000 		.4byte	0x157
 654 0202 0C       		.uleb128 0xc
 655 0203 0C000000 		.4byte	.LVL5
 656 0207 06010000 		.4byte	0x106
 657 020b 00       		.byte	0
 658 020c 07       		.uleb128 0x7
 659 020d 48030000 		.4byte	.LASF33
 660 0211 01       		.byte	0x1
 661 0212 25       		.byte	0x25
 662 0213 00000000 		.4byte	.LFB0
 663 0217 40000000 		.4byte	.LFE0-.LFB0
 664 021b 01       		.uleb128 0x1
 665 021c 9C       		.byte	0x9c
 666 021d A4020000 		.4byte	0x2a4
 667 0221 0D       		.uleb128 0xd
 668 0222 21030000 		.4byte	.LASF38
 669 0226 01       		.byte	0x1
 670 0227 2D       		.byte	0x2d
 671 0228 6B000000 		.4byte	0x6b
 672 022c 00000000 		.4byte	.LLST0
 673 0230 0C       		.uleb128 0xc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 23


 674 0231 06000000 		.4byte	.LVL6
 675 0235 E3010000 		.4byte	0x1e3
 676 0239 0E       		.uleb128 0xe
 677 023a 0E000000 		.4byte	.LVL7
 678 023e 6D010000 		.4byte	0x16d
 679 0242 4D020000 		.4byte	0x24d
 680 0246 0F       		.uleb128 0xf
 681 0247 01       		.uleb128 0x1
 682 0248 50       		.byte	0x50
 683 0249 02       		.uleb128 0x2
 684 024a 09       		.byte	0x9
 685 024b FE       		.byte	0xfe
 686 024c 00       		.byte	0
 687 024d 0E       		.uleb128 0xe
 688 024e 16000000 		.4byte	.LVL8
 689 0252 1C010000 		.4byte	0x11c
 690 0256 61020000 		.4byte	0x261
 691 025a 0F       		.uleb128 0xf
 692 025b 01       		.uleb128 0x1
 693 025c 50       		.byte	0x50
 694 025d 02       		.uleb128 0x2
 695 025e 09       		.byte	0x9
 696 025f FE       		.byte	0xfe
 697 0260 00       		.byte	0
 698 0261 0E       		.uleb128 0xe
 699 0262 1C000000 		.4byte	.LVL9
 700 0266 E3000000 		.4byte	0xe3
 701 026a 74020000 		.4byte	0x274
 702 026e 0F       		.uleb128 0xf
 703 026f 01       		.uleb128 0x1
 704 0270 50       		.byte	0x50
 705 0271 01       		.uleb128 0x1
 706 0272 4D       		.byte	0x4d
 707 0273 00       		.byte	0
 708 0274 0C       		.uleb128 0xc
 709 0275 20000000 		.4byte	.LVL10
 710 0279 06010000 		.4byte	0x106
 711 027d 0E       		.uleb128 0xe
 712 027e 28000000 		.4byte	.LVL11
 713 0282 A8010000 		.4byte	0x1a8
 714 0286 91020000 		.4byte	0x291
 715 028a 0F       		.uleb128 0xf
 716 028b 01       		.uleb128 0x1
 717 028c 50       		.byte	0x50
 718 028d 02       		.uleb128 0x2
 719 028e 09       		.byte	0x9
 720 028f FE       		.byte	0xfe
 721 0290 00       		.byte	0
 722 0291 0C       		.uleb128 0xc
 723 0292 2C000000 		.4byte	.LVL12
 724 0296 D4020000 		.4byte	0x2d4
 725 029a 0C       		.uleb128 0xc
 726 029b 3A000000 		.4byte	.LVL13
 727 029f DF020000 		.4byte	0x2df
 728 02a3 00       		.byte	0
 729 02a4 07       		.uleb128 0x7
 730 02a5 14010000 		.4byte	.LASF34
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 24


 731 02a9 01       		.byte	0x1
 732 02aa B2       		.byte	0xb2
 733 02ab 00000000 		.4byte	.LFB2
 734 02af 18000000 		.4byte	.LFE2-.LFB2
 735 02b3 01       		.uleb128 0x1
 736 02b4 9C       		.byte	0x9c
 737 02b5 C3020000 		.4byte	0x2c3
 738 02b9 0C       		.uleb128 0xc
 739 02ba 0C000000 		.4byte	.LVL14
 740 02be 0C020000 		.4byte	0x20c
 741 02c2 00       		.byte	0
 742 02c3 10       		.uleb128 0x10
 743 02c4 AB010000 		.4byte	.LASF39
 744 02c8 01       		.byte	0x1
 745 02c9 15       		.byte	0x15
 746 02ca 6B000000 		.4byte	0x6b
 747 02ce 05       		.uleb128 0x5
 748 02cf 03       		.byte	0x3
 749 02d0 00000000 		.4byte	Left_Phase_Counter_initVar
 750 02d4 11       		.uleb128 0x11
 751 02d5 81020000 		.4byte	.LASF40
 752 02d9 03       		.byte	0x3
 753 02da 7E       		.byte	0x7e
 754 02db 6B000000 		.4byte	0x6b
 755 02df 12       		.uleb128 0x12
 756 02e0 D7020000 		.4byte	.LASF41
 757 02e4 03       		.byte	0x3
 758 02e5 7F       		.byte	0x7f
 759 02e6 13       		.uleb128 0x13
 760 02e7 6B000000 		.4byte	0x6b
 761 02eb 00       		.byte	0
 762 02ec 00       		.byte	0
 763              		.section	.debug_abbrev,"",%progbits
 764              	.Ldebug_abbrev0:
 765 0000 01       		.uleb128 0x1
 766 0001 11       		.uleb128 0x11
 767 0002 01       		.byte	0x1
 768 0003 25       		.uleb128 0x25
 769 0004 0E       		.uleb128 0xe
 770 0005 13       		.uleb128 0x13
 771 0006 0B       		.uleb128 0xb
 772 0007 03       		.uleb128 0x3
 773 0008 0E       		.uleb128 0xe
 774 0009 1B       		.uleb128 0x1b
 775 000a 0E       		.uleb128 0xe
 776 000b 55       		.uleb128 0x55
 777 000c 17       		.uleb128 0x17
 778 000d 11       		.uleb128 0x11
 779 000e 01       		.uleb128 0x1
 780 000f 10       		.uleb128 0x10
 781 0010 17       		.uleb128 0x17
 782 0011 00       		.byte	0
 783 0012 00       		.byte	0
 784 0013 02       		.uleb128 0x2
 785 0014 24       		.uleb128 0x24
 786 0015 00       		.byte	0
 787 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 25


 788 0017 0B       		.uleb128 0xb
 789 0018 3E       		.uleb128 0x3e
 790 0019 0B       		.uleb128 0xb
 791 001a 03       		.uleb128 0x3
 792 001b 0E       		.uleb128 0xe
 793 001c 00       		.byte	0
 794 001d 00       		.byte	0
 795 001e 03       		.uleb128 0x3
 796 001f 24       		.uleb128 0x24
 797 0020 00       		.byte	0
 798 0021 0B       		.uleb128 0xb
 799 0022 0B       		.uleb128 0xb
 800 0023 3E       		.uleb128 0x3e
 801 0024 0B       		.uleb128 0xb
 802 0025 03       		.uleb128 0x3
 803 0026 08       		.uleb128 0x8
 804 0027 00       		.byte	0
 805 0028 00       		.byte	0
 806 0029 04       		.uleb128 0x4
 807 002a 16       		.uleb128 0x16
 808 002b 00       		.byte	0
 809 002c 03       		.uleb128 0x3
 810 002d 0E       		.uleb128 0xe
 811 002e 3A       		.uleb128 0x3a
 812 002f 0B       		.uleb128 0xb
 813 0030 3B       		.uleb128 0x3b
 814 0031 05       		.uleb128 0x5
 815 0032 49       		.uleb128 0x49
 816 0033 13       		.uleb128 0x13
 817 0034 00       		.byte	0
 818 0035 00       		.byte	0
 819 0036 05       		.uleb128 0x5
 820 0037 35       		.uleb128 0x35
 821 0038 00       		.byte	0
 822 0039 49       		.uleb128 0x49
 823 003a 13       		.uleb128 0x13
 824 003b 00       		.byte	0
 825 003c 00       		.byte	0
 826 003d 06       		.uleb128 0x6
 827 003e 2E       		.uleb128 0x2e
 828 003f 00       		.byte	0
 829 0040 3F       		.uleb128 0x3f
 830 0041 19       		.uleb128 0x19
 831 0042 03       		.uleb128 0x3
 832 0043 0E       		.uleb128 0xe
 833 0044 3A       		.uleb128 0x3a
 834 0045 0B       		.uleb128 0xb
 835 0046 3B       		.uleb128 0x3b
 836 0047 0B       		.uleb128 0xb
 837 0048 27       		.uleb128 0x27
 838 0049 19       		.uleb128 0x19
 839 004a 11       		.uleb128 0x11
 840 004b 01       		.uleb128 0x1
 841 004c 12       		.uleb128 0x12
 842 004d 06       		.uleb128 0x6
 843 004e 40       		.uleb128 0x40
 844 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 26


 845 0050 9742     		.uleb128 0x2117
 846 0052 19       		.uleb128 0x19
 847 0053 00       		.byte	0
 848 0054 00       		.byte	0
 849 0055 07       		.uleb128 0x7
 850 0056 2E       		.uleb128 0x2e
 851 0057 01       		.byte	0x1
 852 0058 3F       		.uleb128 0x3f
 853 0059 19       		.uleb128 0x19
 854 005a 03       		.uleb128 0x3
 855 005b 0E       		.uleb128 0xe
 856 005c 3A       		.uleb128 0x3a
 857 005d 0B       		.uleb128 0xb
 858 005e 3B       		.uleb128 0x3b
 859 005f 0B       		.uleb128 0xb
 860 0060 27       		.uleb128 0x27
 861 0061 19       		.uleb128 0x19
 862 0062 11       		.uleb128 0x11
 863 0063 01       		.uleb128 0x1
 864 0064 12       		.uleb128 0x12
 865 0065 06       		.uleb128 0x6
 866 0066 40       		.uleb128 0x40
 867 0067 18       		.uleb128 0x18
 868 0068 9742     		.uleb128 0x2117
 869 006a 19       		.uleb128 0x19
 870 006b 01       		.uleb128 0x1
 871 006c 13       		.uleb128 0x13
 872 006d 00       		.byte	0
 873 006e 00       		.byte	0
 874 006f 08       		.uleb128 0x8
 875 0070 05       		.uleb128 0x5
 876 0071 00       		.byte	0
 877 0072 03       		.uleb128 0x3
 878 0073 0E       		.uleb128 0xe
 879 0074 3A       		.uleb128 0x3a
 880 0075 0B       		.uleb128 0xb
 881 0076 3B       		.uleb128 0x3b
 882 0077 0B       		.uleb128 0xb
 883 0078 49       		.uleb128 0x49
 884 0079 13       		.uleb128 0x13
 885 007a 02       		.uleb128 0x2
 886 007b 18       		.uleb128 0x18
 887 007c 00       		.byte	0
 888 007d 00       		.byte	0
 889 007e 09       		.uleb128 0x9
 890 007f 2E       		.uleb128 0x2e
 891 0080 00       		.byte	0
 892 0081 3F       		.uleb128 0x3f
 893 0082 19       		.uleb128 0x19
 894 0083 03       		.uleb128 0x3
 895 0084 0E       		.uleb128 0xe
 896 0085 3A       		.uleb128 0x3a
 897 0086 0B       		.uleb128 0xb
 898 0087 3B       		.uleb128 0x3b
 899 0088 05       		.uleb128 0x5
 900 0089 27       		.uleb128 0x27
 901 008a 19       		.uleb128 0x19
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 27


 902 008b 49       		.uleb128 0x49
 903 008c 13       		.uleb128 0x13
 904 008d 11       		.uleb128 0x11
 905 008e 01       		.uleb128 0x1
 906 008f 12       		.uleb128 0x12
 907 0090 06       		.uleb128 0x6
 908 0091 40       		.uleb128 0x40
 909 0092 18       		.uleb128 0x18
 910 0093 9742     		.uleb128 0x2117
 911 0095 19       		.uleb128 0x19
 912 0096 00       		.byte	0
 913 0097 00       		.byte	0
 914 0098 0A       		.uleb128 0xa
 915 0099 2E       		.uleb128 0x2e
 916 009a 01       		.byte	0x1
 917 009b 3F       		.uleb128 0x3f
 918 009c 19       		.uleb128 0x19
 919 009d 03       		.uleb128 0x3
 920 009e 0E       		.uleb128 0xe
 921 009f 3A       		.uleb128 0x3a
 922 00a0 0B       		.uleb128 0xb
 923 00a1 3B       		.uleb128 0x3b
 924 00a2 05       		.uleb128 0x5
 925 00a3 27       		.uleb128 0x27
 926 00a4 19       		.uleb128 0x19
 927 00a5 11       		.uleb128 0x11
 928 00a6 01       		.uleb128 0x1
 929 00a7 12       		.uleb128 0x12
 930 00a8 06       		.uleb128 0x6
 931 00a9 40       		.uleb128 0x40
 932 00aa 18       		.uleb128 0x18
 933 00ab 9742     		.uleb128 0x2117
 934 00ad 19       		.uleb128 0x19
 935 00ae 01       		.uleb128 0x1
 936 00af 13       		.uleb128 0x13
 937 00b0 00       		.byte	0
 938 00b1 00       		.byte	0
 939 00b2 0B       		.uleb128 0xb
 940 00b3 05       		.uleb128 0x5
 941 00b4 00       		.byte	0
 942 00b5 03       		.uleb128 0x3
 943 00b6 0E       		.uleb128 0xe
 944 00b7 3A       		.uleb128 0x3a
 945 00b8 0B       		.uleb128 0xb
 946 00b9 3B       		.uleb128 0x3b
 947 00ba 05       		.uleb128 0x5
 948 00bb 49       		.uleb128 0x49
 949 00bc 13       		.uleb128 0x13
 950 00bd 02       		.uleb128 0x2
 951 00be 18       		.uleb128 0x18
 952 00bf 00       		.byte	0
 953 00c0 00       		.byte	0
 954 00c1 0C       		.uleb128 0xc
 955 00c2 898201   		.uleb128 0x4109
 956 00c5 00       		.byte	0
 957 00c6 11       		.uleb128 0x11
 958 00c7 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 28


 959 00c8 31       		.uleb128 0x31
 960 00c9 13       		.uleb128 0x13
 961 00ca 00       		.byte	0
 962 00cb 00       		.byte	0
 963 00cc 0D       		.uleb128 0xd
 964 00cd 34       		.uleb128 0x34
 965 00ce 00       		.byte	0
 966 00cf 03       		.uleb128 0x3
 967 00d0 0E       		.uleb128 0xe
 968 00d1 3A       		.uleb128 0x3a
 969 00d2 0B       		.uleb128 0xb
 970 00d3 3B       		.uleb128 0x3b
 971 00d4 0B       		.uleb128 0xb
 972 00d5 49       		.uleb128 0x49
 973 00d6 13       		.uleb128 0x13
 974 00d7 02       		.uleb128 0x2
 975 00d8 17       		.uleb128 0x17
 976 00d9 00       		.byte	0
 977 00da 00       		.byte	0
 978 00db 0E       		.uleb128 0xe
 979 00dc 898201   		.uleb128 0x4109
 980 00df 01       		.byte	0x1
 981 00e0 11       		.uleb128 0x11
 982 00e1 01       		.uleb128 0x1
 983 00e2 31       		.uleb128 0x31
 984 00e3 13       		.uleb128 0x13
 985 00e4 01       		.uleb128 0x1
 986 00e5 13       		.uleb128 0x13
 987 00e6 00       		.byte	0
 988 00e7 00       		.byte	0
 989 00e8 0F       		.uleb128 0xf
 990 00e9 8A8201   		.uleb128 0x410a
 991 00ec 00       		.byte	0
 992 00ed 02       		.uleb128 0x2
 993 00ee 18       		.uleb128 0x18
 994 00ef 9142     		.uleb128 0x2111
 995 00f1 18       		.uleb128 0x18
 996 00f2 00       		.byte	0
 997 00f3 00       		.byte	0
 998 00f4 10       		.uleb128 0x10
 999 00f5 34       		.uleb128 0x34
 1000 00f6 00       		.byte	0
 1001 00f7 03       		.uleb128 0x3
 1002 00f8 0E       		.uleb128 0xe
 1003 00f9 3A       		.uleb128 0x3a
 1004 00fa 0B       		.uleb128 0xb
 1005 00fb 3B       		.uleb128 0x3b
 1006 00fc 0B       		.uleb128 0xb
 1007 00fd 49       		.uleb128 0x49
 1008 00fe 13       		.uleb128 0x13
 1009 00ff 3F       		.uleb128 0x3f
 1010 0100 19       		.uleb128 0x19
 1011 0101 02       		.uleb128 0x2
 1012 0102 18       		.uleb128 0x18
 1013 0103 00       		.byte	0
 1014 0104 00       		.byte	0
 1015 0105 11       		.uleb128 0x11
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 29


 1016 0106 2E       		.uleb128 0x2e
 1017 0107 00       		.byte	0
 1018 0108 3F       		.uleb128 0x3f
 1019 0109 19       		.uleb128 0x19
 1020 010a 03       		.uleb128 0x3
 1021 010b 0E       		.uleb128 0xe
 1022 010c 3A       		.uleb128 0x3a
 1023 010d 0B       		.uleb128 0xb
 1024 010e 3B       		.uleb128 0x3b
 1025 010f 0B       		.uleb128 0xb
 1026 0110 27       		.uleb128 0x27
 1027 0111 19       		.uleb128 0x19
 1028 0112 49       		.uleb128 0x49
 1029 0113 13       		.uleb128 0x13
 1030 0114 3C       		.uleb128 0x3c
 1031 0115 19       		.uleb128 0x19
 1032 0116 00       		.byte	0
 1033 0117 00       		.byte	0
 1034 0118 12       		.uleb128 0x12
 1035 0119 2E       		.uleb128 0x2e
 1036 011a 01       		.byte	0x1
 1037 011b 3F       		.uleb128 0x3f
 1038 011c 19       		.uleb128 0x19
 1039 011d 03       		.uleb128 0x3
 1040 011e 0E       		.uleb128 0xe
 1041 011f 3A       		.uleb128 0x3a
 1042 0120 0B       		.uleb128 0xb
 1043 0121 3B       		.uleb128 0x3b
 1044 0122 0B       		.uleb128 0xb
 1045 0123 27       		.uleb128 0x27
 1046 0124 19       		.uleb128 0x19
 1047 0125 3C       		.uleb128 0x3c
 1048 0126 19       		.uleb128 0x19
 1049 0127 00       		.byte	0
 1050 0128 00       		.byte	0
 1051 0129 13       		.uleb128 0x13
 1052 012a 05       		.uleb128 0x5
 1053 012b 00       		.byte	0
 1054 012c 49       		.uleb128 0x49
 1055 012d 13       		.uleb128 0x13
 1056 012e 00       		.byte	0
 1057 012f 00       		.byte	0
 1058 0130 00       		.byte	0
 1059              		.section	.debug_loc,"",%progbits
 1060              	.Ldebug_loc0:
 1061              	.LLST0:
 1062 0000 2C000000 		.4byte	.LVL12
 1063 0004 39000000 		.4byte	.LVL13-1
 1064 0008 0100     		.2byte	0x1
 1065 000a 50       		.byte	0x50
 1066 000b 00000000 		.4byte	0
 1067 000f 00000000 		.4byte	0
 1068              		.section	.debug_aranges,"",%progbits
 1069 0000 84000000 		.4byte	0x84
 1070 0004 0200     		.2byte	0x2
 1071 0006 00000000 		.4byte	.Ldebug_info0
 1072 000a 04       		.byte	0x4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 30


 1073 000b 00       		.byte	0
 1074 000c 0000     		.2byte	0
 1075 000e 0000     		.2byte	0
 1076 0010 00000000 		.4byte	.LFB1
 1077 0014 02000000 		.4byte	.LFE1-.LFB1
 1078 0018 00000000 		.4byte	.LFB3
 1079 001c 02000000 		.4byte	.LFE3-.LFB3
 1080 0020 00000000 		.4byte	.LFB4
 1081 0024 0C000000 		.4byte	.LFE4-.LFB4
 1082 0028 00000000 		.4byte	.LFB5
 1083 002c 0C000000 		.4byte	.LFE5-.LFB5
 1084 0030 00000000 		.4byte	.LFB6
 1085 0034 0C000000 		.4byte	.LFE6-.LFB6
 1086 0038 00000000 		.4byte	.LFB7
 1087 003c 14000000 		.4byte	.LFE7-.LFB7
 1088 0040 00000000 		.4byte	.LFB8
 1089 0044 0C000000 		.4byte	.LFE8-.LFB8
 1090 0048 00000000 		.4byte	.LFB9
 1091 004c 0C000000 		.4byte	.LFE9-.LFB9
 1092 0050 00000000 		.4byte	.LFB10
 1093 0054 0C000000 		.4byte	.LFE10-.LFB10
 1094 0058 00000000 		.4byte	.LFB11
 1095 005c 0C000000 		.4byte	.LFE11-.LFB11
 1096 0060 00000000 		.4byte	.LFB12
 1097 0064 0C000000 		.4byte	.LFE12-.LFB12
 1098 0068 00000000 		.4byte	.LFB13
 1099 006c 14000000 		.4byte	.LFE13-.LFB13
 1100 0070 00000000 		.4byte	.LFB0
 1101 0074 40000000 		.4byte	.LFE0-.LFB0
 1102 0078 00000000 		.4byte	.LFB2
 1103 007c 18000000 		.4byte	.LFE2-.LFB2
 1104 0080 00000000 		.4byte	0
 1105 0084 00000000 		.4byte	0
 1106              		.section	.debug_ranges,"",%progbits
 1107              	.Ldebug_ranges0:
 1108 0000 00000000 		.4byte	.LFB1
 1109 0004 02000000 		.4byte	.LFE1
 1110 0008 00000000 		.4byte	.LFB3
 1111 000c 02000000 		.4byte	.LFE3
 1112 0010 00000000 		.4byte	.LFB4
 1113 0014 0C000000 		.4byte	.LFE4
 1114 0018 00000000 		.4byte	.LFB5
 1115 001c 0C000000 		.4byte	.LFE5
 1116 0020 00000000 		.4byte	.LFB6
 1117 0024 0C000000 		.4byte	.LFE6
 1118 0028 00000000 		.4byte	.LFB7
 1119 002c 14000000 		.4byte	.LFE7
 1120 0030 00000000 		.4byte	.LFB8
 1121 0034 0C000000 		.4byte	.LFE8
 1122 0038 00000000 		.4byte	.LFB9
 1123 003c 0C000000 		.4byte	.LFE9
 1124 0040 00000000 		.4byte	.LFB10
 1125 0044 0C000000 		.4byte	.LFE10
 1126 0048 00000000 		.4byte	.LFB11
 1127 004c 0C000000 		.4byte	.LFE11
 1128 0050 00000000 		.4byte	.LFB12
 1129 0054 0C000000 		.4byte	.LFE12
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 31


 1130 0058 00000000 		.4byte	.LFB13
 1131 005c 14000000 		.4byte	.LFE13
 1132 0060 00000000 		.4byte	.LFB0
 1133 0064 40000000 		.4byte	.LFE0
 1134 0068 00000000 		.4byte	.LFB2
 1135 006c 18000000 		.4byte	.LFE2
 1136 0070 00000000 		.4byte	0
 1137 0074 00000000 		.4byte	0
 1138              		.section	.debug_line,"",%progbits
 1139              	.Ldebug_line0:
 1140 0000 64010000 		.section	.debug_str,"MS",%progbits,1
 1140      02005C00 
 1140      00000201 
 1140      FB0E0D00 
 1140      01010101 
 1141              	.LASF17:
 1142 0000 4C656674 		.ascii	"Left_Phase_Counter_Enable\000"
 1142      5F506861 
 1142      73655F43 
 1142      6F756E74 
 1142      65725F45 
 1143              	.LASF15:
 1144 001a 72656733 		.ascii	"reg32\000"
 1144      3200
 1145              	.LASF26:
 1146 0020 4C656674 		.ascii	"Left_Phase_Counter_WritePeriod\000"
 1146      5F506861 
 1146      73655F43 
 1146      6F756E74 
 1146      65725F57 
 1147              	.LASF23:
 1148 003f 4C656674 		.ascii	"Left_Phase_Counter_ReadStatusRegister\000"
 1148      5F506861 
 1148      73655F43 
 1148      6F756E74 
 1148      65725F52 
 1149              	.LASF28:
 1150 0065 4C656674 		.ascii	"Left_Phase_Counter_ReadPeriod\000"
 1150      5F506861 
 1150      73655F43 
 1150      6F756E74 
 1150      65725F52 
 1151              	.LASF18:
 1152 0083 4C656674 		.ascii	"Left_Phase_Counter_Stop\000"
 1152      5F506861 
 1152      73655F43 
 1152      6F756E74 
 1152      65725F53 
 1153              	.LASF27:
 1154 009b 70657269 		.ascii	"period\000"
 1154      6F6400
 1155              	.LASF3:
 1156 00a2 73686F72 		.ascii	"short unsigned int\000"
 1156      7420756E 
 1156      7369676E 
 1156      65642069 
 1156      6E7400
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 32


 1157              	.LASF37:
 1158 00b5 443A5C70 		.ascii	"D:\\projects\\ArloBot\\arlobot_freesoc\\freesoc.cyd"
 1158      726F6A65 
 1158      6374735C 
 1158      41726C6F 
 1158      426F745C 
 1159 00e4 736E00   		.ascii	"sn\000"
 1160              	.LASF8:
 1161 00e7 756E7369 		.ascii	"unsigned int\000"
 1161      676E6564 
 1161      20696E74 
 1161      00
 1162              	.LASF29:
 1163 00f4 4C656674 		.ascii	"Left_Phase_Counter_WriteCompare\000"
 1163      5F506861 
 1163      73655F43 
 1163      6F756E74 
 1163      65725F57 
 1164              	.LASF34:
 1165 0114 4C656674 		.ascii	"Left_Phase_Counter_Start\000"
 1165      5F506861 
 1165      73655F43 
 1165      6F756E74 
 1165      65725F53 
 1166              	.LASF11:
 1167 012d 666C6F61 		.ascii	"float\000"
 1167      7400
 1168              	.LASF22:
 1169 0133 636F756E 		.ascii	"counter\000"
 1169      74657200 
 1170              	.LASF7:
 1171 013b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1171      206C6F6E 
 1171      6720756E 
 1171      7369676E 
 1171      65642069 
 1172              	.LASF1:
 1173 0152 756E7369 		.ascii	"unsigned char\000"
 1173      676E6564 
 1173      20636861 
 1173      7200
 1174              	.LASF24:
 1175 0160 4C656674 		.ascii	"Left_Phase_Counter_ReadCounter\000"
 1175      5F506861 
 1175      73655F43 
 1175      6F756E74 
 1175      65725F52 
 1176              	.LASF14:
 1177 017f 72656738 		.ascii	"reg8\000"
 1177      00
 1178              	.LASF5:
 1179 0184 6C6F6E67 		.ascii	"long unsigned int\000"
 1179      20756E73 
 1179      69676E65 
 1179      6420696E 
 1179      7400
 1180              	.LASF9:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 33


 1181 0196 75696E74 		.ascii	"uint8\000"
 1181      3800
 1182              	.LASF21:
 1183 019c 696E7465 		.ascii	"interruptsMask\000"
 1183      72727570 
 1183      74734D61 
 1183      736B00
 1184              	.LASF39:
 1185 01ab 4C656674 		.ascii	"Left_Phase_Counter_initVar\000"
 1185      5F506861 
 1185      73655F43 
 1185      6F756E74 
 1185      65725F69 
 1186              	.LASF12:
 1187 01c6 646F7562 		.ascii	"double\000"
 1187      6C6500
 1188              	.LASF31:
 1189 01cd 4C656674 		.ascii	"Left_Phase_Counter_ReadCompare\000"
 1189      5F506861 
 1189      73655F43 
 1189      6F756E74 
 1189      65725F52 
 1190              	.LASF10:
 1191 01ec 75696E74 		.ascii	"uint32\000"
 1191      333200
 1192              	.LASF35:
 1193 01f3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1193      4320342E 
 1193      392E3320 
 1193      32303135 
 1193      30333033 
 1194 0226 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1194      20726576 
 1194      6973696F 
 1194      6E203232 
 1194      31323230 
 1195 0259 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1195      66756E63 
 1195      74696F6E 
 1195      2D736563 
 1195      74696F6E 
 1196              	.LASF40:
 1197 0281 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1197      74657243 
 1197      72697469 
 1197      63616C53 
 1197      65637469 
 1198              	.LASF20:
 1199 0298 4C656674 		.ascii	"Left_Phase_Counter_WriteCounter\000"
 1199      5F506861 
 1199      73655F43 
 1199      6F756E74 
 1199      65725F57 
 1200              	.LASF25:
 1201 02b8 4C656674 		.ascii	"Left_Phase_Counter_ReadCapture\000"
 1201      5F506861 
 1201      73655F43 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 34


 1201      6F756E74 
 1201      65725F52 
 1202              	.LASF41:
 1203 02d7 43794578 		.ascii	"CyExitCriticalSection\000"
 1203      69744372 
 1203      69746963 
 1203      616C5365 
 1203      6374696F 
 1204              	.LASF32:
 1205 02ed 4C656674 		.ascii	"Left_Phase_Counter_ClearFIFO\000"
 1205      5F506861 
 1205      73655F43 
 1205      6F756E74 
 1205      65725F43 
 1206              	.LASF16:
 1207 030a 73697A65 		.ascii	"sizetype\000"
 1207      74797065 
 1207      00
 1208              	.LASF6:
 1209 0313 6C6F6E67 		.ascii	"long long int\000"
 1209      206C6F6E 
 1209      6720696E 
 1209      7400
 1210              	.LASF38:
 1211 0321 4C656674 		.ascii	"Left_Phase_Counter_interruptState\000"
 1211      5F506861 
 1211      73655F43 
 1211      6F756E74 
 1211      65725F69 
 1212              	.LASF13:
 1213 0343 63686172 		.ascii	"char\000"
 1213      00
 1214              	.LASF33:
 1215 0348 4C656674 		.ascii	"Left_Phase_Counter_Init\000"
 1215      5F506861 
 1215      73655F43 
 1215      6F756E74 
 1215      65725F49 
 1216              	.LASF2:
 1217 0360 73686F72 		.ascii	"short int\000"
 1217      7420696E 
 1217      7400
 1218              	.LASF19:
 1219 036a 4C656674 		.ascii	"Left_Phase_Counter_SetInterruptMode\000"
 1219      5F506861 
 1219      73655F43 
 1219      6F756E74 
 1219      65725F53 
 1220              	.LASF36:
 1221 038e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Left_Phase_Counter.c\000"
 1221      6E657261 
 1221      7465645F 
 1221      536F7572 
 1221      63655C50 
 1222              	.LASF4:
 1223 03bc 6C6F6E67 		.ascii	"long int\000"
 1223      20696E74 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccu5J7x2.s 			page 35


 1223      00
 1224              	.LASF0:
 1225 03c5 7369676E 		.ascii	"signed char\000"
 1225      65642063 
 1225      68617200 
 1226              	.LASF30:
 1227 03d1 636F6D70 		.ascii	"compare\000"
 1227      61726500 
 1228              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
