/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_CYLIB_H
#define _MOCK_CYLIB_H

#include "CyLib.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_CyLib_Init(void);
void mock_CyLib_Destroy(void);
void mock_CyLib_Verify(void);




#define CyPLL_OUT_Start_IgnoreAndReturn(cmock_retval) CyPLL_OUT_Start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyPLL_OUT_Start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cystatus cmock_to_return);
#define CyPLL_OUT_Start_ExpectAndReturn(wait, cmock_retval) CyPLL_OUT_Start_CMockExpectAndReturn(__LINE__, wait, cmock_retval)
void CyPLL_OUT_Start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 wait, cystatus cmock_to_return);
typedef cystatus (* CMOCK_CyPLL_OUT_Start_CALLBACK)(uint8 wait, int cmock_num_calls);
void CyPLL_OUT_Start_StubWithCallback(CMOCK_CyPLL_OUT_Start_CALLBACK Callback);
#define CyPLL_OUT_Stop_Ignore() CyPLL_OUT_Stop_CMockIgnore()
void CyPLL_OUT_Stop_CMockIgnore(void);
#define CyPLL_OUT_Stop_Expect() CyPLL_OUT_Stop_CMockExpect(__LINE__)
void CyPLL_OUT_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyPLL_OUT_Stop_CALLBACK)(int cmock_num_calls);
void CyPLL_OUT_Stop_StubWithCallback(CMOCK_CyPLL_OUT_Stop_CALLBACK Callback);
#define CyPLL_OUT_SetPQ_Ignore() CyPLL_OUT_SetPQ_CMockIgnore()
void CyPLL_OUT_SetPQ_CMockIgnore(void);
#define CyPLL_OUT_SetPQ_Expect(pDiv, qDiv, current) CyPLL_OUT_SetPQ_CMockExpect(__LINE__, pDiv, qDiv, current)
void CyPLL_OUT_SetPQ_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 pDiv, uint8 qDiv, uint8 current);
typedef void (* CMOCK_CyPLL_OUT_SetPQ_CALLBACK)(uint8 pDiv, uint8 qDiv, uint8 current, int cmock_num_calls);
void CyPLL_OUT_SetPQ_StubWithCallback(CMOCK_CyPLL_OUT_SetPQ_CALLBACK Callback);
#define CyPLL_OUT_SetSource_Ignore() CyPLL_OUT_SetSource_CMockIgnore()
void CyPLL_OUT_SetSource_CMockIgnore(void);
#define CyPLL_OUT_SetSource_Expect(source) CyPLL_OUT_SetSource_CMockExpect(__LINE__, source)
void CyPLL_OUT_SetSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 source);
typedef void (* CMOCK_CyPLL_OUT_SetSource_CALLBACK)(uint8 source, int cmock_num_calls);
void CyPLL_OUT_SetSource_StubWithCallback(CMOCK_CyPLL_OUT_SetSource_CALLBACK Callback);
#define CyIMO_Start_Ignore() CyIMO_Start_CMockIgnore()
void CyIMO_Start_CMockIgnore(void);
#define CyIMO_Start_Expect(wait) CyIMO_Start_CMockExpect(__LINE__, wait)
void CyIMO_Start_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 wait);
typedef void (* CMOCK_CyIMO_Start_CALLBACK)(uint8 wait, int cmock_num_calls);
void CyIMO_Start_StubWithCallback(CMOCK_CyIMO_Start_CALLBACK Callback);
#define CyIMO_Stop_Ignore() CyIMO_Stop_CMockIgnore()
void CyIMO_Stop_CMockIgnore(void);
#define CyIMO_Stop_Expect() CyIMO_Stop_CMockExpect(__LINE__)
void CyIMO_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyIMO_Stop_CALLBACK)(int cmock_num_calls);
void CyIMO_Stop_StubWithCallback(CMOCK_CyIMO_Stop_CALLBACK Callback);
#define CyIMO_SetFreq_Ignore() CyIMO_SetFreq_CMockIgnore()
void CyIMO_SetFreq_CMockIgnore(void);
#define CyIMO_SetFreq_Expect(freq) CyIMO_SetFreq_CMockExpect(__LINE__, freq)
void CyIMO_SetFreq_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 freq);
typedef void (* CMOCK_CyIMO_SetFreq_CALLBACK)(uint8 freq, int cmock_num_calls);
void CyIMO_SetFreq_StubWithCallback(CMOCK_CyIMO_SetFreq_CALLBACK Callback);
#define CyIMO_SetSource_Ignore() CyIMO_SetSource_CMockIgnore()
void CyIMO_SetSource_CMockIgnore(void);
#define CyIMO_SetSource_Expect(source) CyIMO_SetSource_CMockExpect(__LINE__, source)
void CyIMO_SetSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 source);
typedef void (* CMOCK_CyIMO_SetSource_CALLBACK)(uint8 source, int cmock_num_calls);
void CyIMO_SetSource_StubWithCallback(CMOCK_CyIMO_SetSource_CALLBACK Callback);
#define CyIMO_EnableDoubler_Ignore() CyIMO_EnableDoubler_CMockIgnore()
void CyIMO_EnableDoubler_CMockIgnore(void);
#define CyIMO_EnableDoubler_Expect() CyIMO_EnableDoubler_CMockExpect(__LINE__)
void CyIMO_EnableDoubler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyIMO_EnableDoubler_CALLBACK)(int cmock_num_calls);
void CyIMO_EnableDoubler_StubWithCallback(CMOCK_CyIMO_EnableDoubler_CALLBACK Callback);
#define CyIMO_DisableDoubler_Ignore() CyIMO_DisableDoubler_CMockIgnore()
void CyIMO_DisableDoubler_CMockIgnore(void);
#define CyIMO_DisableDoubler_Expect() CyIMO_DisableDoubler_CMockExpect(__LINE__)
void CyIMO_DisableDoubler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyIMO_DisableDoubler_CALLBACK)(int cmock_num_calls);
void CyIMO_DisableDoubler_StubWithCallback(CMOCK_CyIMO_DisableDoubler_CALLBACK Callback);
#define CyMasterClk_SetSource_Ignore() CyMasterClk_SetSource_CMockIgnore()
void CyMasterClk_SetSource_CMockIgnore(void);
#define CyMasterClk_SetSource_Expect(source) CyMasterClk_SetSource_CMockExpect(__LINE__, source)
void CyMasterClk_SetSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 source);
typedef void (* CMOCK_CyMasterClk_SetSource_CALLBACK)(uint8 source, int cmock_num_calls);
void CyMasterClk_SetSource_StubWithCallback(CMOCK_CyMasterClk_SetSource_CALLBACK Callback);
#define CyMasterClk_SetDivider_Ignore() CyMasterClk_SetDivider_CMockIgnore()
void CyMasterClk_SetDivider_CMockIgnore(void);
#define CyMasterClk_SetDivider_Expect(divider) CyMasterClk_SetDivider_CMockExpect(__LINE__, divider)
void CyMasterClk_SetDivider_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 divider);
typedef void (* CMOCK_CyMasterClk_SetDivider_CALLBACK)(uint8 divider, int cmock_num_calls);
void CyMasterClk_SetDivider_StubWithCallback(CMOCK_CyMasterClk_SetDivider_CALLBACK Callback);
#define CyBusClk_SetDivider_Ignore() CyBusClk_SetDivider_CMockIgnore()
void CyBusClk_SetDivider_CMockIgnore(void);
#define CyBusClk_SetDivider_Expect(divider) CyBusClk_SetDivider_CMockExpect(__LINE__, divider)
void CyBusClk_SetDivider_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16 divider);
typedef void (* CMOCK_CyBusClk_SetDivider_CALLBACK)(uint16 divider, int cmock_num_calls);
void CyBusClk_SetDivider_StubWithCallback(CMOCK_CyBusClk_SetDivider_CALLBACK Callback);
#define CyUsbClk_SetSource_Ignore() CyUsbClk_SetSource_CMockIgnore()
void CyUsbClk_SetSource_CMockIgnore(void);
#define CyUsbClk_SetSource_Expect(source) CyUsbClk_SetSource_CMockExpect(__LINE__, source)
void CyUsbClk_SetSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 source);
typedef void (* CMOCK_CyUsbClk_SetSource_CALLBACK)(uint8 source, int cmock_num_calls);
void CyUsbClk_SetSource_StubWithCallback(CMOCK_CyUsbClk_SetSource_CALLBACK Callback);
#define CyILO_Start1K_Ignore() CyILO_Start1K_CMockIgnore()
void CyILO_Start1K_CMockIgnore(void);
#define CyILO_Start1K_Expect() CyILO_Start1K_CMockExpect(__LINE__)
void CyILO_Start1K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Start1K_CALLBACK)(int cmock_num_calls);
void CyILO_Start1K_StubWithCallback(CMOCK_CyILO_Start1K_CALLBACK Callback);
#define CyILO_Stop1K_Ignore() CyILO_Stop1K_CMockIgnore()
void CyILO_Stop1K_CMockIgnore(void);
#define CyILO_Stop1K_Expect() CyILO_Stop1K_CMockExpect(__LINE__)
void CyILO_Stop1K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Stop1K_CALLBACK)(int cmock_num_calls);
void CyILO_Stop1K_StubWithCallback(CMOCK_CyILO_Stop1K_CALLBACK Callback);
#define CyILO_Start100K_Ignore() CyILO_Start100K_CMockIgnore()
void CyILO_Start100K_CMockIgnore(void);
#define CyILO_Start100K_Expect() CyILO_Start100K_CMockExpect(__LINE__)
void CyILO_Start100K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Start100K_CALLBACK)(int cmock_num_calls);
void CyILO_Start100K_StubWithCallback(CMOCK_CyILO_Start100K_CALLBACK Callback);
#define CyILO_Stop100K_Ignore() CyILO_Stop100K_CMockIgnore()
void CyILO_Stop100K_CMockIgnore(void);
#define CyILO_Stop100K_Expect() CyILO_Stop100K_CMockExpect(__LINE__)
void CyILO_Stop100K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Stop100K_CALLBACK)(int cmock_num_calls);
void CyILO_Stop100K_StubWithCallback(CMOCK_CyILO_Stop100K_CALLBACK Callback);
#define CyILO_Enable33K_Ignore() CyILO_Enable33K_CMockIgnore()
void CyILO_Enable33K_CMockIgnore(void);
#define CyILO_Enable33K_Expect() CyILO_Enable33K_CMockExpect(__LINE__)
void CyILO_Enable33K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Enable33K_CALLBACK)(int cmock_num_calls);
void CyILO_Enable33K_StubWithCallback(CMOCK_CyILO_Enable33K_CALLBACK Callback);
#define CyILO_Disable33K_Ignore() CyILO_Disable33K_CMockIgnore()
void CyILO_Disable33K_CMockIgnore(void);
#define CyILO_Disable33K_Expect() CyILO_Disable33K_CMockExpect(__LINE__)
void CyILO_Disable33K_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyILO_Disable33K_CALLBACK)(int cmock_num_calls);
void CyILO_Disable33K_StubWithCallback(CMOCK_CyILO_Disable33K_CALLBACK Callback);
#define CyILO_SetSource_Ignore() CyILO_SetSource_CMockIgnore()
void CyILO_SetSource_CMockIgnore(void);
#define CyILO_SetSource_Expect(source) CyILO_SetSource_CMockExpect(__LINE__, source)
void CyILO_SetSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 source);
typedef void (* CMOCK_CyILO_SetSource_CALLBACK)(uint8 source, int cmock_num_calls);
void CyILO_SetSource_StubWithCallback(CMOCK_CyILO_SetSource_CALLBACK Callback);
#define CyILO_SetPowerMode_IgnoreAndReturn(cmock_retval) CyILO_SetPowerMode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyILO_SetPowerMode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyILO_SetPowerMode_ExpectAndReturn(mode, cmock_retval) CyILO_SetPowerMode_CMockExpectAndReturn(__LINE__, mode, cmock_retval)
void CyILO_SetPowerMode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 mode, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyILO_SetPowerMode_CALLBACK)(uint8 mode, int cmock_num_calls);
void CyILO_SetPowerMode_StubWithCallback(CMOCK_CyILO_SetPowerMode_CALLBACK Callback);
#define CyXTAL_32KHZ_ReadStatus_IgnoreAndReturn(cmock_retval) CyXTAL_32KHZ_ReadStatus_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyXTAL_32KHZ_ReadStatus_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyXTAL_32KHZ_ReadStatus_ExpectAndReturn(cmock_retval) CyXTAL_32KHZ_ReadStatus_CMockExpectAndReturn(__LINE__, cmock_retval)
void CyXTAL_32KHZ_ReadStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyXTAL_32KHZ_ReadStatus_CALLBACK)(int cmock_num_calls);
void CyXTAL_32KHZ_ReadStatus_StubWithCallback(CMOCK_CyXTAL_32KHZ_ReadStatus_CALLBACK Callback);
#define CyXTAL_32KHZ_SetPowerMode_IgnoreAndReturn(cmock_retval) CyXTAL_32KHZ_SetPowerMode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyXTAL_32KHZ_SetPowerMode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyXTAL_32KHZ_SetPowerMode_ExpectAndReturn(mode, cmock_retval) CyXTAL_32KHZ_SetPowerMode_CMockExpectAndReturn(__LINE__, mode, cmock_retval)
void CyXTAL_32KHZ_SetPowerMode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 mode, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyXTAL_32KHZ_SetPowerMode_CALLBACK)(uint8 mode, int cmock_num_calls);
void CyXTAL_32KHZ_SetPowerMode_StubWithCallback(CMOCK_CyXTAL_32KHZ_SetPowerMode_CALLBACK Callback);
#define CyXTAL_32KHZ_Start_Ignore() CyXTAL_32KHZ_Start_CMockIgnore()
void CyXTAL_32KHZ_Start_CMockIgnore(void);
#define CyXTAL_32KHZ_Start_Expect() CyXTAL_32KHZ_Start_CMockExpect(__LINE__)
void CyXTAL_32KHZ_Start_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_32KHZ_Start_CALLBACK)(int cmock_num_calls);
void CyXTAL_32KHZ_Start_StubWithCallback(CMOCK_CyXTAL_32KHZ_Start_CALLBACK Callback);
#define CyXTAL_32KHZ_Stop_Ignore() CyXTAL_32KHZ_Stop_CMockIgnore()
void CyXTAL_32KHZ_Stop_CMockIgnore(void);
#define CyXTAL_32KHZ_Stop_Expect() CyXTAL_32KHZ_Stop_CMockExpect(__LINE__)
void CyXTAL_32KHZ_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_32KHZ_Stop_CALLBACK)(int cmock_num_calls);
void CyXTAL_32KHZ_Stop_StubWithCallback(CMOCK_CyXTAL_32KHZ_Stop_CALLBACK Callback);
#define CyXTAL_Start_IgnoreAndReturn(cmock_retval) CyXTAL_Start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyXTAL_Start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cystatus cmock_to_return);
#define CyXTAL_Start_ExpectAndReturn(wait, cmock_retval) CyXTAL_Start_CMockExpectAndReturn(__LINE__, wait, cmock_retval)
void CyXTAL_Start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 wait, cystatus cmock_to_return);
typedef cystatus (* CMOCK_CyXTAL_Start_CALLBACK)(uint8 wait, int cmock_num_calls);
void CyXTAL_Start_StubWithCallback(CMOCK_CyXTAL_Start_CALLBACK Callback);
#define CyXTAL_Stop_Ignore() CyXTAL_Stop_CMockIgnore()
void CyXTAL_Stop_CMockIgnore(void);
#define CyXTAL_Stop_Expect() CyXTAL_Stop_CMockExpect(__LINE__)
void CyXTAL_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_Stop_CALLBACK)(int cmock_num_calls);
void CyXTAL_Stop_StubWithCallback(CMOCK_CyXTAL_Stop_CALLBACK Callback);
#define CyXTAL_SetStartup_Ignore() CyXTAL_SetStartup_CMockIgnore()
void CyXTAL_SetStartup_CMockIgnore(void);
#define CyXTAL_SetStartup_Expect(setting) CyXTAL_SetStartup_CMockExpect(__LINE__, setting)
void CyXTAL_SetStartup_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 setting);
typedef void (* CMOCK_CyXTAL_SetStartup_CALLBACK)(uint8 setting, int cmock_num_calls);
void CyXTAL_SetStartup_StubWithCallback(CMOCK_CyXTAL_SetStartup_CALLBACK Callback);
#define CyXTAL_EnableErrStatus_Ignore() CyXTAL_EnableErrStatus_CMockIgnore()
void CyXTAL_EnableErrStatus_CMockIgnore(void);
#define CyXTAL_EnableErrStatus_Expect() CyXTAL_EnableErrStatus_CMockExpect(__LINE__)
void CyXTAL_EnableErrStatus_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_EnableErrStatus_CALLBACK)(int cmock_num_calls);
void CyXTAL_EnableErrStatus_StubWithCallback(CMOCK_CyXTAL_EnableErrStatus_CALLBACK Callback);
#define CyXTAL_DisableErrStatus_Ignore() CyXTAL_DisableErrStatus_CMockIgnore()
void CyXTAL_DisableErrStatus_CMockIgnore(void);
#define CyXTAL_DisableErrStatus_Expect() CyXTAL_DisableErrStatus_CMockExpect(__LINE__)
void CyXTAL_DisableErrStatus_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_DisableErrStatus_CALLBACK)(int cmock_num_calls);
void CyXTAL_DisableErrStatus_StubWithCallback(CMOCK_CyXTAL_DisableErrStatus_CALLBACK Callback);
#define CyXTAL_ReadStatus_IgnoreAndReturn(cmock_retval) CyXTAL_ReadStatus_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyXTAL_ReadStatus_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyXTAL_ReadStatus_ExpectAndReturn(cmock_retval) CyXTAL_ReadStatus_CMockExpectAndReturn(__LINE__, cmock_retval)
void CyXTAL_ReadStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyXTAL_ReadStatus_CALLBACK)(int cmock_num_calls);
void CyXTAL_ReadStatus_StubWithCallback(CMOCK_CyXTAL_ReadStatus_CALLBACK Callback);
#define CyXTAL_EnableFaultRecovery_Ignore() CyXTAL_EnableFaultRecovery_CMockIgnore()
void CyXTAL_EnableFaultRecovery_CMockIgnore(void);
#define CyXTAL_EnableFaultRecovery_Expect() CyXTAL_EnableFaultRecovery_CMockExpect(__LINE__)
void CyXTAL_EnableFaultRecovery_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_EnableFaultRecovery_CALLBACK)(int cmock_num_calls);
void CyXTAL_EnableFaultRecovery_StubWithCallback(CMOCK_CyXTAL_EnableFaultRecovery_CALLBACK Callback);
#define CyXTAL_DisableFaultRecovery_Ignore() CyXTAL_DisableFaultRecovery_CMockIgnore()
void CyXTAL_DisableFaultRecovery_CMockIgnore(void);
#define CyXTAL_DisableFaultRecovery_Expect() CyXTAL_DisableFaultRecovery_CMockExpect(__LINE__)
void CyXTAL_DisableFaultRecovery_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyXTAL_DisableFaultRecovery_CALLBACK)(int cmock_num_calls);
void CyXTAL_DisableFaultRecovery_StubWithCallback(CMOCK_CyXTAL_DisableFaultRecovery_CALLBACK Callback);
#define CyXTAL_SetFbVoltage_Ignore() CyXTAL_SetFbVoltage_CMockIgnore()
void CyXTAL_SetFbVoltage_CMockIgnore(void);
#define CyXTAL_SetFbVoltage_Expect(setting) CyXTAL_SetFbVoltage_CMockExpect(__LINE__, setting)
void CyXTAL_SetFbVoltage_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 setting);
typedef void (* CMOCK_CyXTAL_SetFbVoltage_CALLBACK)(uint8 setting, int cmock_num_calls);
void CyXTAL_SetFbVoltage_StubWithCallback(CMOCK_CyXTAL_SetFbVoltage_CALLBACK Callback);
#define CyXTAL_SetWdVoltage_Ignore() CyXTAL_SetWdVoltage_CMockIgnore()
void CyXTAL_SetWdVoltage_CMockIgnore(void);
#define CyXTAL_SetWdVoltage_Expect(setting) CyXTAL_SetWdVoltage_CMockExpect(__LINE__, setting)
void CyXTAL_SetWdVoltage_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 setting);
typedef void (* CMOCK_CyXTAL_SetWdVoltage_CALLBACK)(uint8 setting, int cmock_num_calls);
void CyXTAL_SetWdVoltage_StubWithCallback(CMOCK_CyXTAL_SetWdVoltage_CALLBACK Callback);
#define CyWdtStart_Ignore() CyWdtStart_CMockIgnore()
void CyWdtStart_CMockIgnore(void);
#define CyWdtStart_Expect(ticks, lpMode) CyWdtStart_CMockExpect(__LINE__, ticks, lpMode)
void CyWdtStart_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 ticks, uint8 lpMode);
typedef void (* CMOCK_CyWdtStart_CALLBACK)(uint8 ticks, uint8 lpMode, int cmock_num_calls);
void CyWdtStart_StubWithCallback(CMOCK_CyWdtStart_CALLBACK Callback);
#define CyWdtClear_Ignore() CyWdtClear_CMockIgnore()
void CyWdtClear_CMockIgnore(void);
#define CyWdtClear_Expect() CyWdtClear_CMockExpect(__LINE__)
void CyWdtClear_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyWdtClear_CALLBACK)(int cmock_num_calls);
void CyWdtClear_StubWithCallback(CMOCK_CyWdtClear_CALLBACK Callback);
#define CyDelay_Ignore() CyDelay_CMockIgnore()
void CyDelay_CMockIgnore(void);
#define CyDelay_Expect(milliseconds) CyDelay_CMockExpect(__LINE__, milliseconds)
void CyDelay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 milliseconds);
typedef void (* CMOCK_CyDelay_CALLBACK)(uint32 milliseconds, int cmock_num_calls);
void CyDelay_StubWithCallback(CMOCK_CyDelay_CALLBACK Callback);
#define CyDelayUs_Ignore() CyDelayUs_CMockIgnore()
void CyDelayUs_CMockIgnore(void);
#define CyDelayUs_Expect(microseconds) CyDelayUs_CMockExpect(__LINE__, microseconds)
void CyDelayUs_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16 microseconds);
typedef void (* CMOCK_CyDelayUs_CALLBACK)(uint16 microseconds, int cmock_num_calls);
void CyDelayUs_StubWithCallback(CMOCK_CyDelayUs_CALLBACK Callback);
#define CyDelayFreq_Ignore() CyDelayFreq_CMockIgnore()
void CyDelayFreq_CMockIgnore(void);
#define CyDelayFreq_Expect(freq) CyDelayFreq_CMockExpect(__LINE__, freq)
void CyDelayFreq_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 freq);
typedef void (* CMOCK_CyDelayFreq_CALLBACK)(uint32 freq, int cmock_num_calls);
void CyDelayFreq_StubWithCallback(CMOCK_CyDelayFreq_CALLBACK Callback);
#define CyDelayCycles_Ignore() CyDelayCycles_CMockIgnore()
void CyDelayCycles_CMockIgnore(void);
#define CyDelayCycles_Expect(cycles) CyDelayCycles_CMockExpect(__LINE__, cycles)
void CyDelayCycles_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 cycles);
typedef void (* CMOCK_CyDelayCycles_CALLBACK)(uint32 cycles, int cmock_num_calls);
void CyDelayCycles_StubWithCallback(CMOCK_CyDelayCycles_CALLBACK Callback);
#define CySoftwareReset_Ignore() CySoftwareReset_CMockIgnore()
void CySoftwareReset_CMockIgnore(void);
#define CySoftwareReset_Expect() CySoftwareReset_CMockExpect(__LINE__)
void CySoftwareReset_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySoftwareReset_CALLBACK)(int cmock_num_calls);
void CySoftwareReset_StubWithCallback(CMOCK_CySoftwareReset_CALLBACK Callback);
#define CyEnterCriticalSection_IgnoreAndReturn(cmock_retval) CyEnterCriticalSection_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyEnterCriticalSection_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyEnterCriticalSection_ExpectAndReturn(cmock_retval) CyEnterCriticalSection_CMockExpectAndReturn(__LINE__, cmock_retval)
void CyEnterCriticalSection_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyEnterCriticalSection_CALLBACK)(int cmock_num_calls);
void CyEnterCriticalSection_StubWithCallback(CMOCK_CyEnterCriticalSection_CALLBACK Callback);
#define CyExitCriticalSection_Ignore() CyExitCriticalSection_CMockIgnore()
void CyExitCriticalSection_CMockIgnore(void);
#define CyExitCriticalSection_Expect(savedIntrStatus) CyExitCriticalSection_CMockExpect(__LINE__, savedIntrStatus)
void CyExitCriticalSection_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 savedIntrStatus);
typedef void (* CMOCK_CyExitCriticalSection_CALLBACK)(uint8 savedIntrStatus, int cmock_num_calls);
void CyExitCriticalSection_StubWithCallback(CMOCK_CyExitCriticalSection_CALLBACK Callback);
#define CyHalt_Ignore() CyHalt_CMockIgnore()
void CyHalt_CMockIgnore(void);
#define CyHalt_Expect(reason) CyHalt_CMockExpect(__LINE__, reason)
void CyHalt_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 reason);
typedef void (* CMOCK_CyHalt_CALLBACK)(uint8 reason, int cmock_num_calls);
void CyHalt_StubWithCallback(CMOCK_CyHalt_CALLBACK Callback);
#define CyIntSetSysVector_IgnoreAndReturn(cmock_retval) CyIntSetSysVector_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntSetSysVector_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cyisraddress cmock_to_return);
#define CyIntSetSysVector_ExpectAndReturn(number, address, cmock_retval) CyIntSetSysVector_CMockExpectAndReturn(__LINE__, number, address, cmock_retval)
void CyIntSetSysVector_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, cyisraddress address, cyisraddress cmock_to_return);
typedef cyisraddress (* CMOCK_CyIntSetSysVector_CALLBACK)(uint8 number, cyisraddress address, int cmock_num_calls);
void CyIntSetSysVector_StubWithCallback(CMOCK_CyIntSetSysVector_CALLBACK Callback);
#define CyIntGetSysVector_IgnoreAndReturn(cmock_retval) CyIntGetSysVector_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntGetSysVector_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cyisraddress cmock_to_return);
#define CyIntGetSysVector_ExpectAndReturn(number, cmock_retval) CyIntGetSysVector_CMockExpectAndReturn(__LINE__, number, cmock_retval)
void CyIntGetSysVector_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, cyisraddress cmock_to_return);
typedef cyisraddress (* CMOCK_CyIntGetSysVector_CALLBACK)(uint8 number, int cmock_num_calls);
void CyIntGetSysVector_StubWithCallback(CMOCK_CyIntGetSysVector_CALLBACK Callback);
#define CyIntSetVector_IgnoreAndReturn(cmock_retval) CyIntSetVector_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntSetVector_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cyisraddress cmock_to_return);
#define CyIntSetVector_ExpectAndReturn(number, address, cmock_retval) CyIntSetVector_CMockExpectAndReturn(__LINE__, number, address, cmock_retval)
void CyIntSetVector_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, cyisraddress address, cyisraddress cmock_to_return);
typedef cyisraddress (* CMOCK_CyIntSetVector_CALLBACK)(uint8 number, cyisraddress address, int cmock_num_calls);
void CyIntSetVector_StubWithCallback(CMOCK_CyIntSetVector_CALLBACK Callback);
#define CyIntGetVector_IgnoreAndReturn(cmock_retval) CyIntGetVector_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntGetVector_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cyisraddress cmock_to_return);
#define CyIntGetVector_ExpectAndReturn(number, cmock_retval) CyIntGetVector_CMockExpectAndReturn(__LINE__, number, cmock_retval)
void CyIntGetVector_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, cyisraddress cmock_to_return);
typedef cyisraddress (* CMOCK_CyIntGetVector_CALLBACK)(uint8 number, int cmock_num_calls);
void CyIntGetVector_StubWithCallback(CMOCK_CyIntGetVector_CALLBACK Callback);
#define CyIntSetPriority_Ignore() CyIntSetPriority_CMockIgnore()
void CyIntSetPriority_CMockIgnore(void);
#define CyIntSetPriority_Expect(number, priority) CyIntSetPriority_CMockExpect(__LINE__, number, priority)
void CyIntSetPriority_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 number, uint8 priority);
typedef void (* CMOCK_CyIntSetPriority_CALLBACK)(uint8 number, uint8 priority, int cmock_num_calls);
void CyIntSetPriority_StubWithCallback(CMOCK_CyIntSetPriority_CALLBACK Callback);
#define CyIntGetPriority_IgnoreAndReturn(cmock_retval) CyIntGetPriority_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntGetPriority_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyIntGetPriority_ExpectAndReturn(number, cmock_retval) CyIntGetPriority_CMockExpectAndReturn(__LINE__, number, cmock_retval)
void CyIntGetPriority_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyIntGetPriority_CALLBACK)(uint8 number, int cmock_num_calls);
void CyIntGetPriority_StubWithCallback(CMOCK_CyIntGetPriority_CALLBACK Callback);
#define CyIntGetState_IgnoreAndReturn(cmock_retval) CyIntGetState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyIntGetState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyIntGetState_ExpectAndReturn(number, cmock_retval) CyIntGetState_CMockExpectAndReturn(__LINE__, number, cmock_retval)
void CyIntGetState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 number, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyIntGetState_CALLBACK)(uint8 number, int cmock_num_calls);
void CyIntGetState_StubWithCallback(CMOCK_CyIntGetState_CALLBACK Callback);
#define CyDisableInts_IgnoreAndReturn(cmock_retval) CyDisableInts_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyDisableInts_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
#define CyDisableInts_ExpectAndReturn(cmock_retval) CyDisableInts_CMockExpectAndReturn(__LINE__, cmock_retval)
void CyDisableInts_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
typedef uint32 (* CMOCK_CyDisableInts_CALLBACK)(int cmock_num_calls);
void CyDisableInts_StubWithCallback(CMOCK_CyDisableInts_CALLBACK Callback);
#define CyEnableInts_Ignore() CyEnableInts_CMockIgnore()
void CyEnableInts_CMockIgnore(void);
#define CyEnableInts_Expect(mask) CyEnableInts_CMockExpect(__LINE__, mask)
void CyEnableInts_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 mask);
typedef void (* CMOCK_CyEnableInts_CALLBACK)(uint32 mask, int cmock_num_calls);
void CyEnableInts_StubWithCallback(CMOCK_CyEnableInts_CALLBACK Callback);
#define CyFlushCache_Ignore() CyFlushCache_CMockIgnore()
void CyFlushCache_CMockIgnore(void);
#define CyFlushCache_Expect() CyFlushCache_CMockExpect(__LINE__)
void CyFlushCache_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyFlushCache_CALLBACK)(int cmock_num_calls);
void CyFlushCache_StubWithCallback(CMOCK_CyFlushCache_CALLBACK Callback);
#define CyVdLvDigitEnable_Ignore() CyVdLvDigitEnable_CMockIgnore()
void CyVdLvDigitEnable_CMockIgnore(void);
#define CyVdLvDigitEnable_Expect(reset, threshold) CyVdLvDigitEnable_CMockExpect(__LINE__, reset, threshold)
void CyVdLvDigitEnable_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 reset, uint8 threshold);
typedef void (* CMOCK_CyVdLvDigitEnable_CALLBACK)(uint8 reset, uint8 threshold, int cmock_num_calls);
void CyVdLvDigitEnable_StubWithCallback(CMOCK_CyVdLvDigitEnable_CALLBACK Callback);
#define CyVdLvAnalogEnable_Ignore() CyVdLvAnalogEnable_CMockIgnore()
void CyVdLvAnalogEnable_CMockIgnore(void);
#define CyVdLvAnalogEnable_Expect(reset, threshold) CyVdLvAnalogEnable_CMockExpect(__LINE__, reset, threshold)
void CyVdLvAnalogEnable_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 reset, uint8 threshold);
typedef void (* CMOCK_CyVdLvAnalogEnable_CALLBACK)(uint8 reset, uint8 threshold, int cmock_num_calls);
void CyVdLvAnalogEnable_StubWithCallback(CMOCK_CyVdLvAnalogEnable_CALLBACK Callback);
#define CyVdLvDigitDisable_Ignore() CyVdLvDigitDisable_CMockIgnore()
void CyVdLvDigitDisable_CMockIgnore(void);
#define CyVdLvDigitDisable_Expect() CyVdLvDigitDisable_CMockExpect(__LINE__)
void CyVdLvDigitDisable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyVdLvDigitDisable_CALLBACK)(int cmock_num_calls);
void CyVdLvDigitDisable_StubWithCallback(CMOCK_CyVdLvDigitDisable_CALLBACK Callback);
#define CyVdLvAnalogDisable_Ignore() CyVdLvAnalogDisable_CMockIgnore()
void CyVdLvAnalogDisable_CMockIgnore(void);
#define CyVdLvAnalogDisable_Expect() CyVdLvAnalogDisable_CMockExpect(__LINE__)
void CyVdLvAnalogDisable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyVdLvAnalogDisable_CALLBACK)(int cmock_num_calls);
void CyVdLvAnalogDisable_StubWithCallback(CMOCK_CyVdLvAnalogDisable_CALLBACK Callback);
#define CyVdHvAnalogEnable_Ignore() CyVdHvAnalogEnable_CMockIgnore()
void CyVdHvAnalogEnable_CMockIgnore(void);
#define CyVdHvAnalogEnable_Expect() CyVdHvAnalogEnable_CMockExpect(__LINE__)
void CyVdHvAnalogEnable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyVdHvAnalogEnable_CALLBACK)(int cmock_num_calls);
void CyVdHvAnalogEnable_StubWithCallback(CMOCK_CyVdHvAnalogEnable_CALLBACK Callback);
#define CyVdHvAnalogDisable_Ignore() CyVdHvAnalogDisable_CMockIgnore()
void CyVdHvAnalogDisable_CMockIgnore(void);
#define CyVdHvAnalogDisable_Expect() CyVdHvAnalogDisable_CMockExpect(__LINE__)
void CyVdHvAnalogDisable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CyVdHvAnalogDisable_CALLBACK)(int cmock_num_calls);
void CyVdHvAnalogDisable_StubWithCallback(CMOCK_CyVdHvAnalogDisable_CALLBACK Callback);
#define CyVdStickyStatus_IgnoreAndReturn(cmock_retval) CyVdStickyStatus_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyVdStickyStatus_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyVdStickyStatus_ExpectAndReturn(mask, cmock_retval) CyVdStickyStatus_CMockExpectAndReturn(__LINE__, mask, cmock_retval)
void CyVdStickyStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 mask, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyVdStickyStatus_CALLBACK)(uint8 mask, int cmock_num_calls);
void CyVdStickyStatus_StubWithCallback(CMOCK_CyVdStickyStatus_CALLBACK Callback);
#define CyVdRealTimeStatus_IgnoreAndReturn(cmock_retval) CyVdRealTimeStatus_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CyVdRealTimeStatus_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
#define CyVdRealTimeStatus_ExpectAndReturn(cmock_retval) CyVdRealTimeStatus_CMockExpectAndReturn(__LINE__, cmock_retval)
void CyVdRealTimeStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8 cmock_to_return);
typedef uint8 (* CMOCK_CyVdRealTimeStatus_CALLBACK)(int cmock_num_calls);
void CyVdRealTimeStatus_StubWithCallback(CMOCK_CyVdRealTimeStatus_CALLBACK Callback);
#define CySetScPumps_Ignore() CySetScPumps_CMockIgnore()
void CySetScPumps_CMockIgnore(void);
#define CySetScPumps_Expect(enable) CySetScPumps_CMockExpect(__LINE__, enable)
void CySetScPumps_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8 enable);
typedef void (* CMOCK_CySetScPumps_CALLBACK)(uint8 enable, int cmock_num_calls);
void CySetScPumps_StubWithCallback(CMOCK_CySetScPumps_CALLBACK Callback);
#define IntDefaultHandler_Ignore() IntDefaultHandler_CMockIgnore()
void IntDefaultHandler_CMockIgnore(void);
#define IntDefaultHandler_Expect() IntDefaultHandler_CMockExpect(__LINE__)
void IntDefaultHandler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_IntDefaultHandler_CALLBACK)(int cmock_num_calls);
void IntDefaultHandler_StubWithCallback(CMOCK_IntDefaultHandler_CALLBACK Callback);
#define CySysTickStart_Ignore() CySysTickStart_CMockIgnore()
void CySysTickStart_CMockIgnore(void);
#define CySysTickStart_Expect() CySysTickStart_CMockExpect(__LINE__)
void CySysTickStart_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickStart_CALLBACK)(int cmock_num_calls);
void CySysTickStart_StubWithCallback(CMOCK_CySysTickStart_CALLBACK Callback);
#define CySysTickInit_Ignore() CySysTickInit_CMockIgnore()
void CySysTickInit_CMockIgnore(void);
#define CySysTickInit_Expect() CySysTickInit_CMockExpect(__LINE__)
void CySysTickInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickInit_CALLBACK)(int cmock_num_calls);
void CySysTickInit_StubWithCallback(CMOCK_CySysTickInit_CALLBACK Callback);
#define CySysTickEnable_Ignore() CySysTickEnable_CMockIgnore()
void CySysTickEnable_CMockIgnore(void);
#define CySysTickEnable_Expect() CySysTickEnable_CMockExpect(__LINE__)
void CySysTickEnable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickEnable_CALLBACK)(int cmock_num_calls);
void CySysTickEnable_StubWithCallback(CMOCK_CySysTickEnable_CALLBACK Callback);
#define CySysTickStop_Ignore() CySysTickStop_CMockIgnore()
void CySysTickStop_CMockIgnore(void);
#define CySysTickStop_Expect() CySysTickStop_CMockExpect(__LINE__)
void CySysTickStop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickStop_CALLBACK)(int cmock_num_calls);
void CySysTickStop_StubWithCallback(CMOCK_CySysTickStop_CALLBACK Callback);
#define CySysTickEnableInterrupt_Ignore() CySysTickEnableInterrupt_CMockIgnore()
void CySysTickEnableInterrupt_CMockIgnore(void);
#define CySysTickEnableInterrupt_Expect() CySysTickEnableInterrupt_CMockExpect(__LINE__)
void CySysTickEnableInterrupt_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickEnableInterrupt_CALLBACK)(int cmock_num_calls);
void CySysTickEnableInterrupt_StubWithCallback(CMOCK_CySysTickEnableInterrupt_CALLBACK Callback);
#define CySysTickDisableInterrupt_Ignore() CySysTickDisableInterrupt_CMockIgnore()
void CySysTickDisableInterrupt_CMockIgnore(void);
#define CySysTickDisableInterrupt_Expect() CySysTickDisableInterrupt_CMockExpect(__LINE__)
void CySysTickDisableInterrupt_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickDisableInterrupt_CALLBACK)(int cmock_num_calls);
void CySysTickDisableInterrupt_StubWithCallback(CMOCK_CySysTickDisableInterrupt_CALLBACK Callback);
#define CySysTickSetReload_Ignore() CySysTickSetReload_CMockIgnore()
void CySysTickSetReload_CMockIgnore(void);
#define CySysTickSetReload_Expect(value) CySysTickSetReload_CMockExpect(__LINE__, value)
void CySysTickSetReload_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 value);
typedef void (* CMOCK_CySysTickSetReload_CALLBACK)(uint32 value, int cmock_num_calls);
void CySysTickSetReload_StubWithCallback(CMOCK_CySysTickSetReload_CALLBACK Callback);
#define CySysTickGetReload_IgnoreAndReturn(cmock_retval) CySysTickGetReload_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CySysTickGetReload_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
#define CySysTickGetReload_ExpectAndReturn(cmock_retval) CySysTickGetReload_CMockExpectAndReturn(__LINE__, cmock_retval)
void CySysTickGetReload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
typedef uint32 (* CMOCK_CySysTickGetReload_CALLBACK)(int cmock_num_calls);
void CySysTickGetReload_StubWithCallback(CMOCK_CySysTickGetReload_CALLBACK Callback);
#define CySysTickGetValue_IgnoreAndReturn(cmock_retval) CySysTickGetValue_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CySysTickGetValue_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
#define CySysTickGetValue_ExpectAndReturn(cmock_retval) CySysTickGetValue_CMockExpectAndReturn(__LINE__, cmock_retval)
void CySysTickGetValue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
typedef uint32 (* CMOCK_CySysTickGetValue_CALLBACK)(int cmock_num_calls);
void CySysTickGetValue_StubWithCallback(CMOCK_CySysTickGetValue_CALLBACK Callback);
#define CySysTickSetCallback_IgnoreAndReturn(cmock_retval) CySysTickSetCallback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CySysTickSetCallback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cySysTickCallback cmock_to_return);
#define CySysTickSetCallback_ExpectAndReturn(number, function, cmock_retval) CySysTickSetCallback_CMockExpectAndReturn(__LINE__, number, function, cmock_retval)
void CySysTickSetCallback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 number, cySysTickCallback function, cySysTickCallback cmock_to_return);
typedef cySysTickCallback (* CMOCK_CySysTickSetCallback_CALLBACK)(uint32 number, cySysTickCallback function, int cmock_num_calls);
void CySysTickSetCallback_StubWithCallback(CMOCK_CySysTickSetCallback_CALLBACK Callback);
#define CySysTickGetCallback_IgnoreAndReturn(cmock_retval) CySysTickGetCallback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CySysTickGetCallback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, cySysTickCallback cmock_to_return);
#define CySysTickGetCallback_ExpectAndReturn(number, cmock_retval) CySysTickGetCallback_CMockExpectAndReturn(__LINE__, number, cmock_retval)
void CySysTickGetCallback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 number, cySysTickCallback cmock_to_return);
typedef cySysTickCallback (* CMOCK_CySysTickGetCallback_CALLBACK)(uint32 number, int cmock_num_calls);
void CySysTickGetCallback_StubWithCallback(CMOCK_CySysTickGetCallback_CALLBACK Callback);
#define CySysTickSetClockSource_Ignore() CySysTickSetClockSource_CMockIgnore()
void CySysTickSetClockSource_CMockIgnore(void);
#define CySysTickSetClockSource_Expect(clockSource) CySysTickSetClockSource_CMockExpect(__LINE__, clockSource)
void CySysTickSetClockSource_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32 clockSource);
typedef void (* CMOCK_CySysTickSetClockSource_CALLBACK)(uint32 clockSource, int cmock_num_calls);
void CySysTickSetClockSource_StubWithCallback(CMOCK_CySysTickSetClockSource_CALLBACK Callback);
#define CySysTickGetCountFlag_IgnoreAndReturn(cmock_retval) CySysTickGetCountFlag_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CySysTickGetCountFlag_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
#define CySysTickGetCountFlag_ExpectAndReturn(cmock_retval) CySysTickGetCountFlag_CMockExpectAndReturn(__LINE__, cmock_retval)
void CySysTickGetCountFlag_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32 cmock_to_return);
typedef uint32 (* CMOCK_CySysTickGetCountFlag_CALLBACK)(int cmock_num_calls);
void CySysTickGetCountFlag_StubWithCallback(CMOCK_CySysTickGetCountFlag_CALLBACK Callback);
#define CySysTickClear_Ignore() CySysTickClear_CMockIgnore()
void CySysTickClear_CMockIgnore(void);
#define CySysTickClear_Expect() CySysTickClear_CMockExpect(__LINE__)
void CySysTickClear_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_CySysTickClear_CALLBACK)(int cmock_num_calls);
void CySysTickClear_StubWithCallback(CMOCK_CySysTickClear_CALLBACK Callback);
#define CyGetUniqueId_Ignore() CyGetUniqueId_CMockIgnore()
void CyGetUniqueId_CMockIgnore(void);
#define CyGetUniqueId_Expect(uniqueId) CyGetUniqueId_CMockExpect(__LINE__, uniqueId)
void CyGetUniqueId_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32* uniqueId);
typedef void (* CMOCK_CyGetUniqueId_CALLBACK)(uint32* uniqueId, int cmock_num_calls);
void CyGetUniqueId_StubWithCallback(CMOCK_CyGetUniqueId_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
