ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Front_Echo_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Front_Echo_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Front_Echo_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Front_Echo_Timer_Enable, %function
  24              	Front_Echo_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Front_Echo_Timer.c"
   1:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * File Name: Front_Echo_Timer.c
   3:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
   5:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  15:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  17:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  24:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #include "Front_Echo_Timer.h"
  25:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  26:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint8 Front_Echo_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  28:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  29:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_Init
  31:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 2


  32:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  33:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  36:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  39:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
  42:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
  45:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(!Front_Echo_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             uint8 Front_Echo_Timer_interruptState;
  48:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  50:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (Front_Echo_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= Front_Echo_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  54:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_CONTROL2 &= ((uint8)(~Front_Echo_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  59:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_CONTROL3 &= ((uint8)(~Front_Echo_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  63:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  69:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  76:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  82:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  84:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL2 |= Front_Echo_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 3


  89:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  90:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 &= ((uint8)(~Front_Echo_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 |= Front_Echo_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  95:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 &= ((uint8)(~Front_Echo_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 |= Front_Echo_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
  99:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 Front_Echo_Timer_CONTROL3 |= Front_Echo_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 103:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 105:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_RT1 &= ((uint8)(~Front_Echo_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_RT1 |= Front_Echo_Timer_SYNC;
 108:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 109:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_RT1 &= ((uint8)(~Front_Echo_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_RT1 |= Front_Echo_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 113:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL2 |= Front_Echo_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 117:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_WritePeriod(Front_Echo_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_WriteCounter(Front_Echo_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 121:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (Front_Echo_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CAPTURE_COUNT_CTRL |= Front_Echo_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_SetCaptureCount(Front_Echo_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 126:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_SetCaptureMode(Front_Echo_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 131:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 if (0u == (Front_Echo_Timer_CONTROL & Front_Echo_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                     Front_Echo_Timer_SetTriggerMode(Front_Echo_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             #endif /* (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 140:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 144:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_STATUS_AUX_CTRL |= Front_Echo_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 4


 146:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 147:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         CyExitCriticalSection(Front_Echo_Timer_interruptState);
 149:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 150:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 		
 154:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 		
 155:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #if (Front_Echo_Timer_InterruptOnCaptureCount && !Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****             Front_Echo_Timer_SetInterruptCount(Front_Echo_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 159:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 162:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_SetInterruptMode(Front_Echo_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 164:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 165:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 166:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_Enable
 168:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 170:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 173:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 176:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 179:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE1:
  35              		.size	Front_Echo_Timer_Enable, .-Front_Echo_Timer_Enable
  36 0002 00BF     		.section	.text.Front_Echo_Timer_Stop,"ax",%progbits
  37              		.align	2
  38              		.global	Front_Echo_Timer_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	Front_Echo_Timer_Stop, %function
  42              	Front_Echo_Timer_Stop:
  43              	.LFB3:
 182:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (Front_Echo_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_GLOBAL_ENABLE |= Front_Echo_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_GLOBAL_STBY_ENABLE |= Front_Echo_Timer_BLOCK_STBY_EN_MASK;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 5


 186:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 188:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED || Front_Echo_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL |= Front_Echo_Timer_CTRL_ENABLE;
 191:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 193:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 194:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 195:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_Start
 197:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 199:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 204:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 207:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 210:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Front_Echo_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 214:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 217:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     if(Front_Echo_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     {
 219:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_Init();
 220:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 221:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     }
 223:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 224:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_Enable();
 226:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 227:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 228:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 229:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_Stop
 231:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 233:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 237:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 240:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 6


 243:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 246:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
  44              		.loc 1 248 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE3:
  52              		.size	Front_Echo_Timer_Stop, .-Front_Echo_Timer_Stop
  53 0002 00BF     		.section	.text.Front_Echo_Timer_SetInterruptMode,"ax",%progbits
  54              		.align	2
  55              		.global	Front_Echo_Timer_SetInterruptMode
  56              		.thumb
  57              		.thumb_func
  58              		.type	Front_Echo_Timer_SetInterruptMode, %function
  59              	Front_Echo_Timer_SetInterruptMode:
  60              	.LFB4:
 249:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED || Front_Echo_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= ((uint8)(~Front_Echo_Timer_CTRL_ENABLE));
 252:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 254:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (Front_Echo_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_GLOBAL_ENABLE &= ((uint8)(~Front_Echo_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Front_Echo_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 260:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 261:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 262:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 266:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 271:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 275:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 278:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
  61              		.loc 1 280 0
  62              		.cfi_startproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 7


  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL0:
 281:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_STATUS_MASK = interruptMode;
  67              		.loc 1 281 0
  68 0000 014B     		ldr	r3, .L4
  69 0002 1870     		strb	r0, [r3]
  70 0004 7047     		bx	lr
  71              	.L5:
  72 0006 00BF     		.align	2
  73              	.L4:
  74 0008 8A640040 		.word	1073767562
  75              		.cfi_endproc
  76              	.LFE4:
  77              		.size	Front_Echo_Timer_SetInterruptMode, .-Front_Echo_Timer_SetInterruptMode
  78              		.section	.text.Front_Echo_Timer_SoftwareCapture,"ax",%progbits
  79              		.align	2
  80              		.global	Front_Echo_Timer_SoftwareCapture
  81              		.thumb
  82              		.thumb_func
  83              		.type	Front_Echo_Timer_SoftwareCapture, %function
  84              	Front_Echo_Timer_SoftwareCapture:
  85              	.LFB5:
 282:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 283:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 284:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 285:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 289:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 292:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 295:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 298:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 301:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
  86              		.loc 1 303 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(Front_Echo_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         (void)CY_GET_REG16(Front_Echo_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         (void)CY_GET_REG8(Front_Echo_Timer_COUNTER_LSB_PTR_8BIT);
  91              		.loc 1 308 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 8


  92 0000 014B     		ldr	r3, .L7
  93 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94 0004 7047     		bx	lr
  95              	.L8:
  96 0006 00BF     		.align	2
  97              	.L7:
  98 0008 0C640040 		.word	1073767436
  99              		.cfi_endproc
 100              	.LFE5:
 101              		.size	Front_Echo_Timer_SoftwareCapture, .-Front_Echo_Timer_SoftwareCapture
 102              		.section	.text.Front_Echo_Timer_ReadStatusRegister,"ax",%progbits
 103              		.align	2
 104              		.global	Front_Echo_Timer_ReadStatusRegister
 105              		.thumb
 106              		.thumb_func
 107              		.type	Front_Echo_Timer_ReadStatusRegister, %function
 108              	Front_Echo_Timer_ReadStatusRegister:
 109              	.LFB6:
 309:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif/* (Front_Echo_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 312:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 313:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 314:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 318:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 323:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 326:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 329:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 332:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint8   Front_Echo_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 110              		.loc 1 334 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     return (Front_Echo_Timer_STATUS);
 115              		.loc 1 335 0
 116 0000 014B     		ldr	r3, .L10
 117 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 118              		.loc 1 336 0
 119 0004 7047     		bx	lr
 120              	.L11:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 9


 121 0006 00BF     		.align	2
 122              	.L10:
 123 0008 6A640040 		.word	1073767530
 124              		.cfi_endproc
 125              	.LFE6:
 126              		.size	Front_Echo_Timer_ReadStatusRegister, .-Front_Echo_Timer_ReadStatusRegister
 127              		.section	.text.Front_Echo_Timer_ReadPeriod,"ax",%progbits
 128              		.align	2
 129              		.global	Front_Echo_Timer_ReadPeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	Front_Echo_Timer_ReadPeriod, %function
 133              	Front_Echo_Timer_ReadPeriod:
 134              	.LFB7:
 337:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 338:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 339:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 341:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 342:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 346:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 349:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 352:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 355:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint8 Front_Echo_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 358:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         return ((uint8)Front_Echo_Timer_CONTROL);
 360:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 364:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 365:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 366:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 370:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 373:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 376:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 378:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 10


 380:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 381:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL = control;
 383:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 387:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 388:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 390:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 391:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 395:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 398:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 401:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 404:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint16 Front_Echo_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 135              		.loc 1 406 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #if(Front_Echo_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Front_Echo_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****        return (CY_GET_REG16(Front_Echo_Timer_PERIOD_LSB_PTR));
 140              		.loc 1 410 0
 141 0000 014B     		ldr	r3, .L13
 142 0002 1888     		ldrh	r0, [r3]
 411:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #endif /* (Front_Echo_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 143              		.loc 1 412 0
 144 0004 80B2     		uxth	r0, r0
 145 0006 7047     		bx	lr
 146              	.L14:
 147              		.align	2
 148              	.L13:
 149 0008 58680040 		.word	1073768536
 150              		.cfi_endproc
 151              	.LFE7:
 152              		.size	Front_Echo_Timer_ReadPeriod, .-Front_Echo_Timer_ReadPeriod
 153              		.section	.text.Front_Echo_Timer_WritePeriod,"ax",%progbits
 154              		.align	2
 155              		.global	Front_Echo_Timer_WritePeriod
 156              		.thumb
 157              		.thumb_func
 158              		.type	Front_Echo_Timer_WritePeriod, %function
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 11


 159              	Front_Echo_Timer_WritePeriod:
 160              	.LFB8:
 413:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 414:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 415:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 419:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 423:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 427:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 430:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_WritePeriod(uint16 period) 
 432:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 161              		.loc 1 432 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL1:
 433:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(Front_Echo_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         CY_SET_REG16(Front_Echo_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         CY_SET_REG16(Front_Echo_Timer_PERIOD_LSB_PTR, period);
 167              		.loc 1 437 0
 168 0000 014B     		ldr	r3, .L16
 169 0002 1880     		strh	r0, [r3]	@ movhi
 170 0004 7047     		bx	lr
 171              	.L17:
 172 0006 00BF     		.align	2
 173              	.L16:
 174 0008 58680040 		.word	1073768536
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	Front_Echo_Timer_WritePeriod, .-Front_Echo_Timer_WritePeriod
 178              		.section	.text.Front_Echo_Timer_ReadCapture,"ax",%progbits
 179              		.align	2
 180              		.global	Front_Echo_Timer_ReadCapture
 181              		.thumb
 182              		.thumb_func
 183              		.type	Front_Echo_Timer_ReadCapture, %function
 184              	Front_Echo_Timer_ReadCapture:
 185              	.LFB9:
 438:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 440:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 441:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 442:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 12


 443:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 446:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 449:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 452:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 455:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint16 Front_Echo_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 186              		.loc 1 457 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #if(Front_Echo_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Front_Echo_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****        return (CY_GET_REG16(Front_Echo_Timer_CAPTURE_LSB_PTR));
 191              		.loc 1 461 0
 192 0000 014B     		ldr	r3, .L19
 193 0002 1888     		ldrh	r0, [r3]
 462:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #endif /* (Front_Echo_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 194              		.loc 1 463 0
 195 0004 80B2     		uxth	r0, r0
 196 0006 7047     		bx	lr
 197              	.L20:
 198              		.align	2
 199              	.L19:
 200 0008 98680040 		.word	1073768600
 201              		.cfi_endproc
 202              	.LFE9:
 203              		.size	Front_Echo_Timer_ReadCapture, .-Front_Echo_Timer_ReadCapture
 204              		.section	.text.Front_Echo_Timer_WriteCounter,"ax",%progbits
 205              		.align	2
 206              		.global	Front_Echo_Timer_WriteCounter
 207              		.thumb
 208              		.thumb_func
 209              		.type	Front_Echo_Timer_WriteCounter, %function
 210              	Front_Echo_Timer_WriteCounter:
 211              	.LFB10:
 464:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 465:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 466:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 470:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 473:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 13


 474:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 476:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 479:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 212              		.loc 1 481 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL2:
 482:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****    #if(Front_Echo_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****          */
 486:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         CY_SET_REG16(Front_Echo_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         
 488:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         CY_SET_REG16(Front_Echo_Timer_COUNTER_LSB_PTR, counter);
 218              		.loc 1 489 0
 219 0000 014B     		ldr	r3, .L22
 220 0002 1880     		strh	r0, [r3]	@ movhi
 221 0004 7047     		bx	lr
 222              	.L23:
 223 0006 00BF     		.align	2
 224              	.L22:
 225 0008 18680040 		.word	1073768472
 226              		.cfi_endproc
 227              	.LFE10:
 228              		.size	Front_Echo_Timer_WriteCounter, .-Front_Echo_Timer_WriteCounter
 229              		.section	.text.Front_Echo_Timer_ReadCounter,"ax",%progbits
 230              		.align	2
 231              		.global	Front_Echo_Timer_ReadCounter
 232              		.thumb
 233              		.thumb_func
 234              		.type	Front_Echo_Timer_ReadCounter, %function
 235              	Front_Echo_Timer_ReadCounter:
 236              	.LFB11:
 490:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 492:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 493:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 494:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 498:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 501:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 504:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Present compare value.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 14


 506:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 507:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint16 Front_Echo_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 237              		.loc 1 509 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(Front_Echo_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         (void)CY_GET_REG16(Front_Echo_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         (void)CY_GET_REG8(Front_Echo_Timer_COUNTER_LSB_PTR_8BIT);
 242              		.loc 1 516 0
 243 0000 024B     		ldr	r3, .L25
 244 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif/* (Front_Echo_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 519:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(Front_Echo_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         return ((uint16)CY_GET_REG16(Front_Echo_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         return (CY_GET_REG16(Front_Echo_Timer_CAPTURE_LSB_PTR));
 245              		.loc 1 523 0
 246 0004 024B     		ldr	r3, .L25+4
 247 0006 1888     		ldrh	r0, [r3]
 524:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* (Front_Echo_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 248              		.loc 1 525 0
 249 0008 80B2     		uxth	r0, r0
 250 000a 7047     		bx	lr
 251              	.L26:
 252              		.align	2
 253              	.L25:
 254 000c 0C640040 		.word	1073767436
 255 0010 98680040 		.word	1073768600
 256              		.cfi_endproc
 257              	.LFE11:
 258              		.size	Front_Echo_Timer_ReadCounter, .-Front_Echo_Timer_ReadCounter
 259              		.section	.text.Front_Echo_Timer_EnableTrigger,"ax",%progbits
 260              		.align	2
 261              		.global	Front_Echo_Timer_EnableTrigger
 262              		.thumb
 263              		.thumb_func
 264              		.type	Front_Echo_Timer_EnableTrigger, %function
 265              	Front_Echo_Timer_EnableTrigger:
 266              	.LFB12:
 526:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 527:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 528:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if(!Front_Echo_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 530:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     
 531:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****  * The functions below this point are only available using the UDB
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 15


 533:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 536:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 537:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if (Front_Echo_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 539:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 540:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 544:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 547:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  #define Front_Echo_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #define Front_Echo_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #define Front_Echo_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #define Front_Echo_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #define Front_Echo_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Front_Echo_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Front_Echo_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Front_Echo_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Front_Echo_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 562:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 565:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 568:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Front_Echo_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     captureMode &= (Front_Echo_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 572:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= ((uint8)(~Front_Echo_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 576:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 580:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 582:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 583:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if (Front_Echo_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 585:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 586:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 16


 590:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 593:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #define Front_Echo_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #define Front_Echo_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #define Front_Echo_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #define Front_Echo_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #define Front_Echo_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 601:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 604:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 607:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     triggerMode &= Front_Echo_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 610:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is r
 611:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     
 612:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= ((uint8)(~Front_Echo_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 615:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL |= (triggerMode | Front_Echo_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 619:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 621:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if (Front_Echo_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 623:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 624:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 628:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 631:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 634:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 637:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 267              		.loc 1 639 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 0000 7047     		bx	lr
 273              		.cfi_endproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 17


 274              	.LFE12:
 275              		.size	Front_Echo_Timer_EnableTrigger, .-Front_Echo_Timer_EnableTrigger
 276 0002 00BF     		.section	.text.Front_Echo_Timer_DisableTrigger,"ax",%progbits
 277              		.align	2
 278              		.global	Front_Echo_Timer_DisableTrigger
 279              		.thumb
 280              		.thumb_func
 281              		.type	Front_Echo_Timer_DisableTrigger, %function
 282              	Front_Echo_Timer_DisableTrigger:
 283              	.LFB13:
 640:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is r
 641:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL |= Front_Echo_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 644:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 645:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 646:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 650:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 653:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 656:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 659:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 284              		.loc 1 661 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE13:
 292              		.size	Front_Echo_Timer_DisableTrigger, .-Front_Echo_Timer_DisableTrigger
 293 0002 00BF     		.section	.text.Front_Echo_Timer_ClearFIFO,"ax",%progbits
 294              		.align	2
 295              		.global	Front_Echo_Timer_ClearFIFO
 296              		.thumb
 297              		.thumb_func
 298              		.type	Front_Echo_Timer_ClearFIFO, %function
 299              	Front_Echo_Timer_ClearFIFO:
 300              	.LFB14:
 662:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is 
 663:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= ((uint8)(~Front_Echo_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 666:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 668:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if(Front_Echo_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 18


 670:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 671:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 675:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 678:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 684:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 687:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 690:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     interruptCount &= Front_Echo_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 693:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL &= ((uint8)(~Front_Echo_Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         Front_Echo_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* (!Front_Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 700:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Front_Echo_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 702:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 703:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #if (Front_Echo_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 705:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 706:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 710:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 713:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 718:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 721:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 724:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 726:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 19


 727:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 728:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 732:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 735:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 738:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 741:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** uint8 Front_Echo_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 744:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     return ((uint8)Front_Echo_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 746:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** #endif /* Front_Echo_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 748:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 749:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Function Name: Front_Echo_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 753:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 756:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 759:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *
 762:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** void Front_Echo_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** {
 301              		.loc 1 764 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		.loc 1 764 0
 306 0000 08B5     		push	{r3, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     while(0u != (Front_Echo_Timer_ReadStatusRegister() & Front_Echo_Timer_STATUS_FIFONEMP))
 310              		.loc 1 765 0
 311 0002 01E0     		b	.L30
 312              	.L31:
 766:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     {
 767:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****         (void)Front_Echo_Timer_ReadCapture();
 313              		.loc 1 767 0
 314 0004 FFF7FEFF 		bl	Front_Echo_Timer_ReadCapture
 315              	.LVL3:
 316              	.L30:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 20


 765:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     while(0u != (Front_Echo_Timer_ReadStatusRegister() & Front_Echo_Timer_STATUS_FIFONEMP))
 317              		.loc 1 765 0
 318 0008 FFF7FEFF 		bl	Front_Echo_Timer_ReadStatusRegister
 319              	.LVL4:
 320 000c 10F0080F 		tst	r0, #8
 321 0010 F8D1     		bne	.L31
 768:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     }
 769:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 322              		.loc 1 769 0
 323 0012 08BD     		pop	{r3, pc}
 324              		.cfi_endproc
 325              	.LFE14:
 326              		.size	Front_Echo_Timer_ClearFIFO, .-Front_Echo_Timer_ClearFIFO
 327              		.section	.text.Front_Echo_Timer_Init,"ax",%progbits
 328              		.align	2
 329              		.global	Front_Echo_Timer_Init
 330              		.thumb
 331              		.thumb_func
 332              		.type	Front_Echo_Timer_Init, %function
 333              	Front_Echo_Timer_Init:
 334              	.LFB0:
  44:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #if(!Front_Echo_Timer_UsingFixedFunction)
 335              		.loc 1 44 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     Front_Echo_Timer_WriteCounter(Front_Echo_Timer_INIT_PERIOD);
 343              		.loc 1 118 0
 344 0002 40F6B730 		movw	r0, #2999
 345 0006 FFF7FEFF 		bl	Front_Echo_Timer_WritePeriod
 346              	.LVL5:
 119:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 347              		.loc 1 119 0
 348 000a 40F6B730 		movw	r0, #2999
 349 000e FFF7FEFF 		bl	Front_Echo_Timer_WriteCounter
 350              	.LVL6:
 142:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 351              		.loc 1 142 0
 352 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 353              	.LVL7:
 145:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 354              		.loc 1 145 0
 355 0016 064A     		ldr	r2, .L35
 356 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 357 001a 43F01003 		orr	r3, r3, #16
 358 001e 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 359              		.loc 1 148 0
 360 0020 FFF7FEFF 		bl	CyExitCriticalSection
 361              	.LVL8:
 159:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 362              		.loc 1 159 0
 363 0024 FFF7FEFF 		bl	Front_Echo_Timer_ClearFIFO
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 21


 364              	.LVL9:
 162:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** }
 365              		.loc 1 162 0
 366 0028 0120     		movs	r0, #1
 367 002a FFF7FEFF 		bl	Front_Echo_Timer_SetInterruptMode
 368              	.LVL10:
 369 002e 08BD     		pop	{r3, pc}
 370              	.L36:
 371              		.align	2
 372              	.L35:
 373 0030 9A640040 		.word	1073767578
 374              		.cfi_endproc
 375              	.LFE0:
 376              		.size	Front_Echo_Timer_Init, .-Front_Echo_Timer_Init
 377              		.section	.text.Front_Echo_Timer_Start,"ax",%progbits
 378              		.align	2
 379              		.global	Front_Echo_Timer_Start
 380              		.thumb
 381              		.thumb_func
 382              		.type	Front_Echo_Timer_Start, %function
 383              	Front_Echo_Timer_Start:
 384              	.LFB2:
 216:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     if(Front_Echo_Timer_initVar == 0u)
 385              		.loc 1 216 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 08B5     		push	{r3, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 3, -8
 392              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     {
 393              		.loc 1 217 0
 394 0002 044B     		ldr	r3, .L40
 395 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 0006 23B9     		cbnz	r3, .L37
 219:.\Generated_Source\PSoC5/Front_Echo_Timer.c **** 
 397              		.loc 1 219 0
 398 0008 FFF7FEFF 		bl	Front_Echo_Timer_Init
 399              	.LVL11:
 221:.\Generated_Source\PSoC5/Front_Echo_Timer.c ****     }
 400              		.loc 1 221 0
 401 000c 0122     		movs	r2, #1
 402 000e 014B     		ldr	r3, .L40
 403 0010 1A70     		strb	r2, [r3]
 404              	.L37:
 405 0012 08BD     		pop	{r3, pc}
 406              	.L41:
 407              		.align	2
 408              	.L40:
 409 0014 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE2:
 412              		.size	Front_Echo_Timer_Start, .-Front_Echo_Timer_Start
 413              		.global	Front_Echo_Timer_initVar
 414              		.bss
 415              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 22


 416              		.type	Front_Echo_Timer_initVar, %object
 417              		.size	Front_Echo_Timer_initVar, 1
 418              	Front_Echo_Timer_initVar:
 419 0000 00       		.space	1
 420              		.text
 421              	.Letext0:
 422              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 423              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 424              		.section	.debug_info,"",%progbits
 425              	.Ldebug_info0:
 426 0000 C7020000 		.4byte	0x2c7
 427 0004 0400     		.2byte	0x4
 428 0006 00000000 		.4byte	.Ldebug_abbrev0
 429 000a 04       		.byte	0x4
 430 000b 01       		.uleb128 0x1
 431 000c C1010000 		.4byte	.LASF35
 432 0010 01       		.byte	0x1
 433 0011 CA000000 		.4byte	.LASF36
 434 0015 82000000 		.4byte	.LASF37
 435 0019 00000000 		.4byte	.Ldebug_ranges0+0
 436 001d 00000000 		.4byte	0
 437 0021 00000000 		.4byte	.Ldebug_line0
 438 0025 02       		.uleb128 0x2
 439 0026 01       		.byte	0x1
 440 0027 06       		.byte	0x6
 441 0028 A3030000 		.4byte	.LASF0
 442 002c 02       		.uleb128 0x2
 443 002d 01       		.byte	0x1
 444 002e 08       		.byte	0x8
 445 002f 1B010000 		.4byte	.LASF1
 446 0033 02       		.uleb128 0x2
 447 0034 02       		.byte	0x2
 448 0035 05       		.byte	0x5
 449 0036 19030000 		.4byte	.LASF2
 450 003a 02       		.uleb128 0x2
 451 003b 02       		.byte	0x2
 452 003c 07       		.byte	0x7
 453 003d 6F000000 		.4byte	.LASF3
 454 0041 02       		.uleb128 0x2
 455 0042 04       		.byte	0x4
 456 0043 05       		.byte	0x5
 457 0044 3F030000 		.4byte	.LASF4
 458 0048 02       		.uleb128 0x2
 459 0049 04       		.byte	0x4
 460 004a 07       		.byte	0x7
 461 004b 2E010000 		.4byte	.LASF5
 462 004f 02       		.uleb128 0x2
 463 0050 08       		.byte	0x8
 464 0051 05       		.byte	0x5
 465 0052 00000000 		.4byte	.LASF6
 466 0056 02       		.uleb128 0x2
 467 0057 08       		.byte	0x8
 468 0058 07       		.byte	0x7
 469 0059 04010000 		.4byte	.LASF7
 470 005d 03       		.uleb128 0x3
 471 005e 04       		.byte	0x4
 472 005f 05       		.byte	0x5
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 23


 473 0060 696E7400 		.ascii	"int\000"
 474 0064 02       		.uleb128 0x2
 475 0065 04       		.byte	0x4
 476 0066 07       		.byte	0x7
 477 0067 83020000 		.4byte	.LASF8
 478 006b 04       		.uleb128 0x4
 479 006c 5C010000 		.4byte	.LASF9
 480 0070 02       		.byte	0x2
 481 0071 3801     		.2byte	0x138
 482 0073 2C000000 		.4byte	0x2c
 483 0077 04       		.uleb128 0x4
 484 0078 BA010000 		.4byte	.LASF10
 485 007c 02       		.byte	0x2
 486 007d 3901     		.2byte	0x139
 487 007f 3A000000 		.4byte	0x3a
 488 0083 02       		.uleb128 0x2
 489 0084 04       		.byte	0x4
 490 0085 04       		.byte	0x4
 491 0086 F6000000 		.4byte	.LASF11
 492 008a 02       		.uleb128 0x2
 493 008b 08       		.byte	0x8
 494 008c 04       		.byte	0x4
 495 008d B3010000 		.4byte	.LASF12
 496 0091 02       		.uleb128 0x2
 497 0092 01       		.byte	0x1
 498 0093 08       		.byte	0x8
 499 0094 0E000000 		.4byte	.LASF13
 500 0098 04       		.uleb128 0x4
 501 0099 29010000 		.4byte	.LASF14
 502 009d 02       		.byte	0x2
 503 009e E201     		.2byte	0x1e2
 504 00a0 A4000000 		.4byte	0xa4
 505 00a4 05       		.uleb128 0x5
 506 00a5 6B000000 		.4byte	0x6b
 507 00a9 04       		.uleb128 0x4
 508 00aa 23030000 		.4byte	.LASF15
 509 00ae 02       		.byte	0x2
 510 00af E301     		.2byte	0x1e3
 511 00b1 B5000000 		.4byte	0xb5
 512 00b5 05       		.uleb128 0x5
 513 00b6 77000000 		.4byte	0x77
 514 00ba 02       		.uleb128 0x2
 515 00bb 04       		.byte	0x4
 516 00bc 07       		.byte	0x7
 517 00bd BF020000 		.4byte	.LASF16
 518 00c1 06       		.uleb128 0x6
 519 00c2 50000000 		.4byte	.LASF17
 520 00c6 01       		.byte	0x1
 521 00c7 B4       		.byte	0xb4
 522 00c8 00000000 		.4byte	.LFB1
 523 00cc 02000000 		.4byte	.LFE1-.LFB1
 524 00d0 01       		.uleb128 0x1
 525 00d1 9C       		.byte	0x9c
 526 00d2 06       		.uleb128 0x6
 527 00d3 B4000000 		.4byte	.LASF18
 528 00d7 01       		.byte	0x1
 529 00d8 F7       		.byte	0xf7
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 24


 530 00d9 00000000 		.4byte	.LFB3
 531 00dd 02000000 		.4byte	.LFE3-.LFB3
 532 00e1 01       		.uleb128 0x1
 533 00e2 9C       		.byte	0x9c
 534 00e3 07       		.uleb128 0x7
 535 00e4 E9020000 		.4byte	.LASF22
 536 00e8 01       		.byte	0x1
 537 00e9 1701     		.2byte	0x117
 538 00eb 00000000 		.4byte	.LFB4
 539 00ef 0C000000 		.4byte	.LFE4-.LFB4
 540 00f3 01       		.uleb128 0x1
 541 00f4 9C       		.byte	0x9c
 542 00f5 08010000 		.4byte	0x108
 543 00f9 08       		.uleb128 0x8
 544 00fa 0B030000 		.4byte	.LASF24
 545 00fe 01       		.byte	0x1
 546 00ff 1701     		.2byte	0x117
 547 0101 6B000000 		.4byte	0x6b
 548 0105 01       		.uleb128 0x1
 549 0106 50       		.byte	0x50
 550 0107 00       		.byte	0
 551 0108 09       		.uleb128 0x9
 552 0109 C8020000 		.4byte	.LASF19
 553 010d 01       		.byte	0x1
 554 010e 2E01     		.2byte	0x12e
 555 0110 00000000 		.4byte	.LFB5
 556 0114 0C000000 		.4byte	.LFE5-.LFB5
 557 0118 01       		.uleb128 0x1
 558 0119 9C       		.byte	0x9c
 559 011a 0A       		.uleb128 0xa
 560 011b AF030000 		.4byte	.LASF20
 561 011f 01       		.byte	0x1
 562 0120 4D01     		.2byte	0x14d
 563 0122 6B000000 		.4byte	0x6b
 564 0126 00000000 		.4byte	.LFB6
 565 012a 0C000000 		.4byte	.LFE6-.LFB6
 566 012e 01       		.uleb128 0x1
 567 012f 9C       		.byte	0x9c
 568 0130 0A       		.uleb128 0xa
 569 0131 40010000 		.4byte	.LASF21
 570 0135 01       		.byte	0x1
 571 0136 9501     		.2byte	0x195
 572 0138 77000000 		.4byte	0x77
 573 013c 00000000 		.4byte	.LFB7
 574 0140 0C000000 		.4byte	.LFE7-.LFB7
 575 0144 01       		.uleb128 0x1
 576 0145 9C       		.byte	0x9c
 577 0146 07       		.uleb128 0x7
 578 0147 66020000 		.4byte	.LASF23
 579 014b 01       		.byte	0x1
 580 014c AF01     		.2byte	0x1af
 581 014e 00000000 		.4byte	.LFB8
 582 0152 0C000000 		.4byte	.LFE8-.LFB8
 583 0156 01       		.uleb128 0x1
 584 0157 9C       		.byte	0x9c
 585 0158 6B010000 		.4byte	0x16b
 586 015c 08       		.uleb128 0x8
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 25


 587 015d 68000000 		.4byte	.LASF25
 588 0161 01       		.byte	0x1
 589 0162 AF01     		.2byte	0x1af
 590 0164 77000000 		.4byte	0x77
 591 0168 01       		.uleb128 0x1
 592 0169 50       		.byte	0x50
 593 016a 00       		.byte	0
 594 016b 0A       		.uleb128 0xa
 595 016c 13000000 		.4byte	.LASF26
 596 0170 01       		.byte	0x1
 597 0171 C801     		.2byte	0x1c8
 598 0173 77000000 		.4byte	0x77
 599 0177 00000000 		.4byte	.LFB9
 600 017b 0C000000 		.4byte	.LFE9-.LFB9
 601 017f 01       		.uleb128 0x1
 602 0180 9C       		.byte	0x9c
 603 0181 07       		.uleb128 0x7
 604 0182 68030000 		.4byte	.LASF27
 605 0186 01       		.byte	0x1
 606 0187 E001     		.2byte	0x1e0
 607 0189 00000000 		.4byte	.LFB10
 608 018d 0C000000 		.4byte	.LFE10-.LFB10
 609 0191 01       		.uleb128 0x1
 610 0192 9C       		.byte	0x9c
 611 0193 A6010000 		.4byte	0x1a6
 612 0197 08       		.uleb128 0x8
 613 0198 FC000000 		.4byte	.LASF28
 614 019c 01       		.byte	0x1
 615 019d E001     		.2byte	0x1e0
 616 019f 77000000 		.4byte	0x77
 617 01a3 01       		.uleb128 0x1
 618 01a4 50       		.byte	0x50
 619 01a5 00       		.byte	0
 620 01a6 0A       		.uleb128 0xa
 621 01a7 86030000 		.4byte	.LASF29
 622 01ab 01       		.byte	0x1
 623 01ac FC01     		.2byte	0x1fc
 624 01ae 77000000 		.4byte	0x77
 625 01b2 00000000 		.4byte	.LFB11
 626 01b6 14000000 		.4byte	.LFE11-.LFB11
 627 01ba 01       		.uleb128 0x1
 628 01bb 9C       		.byte	0x9c
 629 01bc 09       		.uleb128 0x9
 630 01bd 79010000 		.4byte	.LASF30
 631 01c1 01       		.byte	0x1
 632 01c2 7E02     		.2byte	0x27e
 633 01c4 00000000 		.4byte	.LFB12
 634 01c8 02000000 		.4byte	.LFE12-.LFB12
 635 01cc 01       		.uleb128 0x1
 636 01cd 9C       		.byte	0x9c
 637 01ce 09       		.uleb128 0x9
 638 01cf 30000000 		.4byte	.LASF31
 639 01d3 01       		.byte	0x1
 640 01d4 9402     		.2byte	0x294
 641 01d6 00000000 		.4byte	.LFB13
 642 01da 02000000 		.4byte	.LFE13-.LFB13
 643 01de 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 26


 644 01df 9C       		.byte	0x9c
 645 01e0 07       		.uleb128 0x7
 646 01e1 98010000 		.4byte	.LASF32
 647 01e5 01       		.byte	0x1
 648 01e6 FB02     		.2byte	0x2fb
 649 01e8 00000000 		.4byte	.LFB14
 650 01ec 14000000 		.4byte	.LFE14-.LFB14
 651 01f0 01       		.uleb128 0x1
 652 01f1 9C       		.byte	0x9c
 653 01f2 09020000 		.4byte	0x209
 654 01f6 0B       		.uleb128 0xb
 655 01f7 08000000 		.4byte	.LVL3
 656 01fb 6B010000 		.4byte	0x16b
 657 01ff 0B       		.uleb128 0xb
 658 0200 0C000000 		.4byte	.LVL4
 659 0204 1A010000 		.4byte	0x11a
 660 0208 00       		.byte	0
 661 0209 0C       		.uleb128 0xc
 662 020a 29030000 		.4byte	.LASF33
 663 020e 01       		.byte	0x1
 664 020f 2B       		.byte	0x2b
 665 0210 00000000 		.4byte	.LFB0
 666 0214 34000000 		.4byte	.LFE0-.LFB0
 667 0218 01       		.uleb128 0x1
 668 0219 9C       		.byte	0x9c
 669 021a 82020000 		.4byte	0x282
 670 021e 0D       		.uleb128 0xd
 671 021f 48030000 		.4byte	.LASF38
 672 0223 01       		.byte	0x1
 673 0224 2F       		.byte	0x2f
 674 0225 6B000000 		.4byte	0x6b
 675 0229 00000000 		.4byte	.LLST0
 676 022d 0E       		.uleb128 0xe
 677 022e 0A000000 		.4byte	.LVL5
 678 0232 46010000 		.4byte	0x146
 679 0236 42020000 		.4byte	0x242
 680 023a 0F       		.uleb128 0xf
 681 023b 01       		.uleb128 0x1
 682 023c 50       		.byte	0x50
 683 023d 03       		.uleb128 0x3
 684 023e 0A       		.byte	0xa
 685 023f B70B     		.2byte	0xbb7
 686 0241 00       		.byte	0
 687 0242 0E       		.uleb128 0xe
 688 0243 12000000 		.4byte	.LVL6
 689 0247 81010000 		.4byte	0x181
 690 024b 57020000 		.4byte	0x257
 691 024f 0F       		.uleb128 0xf
 692 0250 01       		.uleb128 0x1
 693 0251 50       		.byte	0x50
 694 0252 03       		.uleb128 0x3
 695 0253 0A       		.byte	0xa
 696 0254 B70B     		.2byte	0xbb7
 697 0256 00       		.byte	0
 698 0257 0B       		.uleb128 0xb
 699 0258 16000000 		.4byte	.LVL7
 700 025c B2020000 		.4byte	0x2b2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 27


 701 0260 0B       		.uleb128 0xb
 702 0261 24000000 		.4byte	.LVL8
 703 0265 BD020000 		.4byte	0x2bd
 704 0269 0B       		.uleb128 0xb
 705 026a 28000000 		.4byte	.LVL9
 706 026e E0010000 		.4byte	0x1e0
 707 0272 10       		.uleb128 0x10
 708 0273 2E000000 		.4byte	.LVL10
 709 0277 E3000000 		.4byte	0xe3
 710 027b 0F       		.uleb128 0xf
 711 027c 01       		.uleb128 0x1
 712 027d 50       		.byte	0x50
 713 027e 01       		.uleb128 0x1
 714 027f 31       		.byte	0x31
 715 0280 00       		.byte	0
 716 0281 00       		.byte	0
 717 0282 0C       		.uleb128 0xc
 718 0283 62010000 		.4byte	.LASF34
 719 0287 01       		.byte	0x1
 720 0288 D7       		.byte	0xd7
 721 0289 00000000 		.4byte	.LFB2
 722 028d 18000000 		.4byte	.LFE2-.LFB2
 723 0291 01       		.uleb128 0x1
 724 0292 9C       		.byte	0x9c
 725 0293 A1020000 		.4byte	0x2a1
 726 0297 0B       		.uleb128 0xb
 727 0298 0C000000 		.4byte	.LVL11
 728 029c 09020000 		.4byte	0x209
 729 02a0 00       		.byte	0
 730 02a1 11       		.uleb128 0x11
 731 02a2 A6020000 		.4byte	.LASF39
 732 02a6 01       		.byte	0x1
 733 02a7 1A       		.byte	0x1a
 734 02a8 6B000000 		.4byte	0x6b
 735 02ac 05       		.uleb128 0x5
 736 02ad 03       		.byte	0x3
 737 02ae 00000000 		.4byte	Front_Echo_Timer_initVar
 738 02b2 12       		.uleb128 0x12
 739 02b3 4F020000 		.4byte	.LASF40
 740 02b7 03       		.byte	0x3
 741 02b8 7E       		.byte	0x7e
 742 02b9 6B000000 		.4byte	0x6b
 743 02bd 13       		.uleb128 0x13
 744 02be 90020000 		.4byte	.LASF41
 745 02c2 03       		.byte	0x3
 746 02c3 7F       		.byte	0x7f
 747 02c4 14       		.uleb128 0x14
 748 02c5 6B000000 		.4byte	0x6b
 749 02c9 00       		.byte	0
 750 02ca 00       		.byte	0
 751              		.section	.debug_abbrev,"",%progbits
 752              	.Ldebug_abbrev0:
 753 0000 01       		.uleb128 0x1
 754 0001 11       		.uleb128 0x11
 755 0002 01       		.byte	0x1
 756 0003 25       		.uleb128 0x25
 757 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 28


 758 0005 13       		.uleb128 0x13
 759 0006 0B       		.uleb128 0xb
 760 0007 03       		.uleb128 0x3
 761 0008 0E       		.uleb128 0xe
 762 0009 1B       		.uleb128 0x1b
 763 000a 0E       		.uleb128 0xe
 764 000b 55       		.uleb128 0x55
 765 000c 17       		.uleb128 0x17
 766 000d 11       		.uleb128 0x11
 767 000e 01       		.uleb128 0x1
 768 000f 10       		.uleb128 0x10
 769 0010 17       		.uleb128 0x17
 770 0011 00       		.byte	0
 771 0012 00       		.byte	0
 772 0013 02       		.uleb128 0x2
 773 0014 24       		.uleb128 0x24
 774 0015 00       		.byte	0
 775 0016 0B       		.uleb128 0xb
 776 0017 0B       		.uleb128 0xb
 777 0018 3E       		.uleb128 0x3e
 778 0019 0B       		.uleb128 0xb
 779 001a 03       		.uleb128 0x3
 780 001b 0E       		.uleb128 0xe
 781 001c 00       		.byte	0
 782 001d 00       		.byte	0
 783 001e 03       		.uleb128 0x3
 784 001f 24       		.uleb128 0x24
 785 0020 00       		.byte	0
 786 0021 0B       		.uleb128 0xb
 787 0022 0B       		.uleb128 0xb
 788 0023 3E       		.uleb128 0x3e
 789 0024 0B       		.uleb128 0xb
 790 0025 03       		.uleb128 0x3
 791 0026 08       		.uleb128 0x8
 792 0027 00       		.byte	0
 793 0028 00       		.byte	0
 794 0029 04       		.uleb128 0x4
 795 002a 16       		.uleb128 0x16
 796 002b 00       		.byte	0
 797 002c 03       		.uleb128 0x3
 798 002d 0E       		.uleb128 0xe
 799 002e 3A       		.uleb128 0x3a
 800 002f 0B       		.uleb128 0xb
 801 0030 3B       		.uleb128 0x3b
 802 0031 05       		.uleb128 0x5
 803 0032 49       		.uleb128 0x49
 804 0033 13       		.uleb128 0x13
 805 0034 00       		.byte	0
 806 0035 00       		.byte	0
 807 0036 05       		.uleb128 0x5
 808 0037 35       		.uleb128 0x35
 809 0038 00       		.byte	0
 810 0039 49       		.uleb128 0x49
 811 003a 13       		.uleb128 0x13
 812 003b 00       		.byte	0
 813 003c 00       		.byte	0
 814 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 29


 815 003e 2E       		.uleb128 0x2e
 816 003f 00       		.byte	0
 817 0040 3F       		.uleb128 0x3f
 818 0041 19       		.uleb128 0x19
 819 0042 03       		.uleb128 0x3
 820 0043 0E       		.uleb128 0xe
 821 0044 3A       		.uleb128 0x3a
 822 0045 0B       		.uleb128 0xb
 823 0046 3B       		.uleb128 0x3b
 824 0047 0B       		.uleb128 0xb
 825 0048 27       		.uleb128 0x27
 826 0049 19       		.uleb128 0x19
 827 004a 11       		.uleb128 0x11
 828 004b 01       		.uleb128 0x1
 829 004c 12       		.uleb128 0x12
 830 004d 06       		.uleb128 0x6
 831 004e 40       		.uleb128 0x40
 832 004f 18       		.uleb128 0x18
 833 0050 9742     		.uleb128 0x2117
 834 0052 19       		.uleb128 0x19
 835 0053 00       		.byte	0
 836 0054 00       		.byte	0
 837 0055 07       		.uleb128 0x7
 838 0056 2E       		.uleb128 0x2e
 839 0057 01       		.byte	0x1
 840 0058 3F       		.uleb128 0x3f
 841 0059 19       		.uleb128 0x19
 842 005a 03       		.uleb128 0x3
 843 005b 0E       		.uleb128 0xe
 844 005c 3A       		.uleb128 0x3a
 845 005d 0B       		.uleb128 0xb
 846 005e 3B       		.uleb128 0x3b
 847 005f 05       		.uleb128 0x5
 848 0060 27       		.uleb128 0x27
 849 0061 19       		.uleb128 0x19
 850 0062 11       		.uleb128 0x11
 851 0063 01       		.uleb128 0x1
 852 0064 12       		.uleb128 0x12
 853 0065 06       		.uleb128 0x6
 854 0066 40       		.uleb128 0x40
 855 0067 18       		.uleb128 0x18
 856 0068 9742     		.uleb128 0x2117
 857 006a 19       		.uleb128 0x19
 858 006b 01       		.uleb128 0x1
 859 006c 13       		.uleb128 0x13
 860 006d 00       		.byte	0
 861 006e 00       		.byte	0
 862 006f 08       		.uleb128 0x8
 863 0070 05       		.uleb128 0x5
 864 0071 00       		.byte	0
 865 0072 03       		.uleb128 0x3
 866 0073 0E       		.uleb128 0xe
 867 0074 3A       		.uleb128 0x3a
 868 0075 0B       		.uleb128 0xb
 869 0076 3B       		.uleb128 0x3b
 870 0077 05       		.uleb128 0x5
 871 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 30


 872 0079 13       		.uleb128 0x13
 873 007a 02       		.uleb128 0x2
 874 007b 18       		.uleb128 0x18
 875 007c 00       		.byte	0
 876 007d 00       		.byte	0
 877 007e 09       		.uleb128 0x9
 878 007f 2E       		.uleb128 0x2e
 879 0080 00       		.byte	0
 880 0081 3F       		.uleb128 0x3f
 881 0082 19       		.uleb128 0x19
 882 0083 03       		.uleb128 0x3
 883 0084 0E       		.uleb128 0xe
 884 0085 3A       		.uleb128 0x3a
 885 0086 0B       		.uleb128 0xb
 886 0087 3B       		.uleb128 0x3b
 887 0088 05       		.uleb128 0x5
 888 0089 27       		.uleb128 0x27
 889 008a 19       		.uleb128 0x19
 890 008b 11       		.uleb128 0x11
 891 008c 01       		.uleb128 0x1
 892 008d 12       		.uleb128 0x12
 893 008e 06       		.uleb128 0x6
 894 008f 40       		.uleb128 0x40
 895 0090 18       		.uleb128 0x18
 896 0091 9742     		.uleb128 0x2117
 897 0093 19       		.uleb128 0x19
 898 0094 00       		.byte	0
 899 0095 00       		.byte	0
 900 0096 0A       		.uleb128 0xa
 901 0097 2E       		.uleb128 0x2e
 902 0098 00       		.byte	0
 903 0099 3F       		.uleb128 0x3f
 904 009a 19       		.uleb128 0x19
 905 009b 03       		.uleb128 0x3
 906 009c 0E       		.uleb128 0xe
 907 009d 3A       		.uleb128 0x3a
 908 009e 0B       		.uleb128 0xb
 909 009f 3B       		.uleb128 0x3b
 910 00a0 05       		.uleb128 0x5
 911 00a1 27       		.uleb128 0x27
 912 00a2 19       		.uleb128 0x19
 913 00a3 49       		.uleb128 0x49
 914 00a4 13       		.uleb128 0x13
 915 00a5 11       		.uleb128 0x11
 916 00a6 01       		.uleb128 0x1
 917 00a7 12       		.uleb128 0x12
 918 00a8 06       		.uleb128 0x6
 919 00a9 40       		.uleb128 0x40
 920 00aa 18       		.uleb128 0x18
 921 00ab 9742     		.uleb128 0x2117
 922 00ad 19       		.uleb128 0x19
 923 00ae 00       		.byte	0
 924 00af 00       		.byte	0
 925 00b0 0B       		.uleb128 0xb
 926 00b1 898201   		.uleb128 0x4109
 927 00b4 00       		.byte	0
 928 00b5 11       		.uleb128 0x11
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 31


 929 00b6 01       		.uleb128 0x1
 930 00b7 31       		.uleb128 0x31
 931 00b8 13       		.uleb128 0x13
 932 00b9 00       		.byte	0
 933 00ba 00       		.byte	0
 934 00bb 0C       		.uleb128 0xc
 935 00bc 2E       		.uleb128 0x2e
 936 00bd 01       		.byte	0x1
 937 00be 3F       		.uleb128 0x3f
 938 00bf 19       		.uleb128 0x19
 939 00c0 03       		.uleb128 0x3
 940 00c1 0E       		.uleb128 0xe
 941 00c2 3A       		.uleb128 0x3a
 942 00c3 0B       		.uleb128 0xb
 943 00c4 3B       		.uleb128 0x3b
 944 00c5 0B       		.uleb128 0xb
 945 00c6 27       		.uleb128 0x27
 946 00c7 19       		.uleb128 0x19
 947 00c8 11       		.uleb128 0x11
 948 00c9 01       		.uleb128 0x1
 949 00ca 12       		.uleb128 0x12
 950 00cb 06       		.uleb128 0x6
 951 00cc 40       		.uleb128 0x40
 952 00cd 18       		.uleb128 0x18
 953 00ce 9742     		.uleb128 0x2117
 954 00d0 19       		.uleb128 0x19
 955 00d1 01       		.uleb128 0x1
 956 00d2 13       		.uleb128 0x13
 957 00d3 00       		.byte	0
 958 00d4 00       		.byte	0
 959 00d5 0D       		.uleb128 0xd
 960 00d6 34       		.uleb128 0x34
 961 00d7 00       		.byte	0
 962 00d8 03       		.uleb128 0x3
 963 00d9 0E       		.uleb128 0xe
 964 00da 3A       		.uleb128 0x3a
 965 00db 0B       		.uleb128 0xb
 966 00dc 3B       		.uleb128 0x3b
 967 00dd 0B       		.uleb128 0xb
 968 00de 49       		.uleb128 0x49
 969 00df 13       		.uleb128 0x13
 970 00e0 02       		.uleb128 0x2
 971 00e1 17       		.uleb128 0x17
 972 00e2 00       		.byte	0
 973 00e3 00       		.byte	0
 974 00e4 0E       		.uleb128 0xe
 975 00e5 898201   		.uleb128 0x4109
 976 00e8 01       		.byte	0x1
 977 00e9 11       		.uleb128 0x11
 978 00ea 01       		.uleb128 0x1
 979 00eb 31       		.uleb128 0x31
 980 00ec 13       		.uleb128 0x13
 981 00ed 01       		.uleb128 0x1
 982 00ee 13       		.uleb128 0x13
 983 00ef 00       		.byte	0
 984 00f0 00       		.byte	0
 985 00f1 0F       		.uleb128 0xf
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 32


 986 00f2 8A8201   		.uleb128 0x410a
 987 00f5 00       		.byte	0
 988 00f6 02       		.uleb128 0x2
 989 00f7 18       		.uleb128 0x18
 990 00f8 9142     		.uleb128 0x2111
 991 00fa 18       		.uleb128 0x18
 992 00fb 00       		.byte	0
 993 00fc 00       		.byte	0
 994 00fd 10       		.uleb128 0x10
 995 00fe 898201   		.uleb128 0x4109
 996 0101 01       		.byte	0x1
 997 0102 11       		.uleb128 0x11
 998 0103 01       		.uleb128 0x1
 999 0104 31       		.uleb128 0x31
 1000 0105 13       		.uleb128 0x13
 1001 0106 00       		.byte	0
 1002 0107 00       		.byte	0
 1003 0108 11       		.uleb128 0x11
 1004 0109 34       		.uleb128 0x34
 1005 010a 00       		.byte	0
 1006 010b 03       		.uleb128 0x3
 1007 010c 0E       		.uleb128 0xe
 1008 010d 3A       		.uleb128 0x3a
 1009 010e 0B       		.uleb128 0xb
 1010 010f 3B       		.uleb128 0x3b
 1011 0110 0B       		.uleb128 0xb
 1012 0111 49       		.uleb128 0x49
 1013 0112 13       		.uleb128 0x13
 1014 0113 3F       		.uleb128 0x3f
 1015 0114 19       		.uleb128 0x19
 1016 0115 02       		.uleb128 0x2
 1017 0116 18       		.uleb128 0x18
 1018 0117 00       		.byte	0
 1019 0118 00       		.byte	0
 1020 0119 12       		.uleb128 0x12
 1021 011a 2E       		.uleb128 0x2e
 1022 011b 00       		.byte	0
 1023 011c 3F       		.uleb128 0x3f
 1024 011d 19       		.uleb128 0x19
 1025 011e 03       		.uleb128 0x3
 1026 011f 0E       		.uleb128 0xe
 1027 0120 3A       		.uleb128 0x3a
 1028 0121 0B       		.uleb128 0xb
 1029 0122 3B       		.uleb128 0x3b
 1030 0123 0B       		.uleb128 0xb
 1031 0124 27       		.uleb128 0x27
 1032 0125 19       		.uleb128 0x19
 1033 0126 49       		.uleb128 0x49
 1034 0127 13       		.uleb128 0x13
 1035 0128 3C       		.uleb128 0x3c
 1036 0129 19       		.uleb128 0x19
 1037 012a 00       		.byte	0
 1038 012b 00       		.byte	0
 1039 012c 13       		.uleb128 0x13
 1040 012d 2E       		.uleb128 0x2e
 1041 012e 01       		.byte	0x1
 1042 012f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 33


 1043 0130 19       		.uleb128 0x19
 1044 0131 03       		.uleb128 0x3
 1045 0132 0E       		.uleb128 0xe
 1046 0133 3A       		.uleb128 0x3a
 1047 0134 0B       		.uleb128 0xb
 1048 0135 3B       		.uleb128 0x3b
 1049 0136 0B       		.uleb128 0xb
 1050 0137 27       		.uleb128 0x27
 1051 0138 19       		.uleb128 0x19
 1052 0139 3C       		.uleb128 0x3c
 1053 013a 19       		.uleb128 0x19
 1054 013b 00       		.byte	0
 1055 013c 00       		.byte	0
 1056 013d 14       		.uleb128 0x14
 1057 013e 05       		.uleb128 0x5
 1058 013f 00       		.byte	0
 1059 0140 49       		.uleb128 0x49
 1060 0141 13       		.uleb128 0x13
 1061 0142 00       		.byte	0
 1062 0143 00       		.byte	0
 1063 0144 00       		.byte	0
 1064              		.section	.debug_loc,"",%progbits
 1065              	.Ldebug_loc0:
 1066              	.LLST0:
 1067 0000 16000000 		.4byte	.LVL7
 1068 0004 23000000 		.4byte	.LVL8-1
 1069 0008 0100     		.2byte	0x1
 1070 000a 50       		.byte	0x50
 1071 000b 00000000 		.4byte	0
 1072 000f 00000000 		.4byte	0
 1073              		.section	.debug_aranges,"",%progbits
 1074 0000 8C000000 		.4byte	0x8c
 1075 0004 0200     		.2byte	0x2
 1076 0006 00000000 		.4byte	.Ldebug_info0
 1077 000a 04       		.byte	0x4
 1078 000b 00       		.byte	0
 1079 000c 0000     		.2byte	0
 1080 000e 0000     		.2byte	0
 1081 0010 00000000 		.4byte	.LFB1
 1082 0014 02000000 		.4byte	.LFE1-.LFB1
 1083 0018 00000000 		.4byte	.LFB3
 1084 001c 02000000 		.4byte	.LFE3-.LFB3
 1085 0020 00000000 		.4byte	.LFB4
 1086 0024 0C000000 		.4byte	.LFE4-.LFB4
 1087 0028 00000000 		.4byte	.LFB5
 1088 002c 0C000000 		.4byte	.LFE5-.LFB5
 1089 0030 00000000 		.4byte	.LFB6
 1090 0034 0C000000 		.4byte	.LFE6-.LFB6
 1091 0038 00000000 		.4byte	.LFB7
 1092 003c 0C000000 		.4byte	.LFE7-.LFB7
 1093 0040 00000000 		.4byte	.LFB8
 1094 0044 0C000000 		.4byte	.LFE8-.LFB8
 1095 0048 00000000 		.4byte	.LFB9
 1096 004c 0C000000 		.4byte	.LFE9-.LFB9
 1097 0050 00000000 		.4byte	.LFB10
 1098 0054 0C000000 		.4byte	.LFE10-.LFB10
 1099 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 34


 1100 005c 14000000 		.4byte	.LFE11-.LFB11
 1101 0060 00000000 		.4byte	.LFB12
 1102 0064 02000000 		.4byte	.LFE12-.LFB12
 1103 0068 00000000 		.4byte	.LFB13
 1104 006c 02000000 		.4byte	.LFE13-.LFB13
 1105 0070 00000000 		.4byte	.LFB14
 1106 0074 14000000 		.4byte	.LFE14-.LFB14
 1107 0078 00000000 		.4byte	.LFB0
 1108 007c 34000000 		.4byte	.LFE0-.LFB0
 1109 0080 00000000 		.4byte	.LFB2
 1110 0084 18000000 		.4byte	.LFE2-.LFB2
 1111 0088 00000000 		.4byte	0
 1112 008c 00000000 		.4byte	0
 1113              		.section	.debug_ranges,"",%progbits
 1114              	.Ldebug_ranges0:
 1115 0000 00000000 		.4byte	.LFB1
 1116 0004 02000000 		.4byte	.LFE1
 1117 0008 00000000 		.4byte	.LFB3
 1118 000c 02000000 		.4byte	.LFE3
 1119 0010 00000000 		.4byte	.LFB4
 1120 0014 0C000000 		.4byte	.LFE4
 1121 0018 00000000 		.4byte	.LFB5
 1122 001c 0C000000 		.4byte	.LFE5
 1123 0020 00000000 		.4byte	.LFB6
 1124 0024 0C000000 		.4byte	.LFE6
 1125 0028 00000000 		.4byte	.LFB7
 1126 002c 0C000000 		.4byte	.LFE7
 1127 0030 00000000 		.4byte	.LFB8
 1128 0034 0C000000 		.4byte	.LFE8
 1129 0038 00000000 		.4byte	.LFB9
 1130 003c 0C000000 		.4byte	.LFE9
 1131 0040 00000000 		.4byte	.LFB10
 1132 0044 0C000000 		.4byte	.LFE10
 1133 0048 00000000 		.4byte	.LFB11
 1134 004c 14000000 		.4byte	.LFE11
 1135 0050 00000000 		.4byte	.LFB12
 1136 0054 02000000 		.4byte	.LFE12
 1137 0058 00000000 		.4byte	.LFB13
 1138 005c 02000000 		.4byte	.LFE13
 1139 0060 00000000 		.4byte	.LFB14
 1140 0064 14000000 		.4byte	.LFE14
 1141 0068 00000000 		.4byte	.LFB0
 1142 006c 34000000 		.4byte	.LFE0
 1143 0070 00000000 		.4byte	.LFB2
 1144 0074 18000000 		.4byte	.LFE2
 1145 0078 00000000 		.4byte	0
 1146 007c 00000000 		.4byte	0
 1147              		.section	.debug_line,"",%progbits
 1148              	.Ldebug_line0:
 1149 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1149      02005A00 
 1149      00000201 
 1149      FB0E0D00 
 1149      01010101 
 1150              	.LASF6:
 1151 0000 6C6F6E67 		.ascii	"long long int\000"
 1151      206C6F6E 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 35


 1151      6720696E 
 1151      7400
 1152              	.LASF13:
 1153 000e 63686172 		.ascii	"char\000"
 1153      00
 1154              	.LASF26:
 1155 0013 46726F6E 		.ascii	"Front_Echo_Timer_ReadCapture\000"
 1155      745F4563 
 1155      686F5F54 
 1155      696D6572 
 1155      5F526561 
 1156              	.LASF31:
 1157 0030 46726F6E 		.ascii	"Front_Echo_Timer_DisableTrigger\000"
 1157      745F4563 
 1157      686F5F54 
 1157      696D6572 
 1157      5F446973 
 1158              	.LASF17:
 1159 0050 46726F6E 		.ascii	"Front_Echo_Timer_Enable\000"
 1159      745F4563 
 1159      686F5F54 
 1159      696D6572 
 1159      5F456E61 
 1160              	.LASF25:
 1161 0068 70657269 		.ascii	"period\000"
 1161      6F6400
 1162              	.LASF3:
 1163 006f 73686F72 		.ascii	"short unsigned int\000"
 1163      7420756E 
 1163      7369676E 
 1163      65642069 
 1163      6E7400
 1164              	.LASF37:
 1165 0082 443A5C70 		.ascii	"D:\\projects\\ArloBot\\arlobot_freesoc\\freesoc.cyd"
 1165      726F6A65 
 1165      6374735C 
 1165      41726C6F 
 1165      426F745C 
 1166 00b1 736E00   		.ascii	"sn\000"
 1167              	.LASF18:
 1168 00b4 46726F6E 		.ascii	"Front_Echo_Timer_Stop\000"
 1168      745F4563 
 1168      686F5F54 
 1168      696D6572 
 1168      5F53746F 
 1169              	.LASF36:
 1170 00ca 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Front_Echo_Timer.c\000"
 1170      6E657261 
 1170      7465645F 
 1170      536F7572 
 1170      63655C50 
 1171              	.LASF11:
 1172 00f6 666C6F61 		.ascii	"float\000"
 1172      7400
 1173              	.LASF28:
 1174 00fc 636F756E 		.ascii	"counter\000"
 1174      74657200 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 36


 1175              	.LASF7:
 1176 0104 6C6F6E67 		.ascii	"long long unsigned int\000"
 1176      206C6F6E 
 1176      6720756E 
 1176      7369676E 
 1176      65642069 
 1177              	.LASF1:
 1178 011b 756E7369 		.ascii	"unsigned char\000"
 1178      676E6564 
 1178      20636861 
 1178      7200
 1179              	.LASF14:
 1180 0129 72656738 		.ascii	"reg8\000"
 1180      00
 1181              	.LASF5:
 1182 012e 6C6F6E67 		.ascii	"long unsigned int\000"
 1182      20756E73 
 1182      69676E65 
 1182      6420696E 
 1182      7400
 1183              	.LASF21:
 1184 0140 46726F6E 		.ascii	"Front_Echo_Timer_ReadPeriod\000"
 1184      745F4563 
 1184      686F5F54 
 1184      696D6572 
 1184      5F526561 
 1185              	.LASF9:
 1186 015c 75696E74 		.ascii	"uint8\000"
 1186      3800
 1187              	.LASF34:
 1188 0162 46726F6E 		.ascii	"Front_Echo_Timer_Start\000"
 1188      745F4563 
 1188      686F5F54 
 1188      696D6572 
 1188      5F537461 
 1189              	.LASF30:
 1190 0179 46726F6E 		.ascii	"Front_Echo_Timer_EnableTrigger\000"
 1190      745F4563 
 1190      686F5F54 
 1190      696D6572 
 1190      5F456E61 
 1191              	.LASF32:
 1192 0198 46726F6E 		.ascii	"Front_Echo_Timer_ClearFIFO\000"
 1192      745F4563 
 1192      686F5F54 
 1192      696D6572 
 1192      5F436C65 
 1193              	.LASF12:
 1194 01b3 646F7562 		.ascii	"double\000"
 1194      6C6500
 1195              	.LASF10:
 1196 01ba 75696E74 		.ascii	"uint16\000"
 1196      313600
 1197              	.LASF35:
 1198 01c1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1198      4320342E 
 1198      392E3320 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 37


 1198      32303135 
 1198      30333033 
 1199 01f4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1199      20726576 
 1199      6973696F 
 1199      6E203232 
 1199      31323230 
 1200 0227 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1200      66756E63 
 1200      74696F6E 
 1200      2D736563 
 1200      74696F6E 
 1201              	.LASF40:
 1202 024f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1202      74657243 
 1202      72697469 
 1202      63616C53 
 1202      65637469 
 1203              	.LASF23:
 1204 0266 46726F6E 		.ascii	"Front_Echo_Timer_WritePeriod\000"
 1204      745F4563 
 1204      686F5F54 
 1204      696D6572 
 1204      5F577269 
 1205              	.LASF8:
 1206 0283 756E7369 		.ascii	"unsigned int\000"
 1206      676E6564 
 1206      20696E74 
 1206      00
 1207              	.LASF41:
 1208 0290 43794578 		.ascii	"CyExitCriticalSection\000"
 1208      69744372 
 1208      69746963 
 1208      616C5365 
 1208      6374696F 
 1209              	.LASF39:
 1210 02a6 46726F6E 		.ascii	"Front_Echo_Timer_initVar\000"
 1210      745F4563 
 1210      686F5F54 
 1210      696D6572 
 1210      5F696E69 
 1211              	.LASF16:
 1212 02bf 73697A65 		.ascii	"sizetype\000"
 1212      74797065 
 1212      00
 1213              	.LASF19:
 1214 02c8 46726F6E 		.ascii	"Front_Echo_Timer_SoftwareCapture\000"
 1214      745F4563 
 1214      686F5F54 
 1214      696D6572 
 1214      5F536F66 
 1215              	.LASF22:
 1216 02e9 46726F6E 		.ascii	"Front_Echo_Timer_SetInterruptMode\000"
 1216      745F4563 
 1216      686F5F54 
 1216      696D6572 
 1216      5F536574 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccO65Qjt.s 			page 38


 1217              	.LASF24:
 1218 030b 696E7465 		.ascii	"interruptMode\000"
 1218      72727570 
 1218      744D6F64 
 1218      6500
 1219              	.LASF2:
 1220 0319 73686F72 		.ascii	"short int\000"
 1220      7420696E 
 1220      7400
 1221              	.LASF15:
 1222 0323 72656731 		.ascii	"reg16\000"
 1222      3600
 1223              	.LASF33:
 1224 0329 46726F6E 		.ascii	"Front_Echo_Timer_Init\000"
 1224      745F4563 
 1224      686F5F54 
 1224      696D6572 
 1224      5F496E69 
 1225              	.LASF4:
 1226 033f 6C6F6E67 		.ascii	"long int\000"
 1226      20696E74 
 1226      00
 1227              	.LASF38:
 1228 0348 46726F6E 		.ascii	"Front_Echo_Timer_interruptState\000"
 1228      745F4563 
 1228      686F5F54 
 1228      696D6572 
 1228      5F696E74 
 1229              	.LASF27:
 1230 0368 46726F6E 		.ascii	"Front_Echo_Timer_WriteCounter\000"
 1230      745F4563 
 1230      686F5F54 
 1230      696D6572 
 1230      5F577269 
 1231              	.LASF29:
 1232 0386 46726F6E 		.ascii	"Front_Echo_Timer_ReadCounter\000"
 1232      745F4563 
 1232      686F5F54 
 1232      696D6572 
 1232      5F526561 
 1233              	.LASF0:
 1234 03a3 7369676E 		.ascii	"signed char\000"
 1234      65642063 
 1234      68617200 
 1235              	.LASF20:
 1236 03af 46726F6E 		.ascii	"Front_Echo_Timer_ReadStatusRegister\000"
 1236      745F4563 
 1236      686F5F54 
 1236      696D6572 
 1236      5F526561 
 1237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
